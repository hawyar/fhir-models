//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/claim.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { FinancialResourceStatusCode_Value, UseCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Address, Attachment, Boolean, Code, CodeableConcept, Date, DateTime, Decimal, Extension, Id, Identifier, Meta, Money, Narrative, Period, PositiveInt, Quantity, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/claim.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_claim: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Claim.
 * Claim, Pre-determination or Pre-authorization.
 * See http://hl7.org/fhir/StructureDefinition/Claim
 *
 * @generated from message google.fhir.r4.core.Claim
 */
export type Claim = Message<"google.fhir.r4.core.Claim"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Business Identifier for claim
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * @generated from field: google.fhir.r4.core.Claim.StatusCode status = 11;
   */
  status?: Claim_StatusCode;

  /**
   * Category or discipline
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * More granular claim type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept sub_type = 13;
   */
  subType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Claim.UseCode use = 14;
   */
  use?: Claim_UseCode;

  /**
   * The recipient of the products and services
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 15;
   */
  patient?: Reference;

  /**
   * Relevant time frame for the claim
   *
   * @generated from field: google.fhir.r4.core.Period billable_period = 16;
   */
  billablePeriod?: Period;

  /**
   * Resource creation date
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 17;
   */
  created?: DateTime;

  /**
   * Author of the claim
   *
   * @generated from field: google.fhir.r4.core.Reference enterer = 18;
   */
  enterer?: Reference;

  /**
   * Target
   *
   * @generated from field: google.fhir.r4.core.Reference insurer = 19;
   */
  insurer?: Reference;

  /**
   * Party responsible for the claim
   *
   * @generated from field: google.fhir.r4.core.Reference provider = 20;
   */
  provider?: Reference;

  /**
   * Desired processing ugency
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 21;
   */
  priority?: CodeableConcept;

  /**
   * For whom to reserve funds
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funds_reserve = 22;
   */
  fundsReserve?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.RelatedClaim related = 23;
   */
  related: Claim_RelatedClaim[];

  /**
   * Prescription authorizing services and products
   *
   * @generated from field: google.fhir.r4.core.Reference prescription = 24;
   */
  prescription?: Reference;

  /**
   * Original prescription if superseded by fulfiller
   *
   * @generated from field: google.fhir.r4.core.Reference original_prescription = 25;
   */
  originalPrescription?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Claim.Payee payee = 26;
   */
  payee?: Claim_Payee;

  /**
   * Treatment referral
   *
   * @generated from field: google.fhir.r4.core.Reference referral = 27;
   */
  referral?: Reference;

  /**
   * Servicing facility
   *
   * @generated from field: google.fhir.r4.core.Reference facility = 28;
   */
  facility?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.CareTeam care_team = 29;
   */
  careTeam: Claim_CareTeam[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.SupportingInformation supporting_info = 30;
   */
  supportingInfo: Claim_SupportingInformation[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Diagnosis diagnosis = 31;
   */
  diagnosis: Claim_Diagnosis[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Procedure procedure = 32;
   */
  procedure: Claim_Procedure[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Insurance insurance = 33;
   */
  insurance: Claim_Insurance[];

  /**
   * @generated from field: google.fhir.r4.core.Claim.Accident accident = 34;
   */
  accident?: Claim_Accident;

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Item item = 35;
   */
  item: Claim_Item[];

  /**
   * Total claim cost
   *
   * @generated from field: google.fhir.r4.core.Money total = 36;
   */
  total?: Money;
};

/**
 * Describes the message google.fhir.r4.core.Claim.
 * Use `create(ClaimSchema)` to create a new message.
 */
export const ClaimSchema: GenMessage<Claim> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0);

/**
 * active | cancelled | draft | entered-in-error
 *
 * @generated from message google.fhir.r4.core.Claim.StatusCode
 */
export type Claim_StatusCode = Message<"google.fhir.r4.core.Claim.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.FinancialResourceStatusCode.Value value = 1;
   */
  value: FinancialResourceStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.StatusCode.
 * Use `create(Claim_StatusCodeSchema)` to create a new message.
 */
export const Claim_StatusCodeSchema: GenMessage<Claim_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 0);

/**
 * claim | preauthorization | predetermination
 *
 * @generated from message google.fhir.r4.core.Claim.UseCode
 */
export type Claim_UseCode = Message<"google.fhir.r4.core.Claim.UseCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.UseCode.Value value = 1;
   */
  value: UseCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.UseCode.
 * Use `create(Claim_UseCodeSchema)` to create a new message.
 */
export const Claim_UseCodeSchema: GenMessage<Claim_UseCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 1);

/**
 * Prior or corollary claims
 *
 * @generated from message google.fhir.r4.core.Claim.RelatedClaim
 */
export type Claim_RelatedClaim = Message<"google.fhir.r4.core.Claim.RelatedClaim"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Reference to the related claim
   *
   * @generated from field: google.fhir.r4.core.Reference claim = 4;
   */
  claim?: Reference;

  /**
   * How the reference claim is related
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept relationship = 5;
   */
  relationship?: CodeableConcept;

  /**
   * File or case reference
   *
   * @generated from field: google.fhir.r4.core.Identifier reference = 6;
   */
  reference?: Identifier;
};

/**
 * Describes the message google.fhir.r4.core.Claim.RelatedClaim.
 * Use `create(Claim_RelatedClaimSchema)` to create a new message.
 */
export const Claim_RelatedClaimSchema: GenMessage<Claim_RelatedClaim> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 2);

/**
 * Recipient of benefits payable
 *
 * @generated from message google.fhir.r4.core.Claim.Payee
 */
export type Claim_Payee = Message<"google.fhir.r4.core.Claim.Payee"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Category of recipient
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Recipient reference
   *
   * @generated from field: google.fhir.r4.core.Reference party = 5;
   */
  party?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Claim.Payee.
 * Use `create(Claim_PayeeSchema)` to create a new message.
 */
export const Claim_PayeeSchema: GenMessage<Claim_Payee> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 3);

/**
 * Members of the care team
 *
 * @generated from message google.fhir.r4.core.Claim.CareTeam
 */
export type Claim_CareTeam = Message<"google.fhir.r4.core.Claim.CareTeam"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Order of care team
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Practitioner or organization
   *
   * @generated from field: google.fhir.r4.core.Reference provider = 5;
   */
  provider?: Reference;

  /**
   * Indicator of the lead practitioner
   *
   * @generated from field: google.fhir.r4.core.Boolean responsible = 6;
   */
  responsible?: Boolean;

  /**
   * Function within the team
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 7;
   */
  role?: CodeableConcept;

  /**
   * Practitioner credential or specialization
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept qualification = 8;
   */
  qualification?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.Claim.CareTeam.
 * Use `create(Claim_CareTeamSchema)` to create a new message.
 */
export const Claim_CareTeamSchema: GenMessage<Claim_CareTeam> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 4);

/**
 * Supporting information
 *
 * @generated from message google.fhir.r4.core.Claim.SupportingInformation
 */
export type Claim_SupportingInformation = Message<"google.fhir.r4.core.Claim.SupportingInformation"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Information instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Classification of the supplied information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Type of information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Claim.SupportingInformation.TimingX timing = 7;
   */
  timing?: Claim_SupportingInformation_TimingX;

  /**
   * @generated from field: google.fhir.r4.core.Claim.SupportingInformation.ValueX value = 8;
   */
  value?: Claim_SupportingInformation_ValueX;

  /**
   * Explanation for the information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason = 9;
   */
  reason?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.Claim.SupportingInformation.
 * Use `create(Claim_SupportingInformationSchema)` to create a new message.
 */
export const Claim_SupportingInformationSchema: GenMessage<Claim_SupportingInformation> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 5);

/**
 * When it occurred
 *
 * @generated from message google.fhir.r4.core.Claim.SupportingInformation.TimingX
 */
export type Claim_SupportingInformation_TimingX = Message<"google.fhir.r4.core.Claim.SupportingInformation.TimingX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.SupportingInformation.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.SupportingInformation.TimingX.
 * Use `create(Claim_SupportingInformation_TimingXSchema)` to create a new message.
 */
export const Claim_SupportingInformation_TimingXSchema: GenMessage<Claim_SupportingInformation_TimingX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 5, 0);

/**
 * Data to be provided
 *
 * @generated from message google.fhir.r4.core.Claim.SupportingInformation.ValueX
 */
export type Claim_SupportingInformation_ValueX = Message<"google.fhir.r4.core.Claim.SupportingInformation.ValueX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.SupportingInformation.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 3;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 4;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 5;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.SupportingInformation.ValueX.
 * Use `create(Claim_SupportingInformation_ValueXSchema)` to create a new message.
 */
export const Claim_SupportingInformation_ValueXSchema: GenMessage<Claim_SupportingInformation_ValueX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 5, 1);

/**
 * Pertinent diagnosis information
 *
 * @generated from message google.fhir.r4.core.Claim.Diagnosis
 */
export type Claim_Diagnosis = Message<"google.fhir.r4.core.Claim.Diagnosis"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Diagnosis instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * @generated from field: google.fhir.r4.core.Claim.Diagnosis.DiagnosisX diagnosis = 5;
   */
  diagnosis?: Claim_Diagnosis_DiagnosisX;

  /**
   * Timing or nature of the diagnosis
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 6;
   */
  type: CodeableConcept[];

  /**
   * Present on admission
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept on_admission = 7;
   */
  onAdmission?: CodeableConcept;

  /**
   * Package billing code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept package_code = 8;
   */
  packageCode?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.Claim.Diagnosis.
 * Use `create(Claim_DiagnosisSchema)` to create a new message.
 */
export const Claim_DiagnosisSchema: GenMessage<Claim_Diagnosis> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 6);

/**
 * Nature of illness or problem
 *
 * @generated from message google.fhir.r4.core.Claim.Diagnosis.DiagnosisX
 */
export type Claim_Diagnosis_DiagnosisX = Message<"google.fhir.r4.core.Claim.Diagnosis.DiagnosisX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.Diagnosis.DiagnosisX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.Diagnosis.DiagnosisX.
 * Use `create(Claim_Diagnosis_DiagnosisXSchema)` to create a new message.
 */
export const Claim_Diagnosis_DiagnosisXSchema: GenMessage<Claim_Diagnosis_DiagnosisX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 6, 0);

/**
 * Clinical procedures performed
 *
 * @generated from message google.fhir.r4.core.Claim.Procedure
 */
export type Claim_Procedure = Message<"google.fhir.r4.core.Claim.Procedure"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Procedure instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Category of Procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 5;
   */
  type: CodeableConcept[];

  /**
   * When the procedure was performed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 6;
   */
  date?: DateTime;

  /**
   * @generated from field: google.fhir.r4.core.Claim.Procedure.ProcedureX procedure = 7;
   */
  procedure?: Claim_Procedure_ProcedureX;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 8;
   */
  udi: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.Procedure.
 * Use `create(Claim_ProcedureSchema)` to create a new message.
 */
export const Claim_ProcedureSchema: GenMessage<Claim_Procedure> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 7);

/**
 * Specific clinical procedure
 *
 * @generated from message google.fhir.r4.core.Claim.Procedure.ProcedureX
 */
export type Claim_Procedure_ProcedureX = Message<"google.fhir.r4.core.Claim.Procedure.ProcedureX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.Procedure.ProcedureX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.Procedure.ProcedureX.
 * Use `create(Claim_Procedure_ProcedureXSchema)` to create a new message.
 */
export const Claim_Procedure_ProcedureXSchema: GenMessage<Claim_Procedure_ProcedureX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 7, 0);

/**
 * Patient insurance information
 *
 * @generated from message google.fhir.r4.core.Claim.Insurance
 */
export type Claim_Insurance = Message<"google.fhir.r4.core.Claim.Insurance"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Insurance instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Coverage to be used for adjudication
   *
   * @generated from field: google.fhir.r4.core.Boolean focal = 5;
   */
  focal?: Boolean;

  /**
   * Pre-assigned Claim number
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 6;
   */
  identifier?: Identifier;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.r4.core.Reference coverage = 7;
   */
  coverage?: Reference;

  /**
   * Additional provider contract number
   *
   * @generated from field: google.fhir.r4.core.String business_arrangement = 8;
   */
  businessArrangement?: String;

  /**
   * Prior authorization reference number
   *
   * @generated from field: repeated google.fhir.r4.core.String pre_auth_ref = 9;
   */
  preAuthRef: String[];

  /**
   * Adjudication results
   *
   * @generated from field: google.fhir.r4.core.Reference claim_response = 10;
   */
  claimResponse?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Claim.Insurance.
 * Use `create(Claim_InsuranceSchema)` to create a new message.
 */
export const Claim_InsuranceSchema: GenMessage<Claim_Insurance> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 8);

/**
 * Details of the event
 *
 * @generated from message google.fhir.r4.core.Claim.Accident
 */
export type Claim_Accident = Message<"google.fhir.r4.core.Claim.Accident"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * When the incident occurred
   *
   * @generated from field: google.fhir.r4.core.Date date = 4;
   */
  date?: Date;

  /**
   * The nature of the accident
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Claim.Accident.LocationX location = 6;
   */
  location?: Claim_Accident_LocationX;
};

/**
 * Describes the message google.fhir.r4.core.Claim.Accident.
 * Use `create(Claim_AccidentSchema)` to create a new message.
 */
export const Claim_AccidentSchema: GenMessage<Claim_Accident> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 9);

/**
 * Where the event occurred
 *
 * @generated from message google.fhir.r4.core.Claim.Accident.LocationX
 */
export type Claim_Accident_LocationX = Message<"google.fhir.r4.core.Claim.Accident.LocationX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.Accident.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 1;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.Accident.LocationX.
 * Use `create(Claim_Accident_LocationXSchema)` to create a new message.
 */
export const Claim_Accident_LocationXSchema: GenMessage<Claim_Accident_LocationX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 9, 0);

/**
 * Product or service provided
 *
 * @generated from message google.fhir.r4.core.Claim.Item
 */
export type Claim_Item = Message<"google.fhir.r4.core.Claim.Item"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Item instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Applicable careTeam members
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt care_team_sequence = 5;
   */
  careTeamSequence: PositiveInt[];

  /**
   * Applicable diagnoses
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt diagnosis_sequence = 6;
   */
  diagnosisSequence: PositiveInt[];

  /**
   * Applicable procedures
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt procedure_sequence = 7;
   */
  procedureSequence: PositiveInt[];

  /**
   * Applicable exception and supporting information
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt information_sequence = 8;
   */
  informationSequence: PositiveInt[];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 9;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 10;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 11;
   */
  productOrService?: CodeableConcept;

  /**
   * Product or service billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 12;
   */
  modifier: CodeableConcept[];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 13;
   */
  programCode: CodeableConcept[];

  /**
   * @generated from field: google.fhir.r4.core.Claim.Item.ServicedX serviced = 14;
   */
  serviced?: Claim_Item_ServicedX;

  /**
   * @generated from field: google.fhir.r4.core.Claim.Item.LocationX location = 15;
   */
  location?: Claim_Item_LocationX;

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 16;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 17;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 18;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 19;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 20;
   */
  udi: Reference[];

  /**
   * Anatomical location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 21;
   */
  bodySite?: CodeableConcept;

  /**
   * Anatomical sub-location
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept sub_site = 22;
   */
  subSite: CodeableConcept[];

  /**
   * Encounters related to this billed item
   *
   * @generated from field: repeated google.fhir.r4.core.Reference encounter = 23;
   */
  encounter: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Item.Detail detail = 24;
   */
  detail: Claim_Item_Detail[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.Item.
 * Use `create(Claim_ItemSchema)` to create a new message.
 */
export const Claim_ItemSchema: GenMessage<Claim_Item> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 10);

/**
 * Date or dates of service or product delivery
 *
 * @generated from message google.fhir.r4.core.Claim.Item.ServicedX
 */
export type Claim_Item_ServicedX = Message<"google.fhir.r4.core.Claim.Item.ServicedX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.Item.ServicedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.Item.ServicedX.
 * Use `create(Claim_Item_ServicedXSchema)` to create a new message.
 */
export const Claim_Item_ServicedXSchema: GenMessage<Claim_Item_ServicedX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 10, 0);

/**
 * Place of service or where product was supplied
 *
 * @generated from message google.fhir.r4.core.Claim.Item.LocationX
 */
export type Claim_Item_LocationX = Message<"google.fhir.r4.core.Claim.Item.LocationX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Claim.Item.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Claim.Item.LocationX.
 * Use `create(Claim_Item_LocationXSchema)` to create a new message.
 */
export const Claim_Item_LocationXSchema: GenMessage<Claim_Item_LocationX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 10, 1);

/**
 * Product or service provided
 *
 * @generated from message google.fhir.r4.core.Claim.Item.Detail
 */
export type Claim_Item_Detail = Message<"google.fhir.r4.core.Claim.Item.Detail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Item instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 7;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 13;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 14;
   */
  udi: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Claim.Item.Detail.SubDetail sub_detail = 15;
   */
  subDetail: Claim_Item_Detail_SubDetail[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.Item.Detail.
 * Use `create(Claim_Item_DetailSchema)` to create a new message.
 */
export const Claim_Item_DetailSchema: GenMessage<Claim_Item_Detail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 10, 2);

/**
 * Product or service provided
 *
 * @generated from message google.fhir.r4.core.Claim.Item.Detail.SubDetail
 */
export type Claim_Item_Detail_SubDetail = Message<"google.fhir.r4.core.Claim.Item.Detail.SubDetail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Item instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 7;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 13;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 14;
   */
  udi: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.Claim.Item.Detail.SubDetail.
 * Use `create(Claim_Item_Detail_SubDetailSchema)` to create a new message.
 */
export const Claim_Item_Detail_SubDetailSchema: GenMessage<Claim_Item_Detail_SubDetail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim, 0, 10, 2, 0);

