"use strict";
//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.MolecularSequence_StructureVariant_InnerSchema = exports.MolecularSequence_StructureVariant_OuterSchema = exports.MolecularSequence_StructureVariantSchema = exports.MolecularSequence_Repository_TypeCodeSchema = exports.MolecularSequence_RepositorySchema = exports.MolecularSequence_Quality_RocSchema = exports.MolecularSequence_Quality_TypeCodeSchema = exports.MolecularSequence_QualitySchema = exports.MolecularSequence_VariantSchema = exports.MolecularSequence_ReferenceSeq_StrandCodeSchema = exports.MolecularSequence_ReferenceSeq_OrientationCodeSchema = exports.MolecularSequence_ReferenceSeqSchema = exports.MolecularSequence_TypeCodeSchema = exports.MolecularSequenceSchema = exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence = void 0;
var codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
var wkt_1 = require("@bufbuild/protobuf/wkt");
var annotations_pb_1 = require("../../../annotations_pb");
var codes_pb_1 = require("../codes_pb");
var datatypes_pb_1 = require("../datatypes_pb");
/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/molecular_sequence.proto.
 */
exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence = (0, codegenv1_1.fileDesc)("", [wkt_1.file_google_protobuf_any, annotations_pb_1.file_proto_google_fhir_proto_annotations, codes_pb_1.file_proto_google_fhir_proto_r4_core_codes, datatypes_pb_1.file_proto_google_fhir_proto_r4_core_datatypes]);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.
 * Use `create(MolecularSequenceSchema)` to create a new message.
 */
exports.MolecularSequenceSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.TypeCode.
 * Use `create(MolecularSequence_TypeCodeSchema)` to create a new message.
 */
exports.MolecularSequence_TypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.ReferenceSeq.
 * Use `create(MolecularSequence_ReferenceSeqSchema)` to create a new message.
 */
exports.MolecularSequence_ReferenceSeqSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 1);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.ReferenceSeq.OrientationCode.
 * Use `create(MolecularSequence_ReferenceSeq_OrientationCodeSchema)` to create a new message.
 */
exports.MolecularSequence_ReferenceSeq_OrientationCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 1, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.ReferenceSeq.StrandCode.
 * Use `create(MolecularSequence_ReferenceSeq_StrandCodeSchema)` to create a new message.
 */
exports.MolecularSequence_ReferenceSeq_StrandCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 1, 1);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Variant.
 * Use `create(MolecularSequence_VariantSchema)` to create a new message.
 */
exports.MolecularSequence_VariantSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 2);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Quality.
 * Use `create(MolecularSequence_QualitySchema)` to create a new message.
 */
exports.MolecularSequence_QualitySchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 3);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Quality.TypeCode.
 * Use `create(MolecularSequence_Quality_TypeCodeSchema)` to create a new message.
 */
exports.MolecularSequence_Quality_TypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 3, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Quality.Roc.
 * Use `create(MolecularSequence_Quality_RocSchema)` to create a new message.
 */
exports.MolecularSequence_Quality_RocSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 3, 1);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Repository.
 * Use `create(MolecularSequence_RepositorySchema)` to create a new message.
 */
exports.MolecularSequence_RepositorySchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 4);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.Repository.TypeCode.
 * Use `create(MolecularSequence_Repository_TypeCodeSchema)` to create a new message.
 */
exports.MolecularSequence_Repository_TypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 4, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.StructureVariant.
 * Use `create(MolecularSequence_StructureVariantSchema)` to create a new message.
 */
exports.MolecularSequence_StructureVariantSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 5);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.StructureVariant.Outer.
 * Use `create(MolecularSequence_StructureVariant_OuterSchema)` to create a new message.
 */
exports.MolecularSequence_StructureVariant_OuterSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 5, 0);
/**
 * Describes the message google.fhir.r4.core.MolecularSequence.StructureVariant.Inner.
 * Use `create(MolecularSequence_StructureVariant_InnerSchema)` to create a new message.
 */
exports.MolecularSequence_StructureVariant_InnerSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_molecular_sequence, 0, 5, 1);
