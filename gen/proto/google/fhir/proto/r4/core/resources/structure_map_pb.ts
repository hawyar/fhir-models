//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/structure_map.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { PublicationStatusCode_Value, StructureMapContextTypeCode_Value, StructureMapGroupTypeModeCode_Value, StructureMapInputModeCode_Value, StructureMapModelModeCode_Value, StructureMapSourceListModeCode_Value, StructureMapTargetListModeCode_Value, StructureMapTransformCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Date, DateTime, Decimal, Distance, Dosage, Duration, Expression, Extension, HumanName, Id, Identifier, Instant, Integer, Markdown, Meta, Money, Narrative, Oid, ParameterDefinition, Period, PositiveInt, Quantity, Range, Ratio, Reference, RelatedArtifact, SampledData, Signature, String, Time, Timing, TriggerDefinition, UnsignedInt, Uri, Url, UsageContext, Uuid } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/structure_map.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_structure_map: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for StructureMap.
 * A Map of relationships between 2 structures that can be used to transform
 * data. See http://hl7.org/fhir/StructureDefinition/StructureMap
 *
 * @generated from message google.fhir.r4.core.StructureMap
 */
export type StructureMap = Message<"google.fhir.r4.core.StructureMap"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Canonical identifier for this structure map, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the structure map
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[];

  /**
   * Business version of the structure map
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this structure map (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this structure map (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.StatusCode status = 15;
   */
  status?: StructureMap_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[];

  /**
   * Natural language description of the structure map
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[];

  /**
   * Intended jurisdiction for structure map (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[];

  /**
   * Why this structure map is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Structure structure = 25;
   */
  structure: StructureMap_Structure[];

  /**
   * Other maps used by this map (canonical URLs)
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical import = 26;
   */
  import: Canonical[];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group group = 27;
   */
  group: StructureMap_Group[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.
 * Use `create(StructureMapSchema)` to create a new message.
 */
export const StructureMapSchema: GenMessage<StructureMap> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0);

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.StructureMap.StatusCode
 */
export type StructureMap_StatusCode = Message<"google.fhir.r4.core.StructureMap.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value: PublicationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.StatusCode.
 * Use `create(StructureMap_StatusCodeSchema)` to create a new message.
 */
export const StructureMap_StatusCodeSchema: GenMessage<StructureMap_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 0);

/**
 * Structure Definition used by this map
 *
 * @generated from message google.fhir.r4.core.StructureMap.Structure
 */
export type StructureMap_Structure = Message<"google.fhir.r4.core.StructureMap.Structure"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Canonical reference to structure definition
   *
   * @generated from field: google.fhir.r4.core.Canonical url = 4;
   */
  url?: Canonical;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Structure.ModeCode mode = 5;
   */
  mode?: StructureMap_Structure_ModeCode;

  /**
   * Name for type in this map
   *
   * @generated from field: google.fhir.r4.core.String alias = 6;
   */
  alias?: String;

  /**
   * Documentation on use of structure
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Structure.
 * Use `create(StructureMap_StructureSchema)` to create a new message.
 */
export const StructureMap_StructureSchema: GenMessage<StructureMap_Structure> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 1);

/**
 * source | queried | target | produced
 *
 * @generated from message google.fhir.r4.core.StructureMap.Structure.ModeCode
 */
export type StructureMap_Structure_ModeCode = Message<"google.fhir.r4.core.StructureMap.Structure.ModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapModelModeCode.Value value = 1;
   */
  value: StructureMapModelModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Structure.ModeCode.
 * Use `create(StructureMap_Structure_ModeCodeSchema)` to create a new message.
 */
export const StructureMap_Structure_ModeCodeSchema: GenMessage<StructureMap_Structure_ModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 1, 0);

/**
 * Named sections for reader convenience
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group
 */
export type StructureMap_Group = Message<"google.fhir.r4.core.StructureMap.Group"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Human-readable label
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Another group that this group adds rules to
   *
   * @generated from field: google.fhir.r4.core.Id extends = 5;
   */
  extends?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.TypeModeCode type_mode = 6;
   */
  typeMode?: StructureMap_Group_TypeModeCode;

  /**
   * Additional description/explanation for group
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Input input = 8;
   */
  input: StructureMap_Group_Input[];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule rule = 9;
   */
  rule: StructureMap_Group_Rule[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.
 * Use `create(StructureMap_GroupSchema)` to create a new message.
 */
export const StructureMap_GroupSchema: GenMessage<StructureMap_Group> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2);

/**
 * none | types | type-and-types
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.TypeModeCode
 */
export type StructureMap_Group_TypeModeCode = Message<"google.fhir.r4.core.StructureMap.Group.TypeModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapGroupTypeModeCode.Value value = 1;
   */
  value: StructureMapGroupTypeModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.TypeModeCode.
 * Use `create(StructureMap_Group_TypeModeCodeSchema)` to create a new message.
 */
export const StructureMap_Group_TypeModeCodeSchema: GenMessage<StructureMap_Group_TypeModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 0);

/**
 * Named instance provided when invoking the map
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Input
 */
export type StructureMap_Group_Input = Message<"google.fhir.r4.core.StructureMap.Group.Input"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Name for this instance of data
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Type for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String type = 5;
   */
  type?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Input.ModeCode mode = 6;
   */
  mode?: StructureMap_Group_Input_ModeCode;

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Input.
 * Use `create(StructureMap_Group_InputSchema)` to create a new message.
 */
export const StructureMap_Group_InputSchema: GenMessage<StructureMap_Group_Input> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 1);

/**
 * source | target
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Input.ModeCode
 */
export type StructureMap_Group_Input_ModeCode = Message<"google.fhir.r4.core.StructureMap.Group.Input.ModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapInputModeCode.Value value = 1;
   */
  value: StructureMapInputModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Input.ModeCode.
 * Use `create(StructureMap_Group_Input_ModeCodeSchema)` to create a new message.
 */
export const StructureMap_Group_Input_ModeCodeSchema: GenMessage<StructureMap_Group_Input_ModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 1, 0);

/**
 * Transform Rule from source to target
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule
 */
export type StructureMap_Group_Rule = Message<"google.fhir.r4.core.StructureMap.Group.Rule"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Name of the rule for internal references
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Source source = 5;
   */
  source: StructureMap_Group_Rule_Source[];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target target = 6;
   */
  target: StructureMap_Group_Rule_Target[];

  /**
   * Rules contained in this rule
   *
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule rule = 7;
   */
  rule: StructureMap_Group_Rule[];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Dependent dependent = 8;
   */
  dependent: StructureMap_Group_Rule_Dependent[];

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String documentation = 9;
   */
  documentation?: String;
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.
 * Use `create(StructureMap_Group_RuleSchema)` to create a new message.
 */
export const StructureMap_Group_RuleSchema: GenMessage<StructureMap_Group_Rule> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2);

/**
 * Source inputs to the mapping
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source
 */
export type StructureMap_Group_Rule_Source = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Source"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.r4.core.Id context = 4;
   */
  context?: Id;

  /**
   * Specified minimum cardinality
   *
   * @generated from field: google.fhir.r4.core.Integer min = 5;
   */
  min?: Integer;

  /**
   * Specified maximum cardinality (number or *)
   *
   * @generated from field: google.fhir.r4.core.String max = 6;
   */
  max?: String;

  /**
   * Rule only applies if source has this type
   *
   * @generated from field: google.fhir.r4.core.String type = 7;
   */
  type?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX default_value = 8;
   */
  defaultValue?: StructureMap_Group_Rule_Source_DefaultValueX;

  /**
   * Optional field for this source
   *
   * @generated from field: google.fhir.r4.core.String element = 9;
   */
  element?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode list_mode = 10;
   */
  listMode?: StructureMap_Group_Rule_Source_ListModeCode;

  /**
   * Named context for field, if a field is specified
   *
   * @generated from field: google.fhir.r4.core.Id variable = 11;
   */
  variable?: Id;

  /**
   * FHIRPath expression  - must be true or the rule does not apply
   *
   * @generated from field: google.fhir.r4.core.String condition = 12;
   */
  condition?: String;

  /**
   * FHIRPath expression  - must be true or the mapping engine throws an
   * error instead of completing
   *
   * @generated from field: google.fhir.r4.core.String check = 13;
   */
  check?: String;

  /**
   * Message to put in log if source exists (FHIRPath)
   *
   * @generated from field: google.fhir.r4.core.String log_message = 14;
   */
  logMessage?: String;
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.
 * Use `create(StructureMap_Group_Rule_SourceSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_SourceSchema: GenMessage<StructureMap_Group_Rule_Source> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0);

/**
 * Default value if no value exists
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX
 */
export type StructureMap_Group_Rule_Source_DefaultValueX = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX.
 * Use `create(StructureMap_Group_Rule_Source_DefaultValueXSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Source_DefaultValueXSchema: GenMessage<StructureMap_Group_Rule_Source_DefaultValueX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0, 0);

/**
 * first | not_first | last | not_last | only_one
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode
 */
export type StructureMap_Group_Rule_Source_ListModeCode = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapSourceListModeCode.Value value = 1;
   */
  value: StructureMapSourceListModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode.
 * Use `create(StructureMap_Group_Rule_Source_ListModeCodeSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Source_ListModeCodeSchema: GenMessage<StructureMap_Group_Rule_Source_ListModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0, 1);

/**
 * Content to create because of this mapping rule
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target
 */
export type StructureMap_Group_Rule_Target = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.r4.core.Id context = 4;
   */
  context?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode context_type = 5;
   */
  contextType?: StructureMap_Group_Rule_Target_ContextTypeCode;

  /**
   * Field to create in the context
   *
   * @generated from field: google.fhir.r4.core.String element = 6;
   */
  element?: String;

  /**
   * Named context for field, if desired, and a field is specified
   *
   * @generated from field: google.fhir.r4.core.Id variable = 7;
   */
  variable?: Id;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode list_mode = 8;
   */
  listMode: StructureMap_Group_Rule_Target_ListModeCode[];

  /**
   * Internal rule reference for shared list items
   *
   * @generated from field: google.fhir.r4.core.Id list_rule_id = 9;
   */
  listRuleId?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode transform = 10;
   */
  transform?: StructureMap_Group_Rule_Target_TransformCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter parameter = 11;
   */
  parameter: StructureMap_Group_Rule_Target_Parameter[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.
 * Use `create(StructureMap_Group_Rule_TargetSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_TargetSchema: GenMessage<StructureMap_Group_Rule_Target> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1);

/**
 * type | variable
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode
 */
export type StructureMap_Group_Rule_Target_ContextTypeCode = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapContextTypeCode.Value value = 1;
   */
  value: StructureMapContextTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode.
 * Use `create(StructureMap_Group_Rule_Target_ContextTypeCodeSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Target_ContextTypeCodeSchema: GenMessage<StructureMap_Group_Rule_Target_ContextTypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 0);

/**
 * first | share | last | collate
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode
 */
export type StructureMap_Group_Rule_Target_ListModeCode = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapTargetListModeCode.Value value = 1;
   */
  value: StructureMapTargetListModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode.
 * Use `create(StructureMap_Group_Rule_Target_ListModeCodeSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Target_ListModeCodeSchema: GenMessage<StructureMap_Group_Rule_Target_ListModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 1);

/**
 * create | copy +
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode
 */
export type StructureMap_Group_Rule_Target_TransformCode = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapTransformCode.Value value = 1;
   */
  value: StructureMapTransformCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode.
 * Use `create(StructureMap_Group_Rule_Target_TransformCodeSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Target_TransformCodeSchema: GenMessage<StructureMap_Group_Rule_Target_TransformCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 2);

/**
 * Parameters to the transform
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter
 */
export type StructureMap_Group_Rule_Target_Parameter = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX value = 4;
   */
  value?: StructureMap_Group_Rule_Target_Parameter_ValueX;
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.
 * Use `create(StructureMap_Group_Rule_Target_ParameterSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Target_ParameterSchema: GenMessage<StructureMap_Group_Rule_Target_Parameter> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 3);

/**
 * Parameter value - variable or literal
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX
 */
export type StructureMap_Group_Rule_Target_Parameter_ValueX = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 1;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX.
 * Use `create(StructureMap_Group_Rule_Target_Parameter_ValueXSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_Target_Parameter_ValueXSchema: GenMessage<StructureMap_Group_Rule_Target_Parameter_ValueX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 3, 0);

/**
 * Which other rules to apply in the context of this rule
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Dependent
 */
export type StructureMap_Group_Rule_Dependent = Message<"google.fhir.r4.core.StructureMap.Group.Rule.Dependent"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Name of a rule or group to apply
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Variable to pass to the rule or group
   *
   * @generated from field: repeated google.fhir.r4.core.String variable = 5;
   */
  variable: String[];
};

/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Dependent.
 * Use `create(StructureMap_Group_Rule_DependentSchema)` to create a new message.
 */
export const StructureMap_Group_Rule_DependentSchema: GenMessage<StructureMap_Group_Rule_Dependent> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 2);

