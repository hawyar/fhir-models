"use strict";
//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructureDefinition_DifferentialSchema = exports.StructureDefinition_SnapshotSchema = exports.StructureDefinition_DerivationCodeSchema = exports.StructureDefinition_Context_TypeCodeSchema = exports.StructureDefinition_ContextSchema = exports.StructureDefinition_KindCodeSchema = exports.StructureDefinition_MappingSchema = exports.StructureDefinition_FhirVersionCodeSchema = exports.StructureDefinition_StatusCodeSchema = exports.StructureDefinitionSchema = exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition = void 0;
var codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
var wkt_1 = require("@bufbuild/protobuf/wkt");
var annotations_pb_1 = require("../../../annotations_pb");
var codes_pb_1 = require("../codes_pb");
var datatypes_pb_1 = require("../datatypes_pb");
/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/structure_definition.proto.
 */
exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition = (0, codegenv1_1.fileDesc)("", [wkt_1.file_google_protobuf_any, annotations_pb_1.file_proto_google_fhir_proto_annotations, codes_pb_1.file_proto_google_fhir_proto_r4_core_codes, datatypes_pb_1.file_proto_google_fhir_proto_r4_core_datatypes]);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.
 * Use `create(StructureDefinitionSchema)` to create a new message.
 */
exports.StructureDefinitionSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.StatusCode.
 * Use `create(StructureDefinition_StatusCodeSchema)` to create a new message.
 */
exports.StructureDefinition_StatusCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 0);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.FhirVersionCode.
 * Use `create(StructureDefinition_FhirVersionCodeSchema)` to create a new message.
 */
exports.StructureDefinition_FhirVersionCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 1);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.Mapping.
 * Use `create(StructureDefinition_MappingSchema)` to create a new message.
 */
exports.StructureDefinition_MappingSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 2);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.KindCode.
 * Use `create(StructureDefinition_KindCodeSchema)` to create a new message.
 */
exports.StructureDefinition_KindCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 3);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.Context.
 * Use `create(StructureDefinition_ContextSchema)` to create a new message.
 */
exports.StructureDefinition_ContextSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 4);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.Context.TypeCode.
 * Use `create(StructureDefinition_Context_TypeCodeSchema)` to create a new message.
 */
exports.StructureDefinition_Context_TypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 4, 0);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.DerivationCode.
 * Use `create(StructureDefinition_DerivationCodeSchema)` to create a new message.
 */
exports.StructureDefinition_DerivationCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 5);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.Snapshot.
 * Use `create(StructureDefinition_SnapshotSchema)` to create a new message.
 */
exports.StructureDefinition_SnapshotSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 6);
/**
 * Describes the message google.fhir.r4.core.StructureDefinition.Differential.
 * Use `create(StructureDefinition_DifferentialSchema)` to create a new message.
 */
exports.StructureDefinition_DifferentialSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_definition, 0, 7);
