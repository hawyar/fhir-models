"use strict";
//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestScript_Teardown_TeardownActionSchema = exports.TestScript_TeardownSchema = exports.TestScript_Test_TestActionSchema = exports.TestScript_TestSchema = exports.TestScript_Setup_SetupAction_Assert_ResponseCodeSchema = exports.TestScript_Setup_SetupAction_Assert_ResourceCodeSchema = exports.TestScript_Setup_SetupAction_Assert_RequestMethodCodeSchema = exports.TestScript_Setup_SetupAction_Assert_OperatorCodeSchema = exports.TestScript_Setup_SetupAction_Assert_ContentTypeCodeSchema = exports.TestScript_Setup_SetupAction_Assert_DirectionCodeSchema = exports.TestScript_Setup_SetupAction_AssertSchema = exports.TestScript_Setup_SetupAction_Operation_RequestHeaderSchema = exports.TestScript_Setup_SetupAction_Operation_MethodCodeSchema = exports.TestScript_Setup_SetupAction_Operation_ContentTypeCodeSchema = exports.TestScript_Setup_SetupAction_Operation_AcceptCodeSchema = exports.TestScript_Setup_SetupAction_Operation_ResourceCodeSchema = exports.TestScript_Setup_SetupAction_OperationSchema = exports.TestScript_Setup_SetupActionSchema = exports.TestScript_SetupSchema = exports.TestScript_VariableSchema = exports.TestScript_FixtureSchema = exports.TestScript_Metadata_CapabilitySchema = exports.TestScript_Metadata_LinkSchema = exports.TestScript_MetadataSchema = exports.TestScript_DestinationSchema = exports.TestScript_OriginSchema = exports.TestScript_StatusCodeSchema = exports.TestScriptSchema = exports.file_proto_google_fhir_proto_r4_core_resources_test_script = void 0;
var codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
var wkt_1 = require("@bufbuild/protobuf/wkt");
var annotations_pb_1 = require("../../../annotations_pb");
var codes_pb_1 = require("../codes_pb");
var datatypes_pb_1 = require("../datatypes_pb");
var valuesets_pb_1 = require("../valuesets_pb");
/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/test_script.proto.
 */
exports.file_proto_google_fhir_proto_r4_core_resources_test_script = (0, codegenv1_1.fileDesc)("", [wkt_1.file_google_protobuf_any, annotations_pb_1.file_proto_google_fhir_proto_annotations, codes_pb_1.file_proto_google_fhir_proto_r4_core_codes, datatypes_pb_1.file_proto_google_fhir_proto_r4_core_datatypes, valuesets_pb_1.file_proto_google_fhir_proto_r4_core_valuesets]);
/**
 * Describes the message google.fhir.r4.core.TestScript.
 * Use `create(TestScriptSchema)` to create a new message.
 */
exports.TestScriptSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.StatusCode.
 * Use `create(TestScript_StatusCodeSchema)` to create a new message.
 */
exports.TestScript_StatusCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Origin.
 * Use `create(TestScript_OriginSchema)` to create a new message.
 */
exports.TestScript_OriginSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 1);
/**
 * Describes the message google.fhir.r4.core.TestScript.Destination.
 * Use `create(TestScript_DestinationSchema)` to create a new message.
 */
exports.TestScript_DestinationSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 2);
/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.
 * Use `create(TestScript_MetadataSchema)` to create a new message.
 */
exports.TestScript_MetadataSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3);
/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.Link.
 * Use `create(TestScript_Metadata_LinkSchema)` to create a new message.
 */
exports.TestScript_Metadata_LinkSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.Capability.
 * Use `create(TestScript_Metadata_CapabilitySchema)` to create a new message.
 */
exports.TestScript_Metadata_CapabilitySchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3, 1);
/**
 * Describes the message google.fhir.r4.core.TestScript.Fixture.
 * Use `create(TestScript_FixtureSchema)` to create a new message.
 */
exports.TestScript_FixtureSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 4);
/**
 * Describes the message google.fhir.r4.core.TestScript.Variable.
 * Use `create(TestScript_VariableSchema)` to create a new message.
 */
exports.TestScript_VariableSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 5);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.
 * Use `create(TestScript_SetupSchema)` to create a new message.
 */
exports.TestScript_SetupSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.
 * Use `create(TestScript_Setup_SetupActionSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupActionSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.
 * Use `create(TestScript_Setup_SetupAction_OperationSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_OperationSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_ResourceCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Operation_ResourceCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_AcceptCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Operation_AcceptCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 1);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_ContentTypeCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Operation_ContentTypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 2);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_MethodCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Operation_MethodCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 3);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader.
 * Use `create(TestScript_Setup_SetupAction_Operation_RequestHeaderSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Operation_RequestHeaderSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 4);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.
 * Use `create(TestScript_Setup_SetupAction_AssertSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_AssertSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_DirectionCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_DirectionCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ContentTypeCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_ContentTypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 1);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_OperatorCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_OperatorCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 2);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_RequestMethodCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_RequestMethodCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 3);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ResourceCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_ResourceCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 4);
/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ResponseCodeSchema)` to create a new message.
 */
exports.TestScript_Setup_SetupAction_Assert_ResponseCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 5);
/**
 * Describes the message google.fhir.r4.core.TestScript.Test.
 * Use `create(TestScript_TestSchema)` to create a new message.
 */
exports.TestScript_TestSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 7);
/**
 * Describes the message google.fhir.r4.core.TestScript.Test.TestAction.
 * Use `create(TestScript_Test_TestActionSchema)` to create a new message.
 */
exports.TestScript_Test_TestActionSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 7, 0);
/**
 * Describes the message google.fhir.r4.core.TestScript.Teardown.
 * Use `create(TestScript_TeardownSchema)` to create a new message.
 */
exports.TestScript_TeardownSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 8);
/**
 * Describes the message google.fhir.r4.core.TestScript.Teardown.TeardownAction.
 * Use `create(TestScript_Teardown_TeardownActionSchema)` to create a new message.
 */
exports.TestScript_Teardown_TeardownActionSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 8, 0);
