"use strict";
//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructureMap_Group_Rule_DependentSchema = exports.StructureMap_Group_Rule_Target_Parameter_ValueXSchema = exports.StructureMap_Group_Rule_Target_ParameterSchema = exports.StructureMap_Group_Rule_Target_TransformCodeSchema = exports.StructureMap_Group_Rule_Target_ListModeCodeSchema = exports.StructureMap_Group_Rule_Target_ContextTypeCodeSchema = exports.StructureMap_Group_Rule_TargetSchema = exports.StructureMap_Group_Rule_Source_ListModeCodeSchema = exports.StructureMap_Group_Rule_Source_DefaultValueXSchema = exports.StructureMap_Group_Rule_SourceSchema = exports.StructureMap_Group_RuleSchema = exports.StructureMap_Group_Input_ModeCodeSchema = exports.StructureMap_Group_InputSchema = exports.StructureMap_Group_TypeModeCodeSchema = exports.StructureMap_GroupSchema = exports.StructureMap_Structure_ModeCodeSchema = exports.StructureMap_StructureSchema = exports.StructureMap_StatusCodeSchema = exports.StructureMapSchema = exports.file_proto_google_fhir_proto_r4_core_resources_structure_map = void 0;
var codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
var wkt_1 = require("@bufbuild/protobuf/wkt");
var annotations_pb_1 = require("../../../annotations_pb");
var codes_pb_1 = require("../codes_pb");
var datatypes_pb_1 = require("../datatypes_pb");
/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/structure_map.proto.
 */
exports.file_proto_google_fhir_proto_r4_core_resources_structure_map = (0, codegenv1_1.fileDesc)("", [wkt_1.file_google_protobuf_any, annotations_pb_1.file_proto_google_fhir_proto_annotations, codes_pb_1.file_proto_google_fhir_proto_r4_core_codes, datatypes_pb_1.file_proto_google_fhir_proto_r4_core_datatypes]);
/**
 * Describes the message google.fhir.r4.core.StructureMap.
 * Use `create(StructureMapSchema)` to create a new message.
 */
exports.StructureMapSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.StatusCode.
 * Use `create(StructureMap_StatusCodeSchema)` to create a new message.
 */
exports.StructureMap_StatusCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Structure.
 * Use `create(StructureMap_StructureSchema)` to create a new message.
 */
exports.StructureMap_StructureSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 1);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Structure.ModeCode.
 * Use `create(StructureMap_Structure_ModeCodeSchema)` to create a new message.
 */
exports.StructureMap_Structure_ModeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 1, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.
 * Use `create(StructureMap_GroupSchema)` to create a new message.
 */
exports.StructureMap_GroupSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.TypeModeCode.
 * Use `create(StructureMap_Group_TypeModeCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_TypeModeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Input.
 * Use `create(StructureMap_Group_InputSchema)` to create a new message.
 */
exports.StructureMap_Group_InputSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 1);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Input.ModeCode.
 * Use `create(StructureMap_Group_Input_ModeCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_Input_ModeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 1, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.
 * Use `create(StructureMap_Group_RuleSchema)` to create a new message.
 */
exports.StructureMap_Group_RuleSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.
 * Use `create(StructureMap_Group_Rule_SourceSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_SourceSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX.
 * Use `create(StructureMap_Group_Rule_Source_DefaultValueXSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Source_DefaultValueXSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode.
 * Use `create(StructureMap_Group_Rule_Source_ListModeCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Source_ListModeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 0, 1);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.
 * Use `create(StructureMap_Group_Rule_TargetSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_TargetSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode.
 * Use `create(StructureMap_Group_Rule_Target_ContextTypeCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Target_ContextTypeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode.
 * Use `create(StructureMap_Group_Rule_Target_ListModeCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Target_ListModeCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 1);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode.
 * Use `create(StructureMap_Group_Rule_Target_TransformCodeSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Target_TransformCodeSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 2);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.
 * Use `create(StructureMap_Group_Rule_Target_ParameterSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Target_ParameterSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 3);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX.
 * Use `create(StructureMap_Group_Rule_Target_Parameter_ValueXSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_Target_Parameter_ValueXSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 1, 3, 0);
/**
 * Describes the message google.fhir.r4.core.StructureMap.Group.Rule.Dependent.
 * Use `create(StructureMap_Group_Rule_DependentSchema)` to create a new message.
 */
exports.StructureMap_Group_Rule_DependentSchema = (0, codegenv1_1.messageDesc)(exports.file_proto_google_fhir_proto_r4_core_resources_structure_map, 0, 2, 2, 2);
