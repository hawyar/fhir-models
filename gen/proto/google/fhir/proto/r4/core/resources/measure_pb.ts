//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/measure.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { PublicationStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Boolean, Canonical, Code, CodeableConcept, ContactDetail, Date, DateTime, Expression, Extension, Id, Identifier, Markdown, Meta, Narrative, Period, Reference, RelatedArtifact, String, Uri, UsageContext } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/measure.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_measure: GenFile = /*@__PURE__*/
  fileDesc("Cjdwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9tZWFzdXJlLnByb3RvEhNnb29nbGUuZmhpci5yNC5jb3JlIr8nCgdNZWFzdXJlEiMKAmlkGAEgASgLMhcuZ29vZ2xlLmZoaXIucjQuY29yZS5JZBInCgRtZXRhGAIgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5NZXRhEjAKDmltcGxpY2l0X3J1bGVzGAMgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSKwoIbGFuZ3VhZ2UYBCABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGUSLAoEdGV4dBgFIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuTmFycmF0aXZlEicKCWNvbnRhaW5lZBgGIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSMQoJZXh0ZW5zaW9uGAggAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAkgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SJQoDdXJsGAogASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSMwoKaWRlbnRpZmllchgLIAMoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuSWRlbnRpZmllchIsCgd2ZXJzaW9uGAwgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSKQoEbmFtZRgNIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEioKBXRpdGxlGA4gASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSLQoIc3VidGl0bGUYDyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxI/CgZzdGF0dXMYECABKAsyJy5nb29nbGUuZmhpci5yNC5jb3JlLk1lYXN1cmUuU3RhdHVzQ29kZUIG8NCH6wQBEjIKDGV4cGVyaW1lbnRhbBgRIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbhI2CgdzdWJqZWN0GBIgASgLMiUuZ29vZ2xlLmZoaXIucjQuY29yZS5NZWFzdXJlLlN1YmplY3RYEisKBGRhdGUYEyABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lEi4KCXB1Ymxpc2hlchgUIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjMKB2NvbnRhY3QYFSADKAsyIi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbnRhY3REZXRhaWwSMgoLZGVzY3JpcHRpb24YFiABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLk1hcmtkb3duEjYKC3VzZV9jb250ZXh0GBcgAygLMiEuZ29vZ2xlLmZoaXIucjQuY29yZS5Vc2FnZUNvbnRleHQSOgoManVyaXNkaWN0aW9uGBggAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSLgoHcHVycG9zZRgZIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuTWFya2Rvd24SKgoFdXNhZ2UYGiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIwCgljb3B5cmlnaHQYGyABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLk1hcmtkb3duEjAKDWFwcHJvdmFsX2RhdGUYHCABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGUSMwoQbGFzdF9yZXZpZXdfZGF0ZRgdIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZRI1ChBlZmZlY3RpdmVfcGVyaW9kGB4gASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2QSMwoFdG9waWMYHyADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIyCgZhdXRob3IYICADKAsyIi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbnRhY3REZXRhaWwSMgoGZWRpdG9yGCEgAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEjQKCHJldmlld2VyGCIgAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEjQKCGVuZG9yc2VyGCMgAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEj4KEHJlbGF0ZWRfYXJ0aWZhY3QYJCADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLlJlbGF0ZWRBcnRpZmFjdBIvCgdsaWJyYXJ5GCUgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5DYW5vbmljYWwSMQoKZGlzY2xhaW1lchgmIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuTWFya2Rvd24SNQoHc2NvcmluZxgnIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ej8KEWNvbXBvc2l0ZV9zY29yaW5nGCggASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSMgoEdHlwZRgpIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjQKD3Jpc2tfYWRqdXN0bWVudBgqIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjUKEHJhdGVfYWdncmVnYXRpb24YKyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIwCglyYXRpb25hbGUYLCABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLk1hcmtkb3duEkgKIWNsaW5pY2FsX3JlY29tbWVuZGF0aW9uX3N0YXRlbWVudBgtIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuTWFya2Rvd24SQgoUaW1wcm92ZW1lbnRfbm90YXRpb24YLiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIxCgpkZWZpbml0aW9uGC8gAygLMh0uZ29vZ2xlLmZoaXIucjQuY29yZS5NYXJrZG93bhIvCghndWlkYW5jZRgwIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuTWFya2Rvd24SMQoFZ3JvdXAYMSADKAsyIi5nb29nbGUuZmhpci5yNC5jb3JlLk1lYXN1cmUuR3JvdXASSAoRc3VwcGxlbWVudGFsX2RhdGEYMiADKAsyLS5nb29nbGUuZmhpci5yNC5jb3JlLk1lYXN1cmUuU3VwcGxlbWVudGFsRGF0YRqYAgoKU3RhdHVzQ29kZRI/CgV2YWx1ZRgBIAEoDjIwLmdvb2dsZS5maGlyLnI0LmNvcmUuUHVibGljYXRpb25TdGF0dXNDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246bYr5g7IFL2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcHVibGljYXRpb24tc3RhdHVzwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUaoAEKCFN1YmplY3RYEkAKEGNvZGVhYmxlX2NvbmNlcHQYASABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdEgAEkAKCXJlZmVyZW5jZRgCIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQgvy//zCBgVHcm91cEgAOgagg4PoBgFCCAoGY2hvaWNlGqYLCgVHcm91cBInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjIKBGNvZGUYBCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIwCgtkZXNjcmlwdGlvbhgFIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEkEKCnBvcHVsYXRpb24YBiADKAsyLS5nb29nbGUuZmhpci5yNC5jb3JlLk1lYXN1cmUuR3JvdXAuUG9wdWxhdGlvbhJBCgpzdHJhdGlmaWVyGAcgAygLMi0uZ29vZ2xlLmZoaXIucjQuY29yZS5NZWFzdXJlLkdyb3VwLlN0cmF0aWZpZXIaxQIKClBvcHVsYXRpb24SJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIyCgRjb2RlGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSMAoLZGVzY3JpcHRpb24YBSABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxI5Cghjcml0ZXJpYRgGIAEoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuRXhwcmVzc2lvbkIG8NCH6wQBGtAFCgpTdHJhdGlmaWVyEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMgoEY29kZRgEIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjAKC2Rlc2NyaXB0aW9uGAUgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoIY3JpdGVyaWEYBiABKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkV4cHJlc3Npb24SSgoJY29tcG9uZW50GAcgAygLMjcuZ29vZ2xlLmZoaXIucjQuY29yZS5NZWFzdXJlLkdyb3VwLlN0cmF0aWZpZXIuQ29tcG9uZW50GsQCCglDb21wb25lbnQSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIyCgRjb2RlGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSMAoLZGVzY3JpcHRpb24YBSABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxI5Cghjcml0ZXJpYRgGIAEoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuRXhwcmVzc2lvbkIG8NCH6wQBGoADChBTdXBwbGVtZW50YWxEYXRhEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMgoEY29kZRgEIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjMKBXVzYWdlGAUgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSMAoLZGVzY3JpcHRpb24YBiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxI5Cghjcml0ZXJpYRgHIAEoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuRXhwcmVzc2lvbkIG8NCH6wQBOsYBwJ/jtgUDsv7klwYvaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL01lYXN1cmWahpOgCFVncm91cC5zdHJhdGlmaWVyLmFsbCgoY29kZSB8IGRlc2NyaXB0aW9uIHwgY3JpdGVyaWEpLmV4aXN0cygpIHhvciBjb21wb25lbnQuZXhpc3RzKCkpmq+upAsqbmFtZS5tYXRjaGVzKCdbQS1aXShbQS1aYS16MC05X10pezAsMjU0fScpSgQIBxAIQncKF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaVGdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvbWVhc3VyZV9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Measure.
 * A quality measure definition.
 * See http://hl7.org/fhir/StructureDefinition/Measure
 *
 * @generated from message google.fhir.r4.core.Measure
 */
export type Measure = Message<"google.fhir.r4.core.Measure"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Canonical identifier for this measure, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the measure
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[];

  /**
   * Business version of the measure
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this measure (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this measure (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Subordinate title of the measure
   *
   * @generated from field: google.fhir.r4.core.String subtitle = 15;
   */
  subtitle?: String;

  /**
   * @generated from field: google.fhir.r4.core.Measure.StatusCode status = 16;
   */
  status?: Measure_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 17;
   */
  experimental?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.Measure.SubjectX subject = 18;
   */
  subject?: Measure_SubjectX;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 19;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 20;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 21;
   */
  contact: ContactDetail[];

  /**
   * Natural language description of the measure
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 22;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 23;
   */
  useContext: UsageContext[];

  /**
   * Intended jurisdiction for measure (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 24;
   */
  jurisdiction: CodeableConcept[];

  /**
   * Why this measure is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 25;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the measure
   *
   * @generated from field: google.fhir.r4.core.String usage = 26;
   */
  usage?: String;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 27;
   */
  copyright?: Markdown;

  /**
   * When the measure was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 28;
   */
  approvalDate?: Date;

  /**
   * When the measure was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 29;
   */
  lastReviewDate?: Date;

  /**
   * When the measure is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 30;
   */
  effectivePeriod?: Period;

  /**
   * The category of the measure, such as Education, Treatment, Assessment, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept topic = 31;
   */
  topic: CodeableConcept[];

  /**
   * Who authored the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail author = 32;
   */
  author: ContactDetail[];

  /**
   * Who edited the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail editor = 33;
   */
  editor: ContactDetail[];

  /**
   * Who reviewed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail reviewer = 34;
   */
  reviewer: ContactDetail[];

  /**
   * Who endorsed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail endorser = 35;
   */
  endorser: ContactDetail[];

  /**
   * Additional documentation, citations, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact related_artifact = 36;
   */
  relatedArtifact: RelatedArtifact[];

  /**
   * Logic used by the measure
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical library = 37;
   */
  library: Canonical[];

  /**
   * Disclaimer for use of the measure or its referenced content
   *
   * @generated from field: google.fhir.r4.core.Markdown disclaimer = 38;
   */
  disclaimer?: Markdown;

  /**
   * proportion | ratio | continuous-variable | cohort
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept scoring = 39;
   */
  scoring?: CodeableConcept;

  /**
   * opportunity | all-or-nothing | linear | weighted
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept composite_scoring = 40;
   */
  compositeScoring?: CodeableConcept;

  /**
   * process | outcome | structure | patient-reported-outcome | composite
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 41;
   */
  type: CodeableConcept[];

  /**
   * How risk adjustment is applied for this measure
   *
   * @generated from field: google.fhir.r4.core.String risk_adjustment = 42;
   */
  riskAdjustment?: String;

  /**
   * How is rate aggregation performed for this measure
   *
   * @generated from field: google.fhir.r4.core.String rate_aggregation = 43;
   */
  rateAggregation?: String;

  /**
   * Detailed description of why the measure exists
   *
   * @generated from field: google.fhir.r4.core.Markdown rationale = 44;
   */
  rationale?: Markdown;

  /**
   * Summary of clinical guidelines
   *
   * @generated from field: google.fhir.r4.core.Markdown clinical_recommendation_statement = 45;
   */
  clinicalRecommendationStatement?: Markdown;

  /**
   * increase | decrease
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept improvement_notation = 46;
   */
  improvementNotation?: CodeableConcept;

  /**
   * Defined terms used in the measure documentation
   *
   * @generated from field: repeated google.fhir.r4.core.Markdown definition = 47;
   */
  definition: Markdown[];

  /**
   * Additional guidance for implementers
   *
   * @generated from field: google.fhir.r4.core.Markdown guidance = 48;
   */
  guidance?: Markdown;

  /**
   * @generated from field: repeated google.fhir.r4.core.Measure.Group group = 49;
   */
  group: Measure_Group[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Measure.SupplementalData supplemental_data = 50;
   */
  supplementalData: Measure_SupplementalData[];
};

/**
 * Describes the message google.fhir.r4.core.Measure.
 * Use `create(MeasureSchema)` to create a new message.
 */
export const MeasureSchema: GenMessage<Measure> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0);

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.Measure.StatusCode
 */
export type Measure_StatusCode = Message<"google.fhir.r4.core.Measure.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value: PublicationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Measure.StatusCode.
 * Use `create(Measure_StatusCodeSchema)` to create a new message.
 */
export const Measure_StatusCodeSchema: GenMessage<Measure_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 0);

/**
 * E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device
 *
 * @generated from message google.fhir.r4.core.Measure.SubjectX
 */
export type Measure_SubjectX = Message<"google.fhir.r4.core.Measure.SubjectX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Measure.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Measure.SubjectX.
 * Use `create(Measure_SubjectXSchema)` to create a new message.
 */
export const Measure_SubjectXSchema: GenMessage<Measure_SubjectX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 1);

/**
 * Population criteria group
 *
 * @generated from message google.fhir.r4.core.Measure.Group
 */
export type Measure_Group = Message<"google.fhir.r4.core.Measure.Group"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Meaning of the group
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Summary description
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Measure.Group.Population population = 6;
   */
  population: Measure_Group_Population[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Measure.Group.Stratifier stratifier = 7;
   */
  stratifier: Measure_Group_Stratifier[];
};

/**
 * Describes the message google.fhir.r4.core.Measure.Group.
 * Use `create(Measure_GroupSchema)` to create a new message.
 */
export const Measure_GroupSchema: GenMessage<Measure_Group> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 2);

/**
 * Population criteria
 *
 * @generated from message google.fhir.r4.core.Measure.Group.Population
 */
export type Measure_Group_Population = Message<"google.fhir.r4.core.Measure.Group.Population"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * initial-population | numerator | numerator-exclusion | denominator |
   * denominator-exclusion | denominator-exception | measure-population |
   * measure-population-exclusion | measure-observation
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * The human readable description of this population criteria
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * The criteria that defines this population
   *
   * @generated from field: google.fhir.r4.core.Expression criteria = 6;
   */
  criteria?: Expression;
};

/**
 * Describes the message google.fhir.r4.core.Measure.Group.Population.
 * Use `create(Measure_Group_PopulationSchema)` to create a new message.
 */
export const Measure_Group_PopulationSchema: GenMessage<Measure_Group_Population> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 2, 0);

/**
 * Stratifier criteria for the measure
 *
 * @generated from message google.fhir.r4.core.Measure.Group.Stratifier
 */
export type Measure_Group_Stratifier = Message<"google.fhir.r4.core.Measure.Group.Stratifier"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Meaning of the stratifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * The human readable description of this stratifier
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * How the measure should be stratified
   *
   * @generated from field: google.fhir.r4.core.Expression criteria = 6;
   */
  criteria?: Expression;

  /**
   * @generated from field: repeated google.fhir.r4.core.Measure.Group.Stratifier.Component component = 7;
   */
  component: Measure_Group_Stratifier_Component[];
};

/**
 * Describes the message google.fhir.r4.core.Measure.Group.Stratifier.
 * Use `create(Measure_Group_StratifierSchema)` to create a new message.
 */
export const Measure_Group_StratifierSchema: GenMessage<Measure_Group_Stratifier> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 2, 1);

/**
 * Stratifier criteria component for the measure
 *
 * @generated from message google.fhir.r4.core.Measure.Group.Stratifier.Component
 */
export type Measure_Group_Stratifier_Component = Message<"google.fhir.r4.core.Measure.Group.Stratifier.Component"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Meaning of the stratifier component
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * The human readable description of this stratifier component
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * Component of how the measure should be stratified
   *
   * @generated from field: google.fhir.r4.core.Expression criteria = 6;
   */
  criteria?: Expression;
};

/**
 * Describes the message google.fhir.r4.core.Measure.Group.Stratifier.Component.
 * Use `create(Measure_Group_Stratifier_ComponentSchema)` to create a new message.
 */
export const Measure_Group_Stratifier_ComponentSchema: GenMessage<Measure_Group_Stratifier_Component> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 2, 1, 0);

/**
 * What other data should be reported with the measure
 *
 * @generated from message google.fhir.r4.core.Measure.SupplementalData
 */
export type Measure_SupplementalData = Message<"google.fhir.r4.core.Measure.SupplementalData"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Meaning of the supplemental data
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * supplemental-data | risk-adjustment-factor
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept usage = 5;
   */
  usage: CodeableConcept[];

  /**
   * The human readable description of this supplemental data
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * Expression describing additional data to be reported
   *
   * @generated from field: google.fhir.r4.core.Expression criteria = 7;
   */
  criteria?: Expression;
};

/**
 * Describes the message google.fhir.r4.core.Measure.SupplementalData.
 * Use `create(Measure_SupplementalDataSchema)` to create a new message.
 */
export const Measure_SupplementalDataSchema: GenMessage<Measure_SupplementalData> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_measure, 0, 3);

