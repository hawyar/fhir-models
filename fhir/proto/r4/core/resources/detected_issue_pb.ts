//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/detected_issue.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { DetectedIssueSeverityCode_Value, ObservationStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/detected_issue.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_detected_issue: GenFile = /*@__PURE__*/
  fileDesc("Cj5wcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9kZXRlY3RlZF9pc3N1ZS5wcm90bxITZ29vZ2xlLmZoaXIucjQuY29yZSKSFAoNRGV0ZWN0ZWRJc3N1ZRIjCgJpZBgBIAEoCzIXLmdvb2dsZS5maGlyLnI0LmNvcmUuSWQSJwoEbWV0YRgCIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuTWV0YRIwCg5pbXBsaWNpdF9ydWxlcxgDIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuVXJpEisKCGxhbmd1YWdlGAQgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlEiwKBHRleHQYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRInCgljb250YWluZWQYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EjEKCWV4dGVuc2lvbhgIIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjMKCmlkZW50aWZpZXIYCiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISRQoGc3RhdHVzGAsgASgLMi0uZ29vZ2xlLmZoaXIucjQuY29yZS5EZXRlY3RlZElzc3VlLlN0YXR1c0NvZGVCBvDQh+sEARIyCgRjb2RlGAwgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSQQoIc2V2ZXJpdHkYDSABKAsyLy5nb29nbGUuZmhpci5yNC5jb3JlLkRldGVjdGVkSXNzdWUuU2V2ZXJpdHlDb2RlEj4KB3BhdGllbnQYDiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIN8v/8wgYHUGF0aWVudBJCCgppZGVudGlmaWVkGA8gASgLMi4uZ29vZ2xlLmZoaXIucjQuY29yZS5EZXRlY3RlZElzc3VlLklkZW50aWZpZWRYEmQKBmF1dGhvchgQIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQjTy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYGRGV2aWNlEkIKCmltcGxpY2F0ZWQYESADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIO8v/8wgYIUmVzb3VyY2USPQoIZXZpZGVuY2UYEiADKAsyKy5nb29nbGUuZmhpci5yNC5jb3JlLkRldGVjdGVkSXNzdWUuRXZpZGVuY2USKwoGZGV0YWlsGBMgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSKwoJcmVmZXJlbmNlGBQgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSQQoKbWl0aWdhdGlvbhgVIAMoCzItLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV0ZWN0ZWRJc3N1ZS5NaXRpZ2F0aW9uGpgCCgpTdGF0dXNDb2RlEj8KBXZhbHVlGAEgASgOMjAuZ29vZ2xlLmZoaXIucjQuY29yZS5PYnNlcnZhdGlvblN0YXR1c0NvZGUuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjptivmDsgUvaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9vYnNlcnZhdGlvbi1zdGF0dXPAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqiAgoMU2V2ZXJpdHlDb2RlEkMKBXZhbHVlGAEgASgOMjQuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXRlY3RlZElzc3VlU2V2ZXJpdHlDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246cYr5g7IFM2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZGV0ZWN0ZWRpc3N1ZS1zZXZlcml0ecCf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGoIBCgtJZGVudGlmaWVkWBIyCglkYXRlX3RpbWUYASABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lSAASLQoGcGVyaW9kGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2RIADoGoIOD6AYBQggKBmNob2ljZRqWAgoIRXZpZGVuY2USJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIyCgRjb2RlGAQgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSPgoGZGV0YWlsGAUgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCFJlc291cmNlGukCCgpNaXRpZ2F0aW9uEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SPAoGYWN0aW9uGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHRCBvDQh+sEARIrCgRkYXRlGAUgASgLMh0uZ29vZ2xlLmZoaXIucjQuY29yZS5EYXRlVGltZRJYCgZhdXRob3IYBiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIo8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZTpBwJ/jtgUDsv7klwY1aHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL0RldGVjdGVkSXNzdWVKBAgHEAhCfgoXY29tLmdvb2dsZS5maGlyLnI0LmNvcmVQAVpbZ2l0aHViLmNvbS9nb29nbGUvZmhpci9nby9wcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9kZXRlY3RlZF9pc3N1ZV9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for DetectedIssue.
 * Clinical issue with action.
 * See http://hl7.org/fhir/StructureDefinition/DetectedIssue
 *
 * @generated from message google.fhir.r4.core.DetectedIssue
 */
export type DetectedIssue = Message<"google.fhir.r4.core.DetectedIssue"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Unique id for the detected issue
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.StatusCode status = 11;
   */
  status?: DetectedIssue_StatusCode;

  /**
   * Issue Category, e.g. drug-drug, duplicate therapy, etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 12;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.SeverityCode severity = 13;
   */
  severity?: DetectedIssue_SeverityCode;

  /**
   * Associated patient
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.IdentifiedX identified = 15;
   */
  identified?: DetectedIssue_IdentifiedX;

  /**
   * The provider or device that identified the issue
   *
   * @generated from field: google.fhir.r4.core.Reference author = 16;
   */
  author?: Reference;

  /**
   * Problem resource
   *
   * @generated from field: repeated google.fhir.r4.core.Reference implicated = 17;
   */
  implicated: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.DetectedIssue.Evidence evidence = 18;
   */
  evidence: DetectedIssue_Evidence[];

  /**
   * Description and context
   *
   * @generated from field: google.fhir.r4.core.String detail = 19;
   */
  detail?: String;

  /**
   * Authority for issue
   *
   * @generated from field: google.fhir.r4.core.Uri reference = 20;
   */
  reference?: Uri;

  /**
   * @generated from field: repeated google.fhir.r4.core.DetectedIssue.Mitigation mitigation = 21;
   */
  mitigation: DetectedIssue_Mitigation[];
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.
 * Use `create(DetectedIssueSchema)` to create a new message.
 */
export const DetectedIssueSchema: GenMessage<DetectedIssue> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0);

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.StatusCode
 */
export type DetectedIssue_StatusCode = Message<"google.fhir.r4.core.DetectedIssue.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value: ObservationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.StatusCode.
 * Use `create(DetectedIssue_StatusCodeSchema)` to create a new message.
 */
export const DetectedIssue_StatusCodeSchema: GenMessage<DetectedIssue_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0, 0);

/**
 * high | moderate | low
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.SeverityCode
 */
export type DetectedIssue_SeverityCode = Message<"google.fhir.r4.core.DetectedIssue.SeverityCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DetectedIssueSeverityCode.Value value = 1;
   */
  value: DetectedIssueSeverityCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.SeverityCode.
 * Use `create(DetectedIssue_SeverityCodeSchema)` to create a new message.
 */
export const DetectedIssue_SeverityCodeSchema: GenMessage<DetectedIssue_SeverityCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0, 1);

/**
 * When identified
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.IdentifiedX
 */
export type DetectedIssue_IdentifiedX = Message<"google.fhir.r4.core.DetectedIssue.IdentifiedX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.DetectedIssue.IdentifiedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.IdentifiedX.
 * Use `create(DetectedIssue_IdentifiedXSchema)` to create a new message.
 */
export const DetectedIssue_IdentifiedXSchema: GenMessage<DetectedIssue_IdentifiedX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0, 2);

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.Evidence
 */
export type DetectedIssue_Evidence = Message<"google.fhir.r4.core.DetectedIssue.Evidence"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Manifestation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 4;
   */
  code: CodeableConcept[];

  /**
   * Supporting information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detail = 5;
   */
  detail: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.Evidence.
 * Use `create(DetectedIssue_EvidenceSchema)` to create a new message.
 */
export const DetectedIssue_EvidenceSchema: GenMessage<DetectedIssue_Evidence> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0, 3);

/**
 * Step taken to address
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.Mitigation
 */
export type DetectedIssue_Mitigation = Message<"google.fhir.r4.core.DetectedIssue.Mitigation"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * What mitigation?
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Date committed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 5;
   */
  date?: DateTime;

  /**
   * Who is committing?
   *
   * @generated from field: google.fhir.r4.core.Reference author = 6;
   */
  author?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.DetectedIssue.Mitigation.
 * Use `create(DetectedIssue_MitigationSchema)` to create a new message.
 */
export const DetectedIssue_MitigationSchema: GenMessage<DetectedIssue_Mitigation> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_detected_issue, 0, 4);

