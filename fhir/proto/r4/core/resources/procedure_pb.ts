//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/procedure.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { EventStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Age, Annotation, Canonical, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Range, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/procedure.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_procedure: GenFile = /*@__PURE__*/
  fileDesc("Cjlwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9wcm9jZWR1cmUucHJvdG8SE2dvb2dsZS5maGlyLnI0LmNvcmUigh4KCVByb2NlZHVyZRIjCgJpZBgBIAEoCzIXLmdvb2dsZS5maGlyLnI0LmNvcmUuSWQSJwoEbWV0YRgCIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuTWV0YRIwCg5pbXBsaWNpdF9ydWxlcxgDIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuVXJpEisKCGxhbmd1YWdlGAQgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlEiwKBHRleHQYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRInCgljb250YWluZWQYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EjEKCWV4dGVuc2lvbhgIIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjMKCmlkZW50aWZpZXIYCiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISPgoWaW5zdGFudGlhdGVzX2Nhbm9uaWNhbBgLIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuQ2Fub25pY2FsEjIKEGluc3RhbnRpYXRlc191cmkYDCADKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRJUCghiYXNlZF9vbhgNIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQiLy//zCBghDYXJlUGxhbvL//MIGDlNlcnZpY2VSZXF1ZXN0Em8KB3BhcnRfb2YYDiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUI+8v/8wgYJUHJvY2VkdXJl8v/8wgYLT2JzZXJ2YXRpb27y//zCBhhNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb24SQQoGc3RhdHVzGA8gASgLMikuZ29vZ2xlLmZoaXIucjQuY29yZS5Qcm9jZWR1cmUuU3RhdHVzQ29kZUIG8NCH6wQBEjsKDXN0YXR1c19yZWFzb24YECABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI2CghjYXRlZ29yeRgRIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjIKBGNvZGUYEiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBJPCgdzdWJqZWN0GBMgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCHvDQh+sEAfL//MIGB1BhdGllbnTy//zCBgVHcm91cBJCCgllbmNvdW50ZXIYFCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJRW5jb3VudGVyEjwKCXBlcmZvcm1lZBgVIAEoCzIpLmdvb2dsZS5maGlyLnI0LmNvcmUuUHJvY2VkdXJlLlBlcmZvcm1lZFgSegoIcmVjb3JkZXIYFiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJI8v/8wgYHUGF0aWVudPL//MIGDVJlbGF0ZWRQZXJzb27y//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xlEnoKCGFzc2VydGVyGBcgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCSPL//MIGB1BhdGllbnTy//zCBg1SZWxhdGVkUGVyc29u8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZRI7CglwZXJmb3JtZXIYGCADKAsyKC5nb29nbGUuZmhpci5yNC5jb3JlLlByb2NlZHVyZS5QZXJmb3JtZXISQAoIbG9jYXRpb24YGSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIO8v/8wgYITG9jYXRpb24SOQoLcmVhc29uX2NvZGUYGiADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBKWAQoQcmVhc29uX3JlZmVyZW5jZRgbIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQlzy//zCBglDb25kaXRpb27y//zCBgtPYnNlcnZhdGlvbvL//MIGCVByb2NlZHVyZfL//MIGEERpYWdub3N0aWNSZXBvcnTy//zCBhFEb2N1bWVudFJlZmVyZW5jZRI3Cglib2R5X3NpdGUYHCADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI1CgdvdXRjb21lGB0gASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSbgoGcmVwb3J0GB4gAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCPvL//MIGEERpYWdub3N0aWNSZXBvcnTy//zCBhFEb2N1bWVudFJlZmVyZW5jZfL//MIGC0NvbXBvc2l0aW9uEjoKDGNvbXBsaWNhdGlvbhgfIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EkwKE2NvbXBsaWNhdGlvbl9kZXRhaWwYICADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJQ29uZGl0aW9uEjcKCWZvbGxvd191cBghIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ei0KBG5vdGUYIiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkFubm90YXRpb24SQAoMZm9jYWxfZGV2aWNlGCMgAygLMiouZ29vZ2xlLmZoaXIucjQuY29yZS5Qcm9jZWR1cmUuRm9jYWxEZXZpY2USYwoOdXNlZF9yZWZlcmVuY2UYJCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIr8v/8wgYGRGV2aWNl8v/8wgYKTWVkaWNhdGlvbvL//MIGCVN1YnN0YW5jZRI3Cgl1c2VkX2NvZGUYJSADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBqMAgoKU3RhdHVzQ29kZRI5CgV2YWx1ZRgBIAEoDjIqLmdvb2dsZS5maGlyLnI0LmNvcmUuRXZlbnRTdGF0dXNDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246Z4r5g7IFKWh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZXZlbnQtc3RhdHVzwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUalAIKClBlcmZvcm1lZFgSMgoJZGF0ZV90aW1lGAEgASgLMh0uZ29vZ2xlLmZoaXIucjQuY29yZS5EYXRlVGltZUgAEi0KBnBlcmlvZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuUGVyaW9kSAASOwoMc3RyaW5nX3ZhbHVlGAMgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmdIAFIGc3RyaW5nEicKA2FnZRgEIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuQWdlSAASKwoFcmFuZ2UYBSABKAsyGi5nb29nbGUuZmhpci5yNC5jb3JlLlJhbmdlSAA6BqCDg+gGAUIICgZjaG9pY2UawwMKCVBlcmZvcm1lchInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjYKCGZ1bmN0aW9uGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSmwEKBWFjdG9yGAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCbPDQh+sEAfL//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGXy//zCBgxPcmdhbml6YXRpb27y//zCBgdQYXRpZW508v/8wgYNUmVsYXRlZFBlcnNvbvL//MIGBkRldmljZRJICgxvbl9iZWhhbGZfb2YYBiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIS8v/8wgYMT3JnYW5pemF0aW9uGqQCCgtGb2NhbERldmljZRInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjQKBmFjdGlvbhgEIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EkcKC21hbmlwdWxhdGVkGAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCEvDQh+sEAfL//MIGBkRldmljZTo9wJ/jtgUDsv7klwYxaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL1Byb2NlZHVyZUoECAcQCEJ5Chdjb20uZ29vZ2xlLmZoaXIucjQuY29yZVABWlZnaXRodWIuY29tL2dvb2dsZS9maGlyL2dvL3Byb3RvL2dvb2dsZS9maGlyL3Byb3RvL3I0L2NvcmUvcmVzb3VyY2VzL3Byb2NlZHVyZV9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Procedure.
 * An action that is being or was performed on a patient.
 * See http://hl7.org/fhir/StructureDefinition/Procedure
 *
 * @generated from message google.fhir.r4.core.Procedure
 */
export type Procedure = Message<"google.fhir.r4.core.Procedure"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * External Identifiers for this procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[];

  /**
   * A request for this procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 14;
   */
  partOf: Reference[];

  /**
   * @generated from field: google.fhir.r4.core.Procedure.StatusCode status = 15;
   */
  status?: Procedure_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 16;
   */
  statusReason?: CodeableConcept;

  /**
   * Classification of the procedure
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 17;
   */
  category?: CodeableConcept;

  /**
   * Identification of the procedure
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 18;
   */
  code?: CodeableConcept;

  /**
   * Who the procedure was performed on
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 20;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Procedure.PerformedX performed = 21;
   */
  performed?: Procedure_PerformedX;

  /**
   * Who recorded the procedure
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 22;
   */
  recorder?: Reference;

  /**
   * Person who asserts this procedure
   *
   * @generated from field: google.fhir.r4.core.Reference asserter = 23;
   */
  asserter?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Procedure.Performer performer = 24;
   */
  performer: Procedure_Performer[];

  /**
   * Where the procedure happened
   *
   * @generated from field: google.fhir.r4.core.Reference location = 25;
   */
  location?: Reference;

  /**
   * Coded reason procedure performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 26;
   */
  reasonCode: CodeableConcept[];

  /**
   * The justification that the procedure was performed
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 27;
   */
  reasonReference: Reference[];

  /**
   * Target body sites
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept body_site = 28;
   */
  bodySite: CodeableConcept[];

  /**
   * The result of procedure
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept outcome = 29;
   */
  outcome?: CodeableConcept;

  /**
   * Any report resulting from the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference report = 30;
   */
  report: Reference[];

  /**
   * Complication following the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept complication = 31;
   */
  complication: CodeableConcept[];

  /**
   * A condition that is a result of the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference complication_detail = 32;
   */
  complicationDetail: Reference[];

  /**
   * Instructions for follow up
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept follow_up = 33;
   */
  followUp: CodeableConcept[];

  /**
   * Additional information about the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 34;
   */
  note: Annotation[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Procedure.FocalDevice focal_device = 35;
   */
  focalDevice: Procedure_FocalDevice[];

  /**
   * Items used during procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference used_reference = 36;
   */
  usedReference: Reference[];

  /**
   * Coded items used during the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept used_code = 37;
   */
  usedCode: CodeableConcept[];
};

/**
 * Describes the message google.fhir.r4.core.Procedure.
 * Use `create(ProcedureSchema)` to create a new message.
 */
export const ProcedureSchema: GenMessage<Procedure> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_procedure, 0);

/**
 * preparation | in-progress | not-done | on-hold | stopped | completed |
 * entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.Procedure.StatusCode
 */
export type Procedure_StatusCode = Message<"google.fhir.r4.core.Procedure.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.EventStatusCode.Value value = 1;
   */
  value: EventStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Procedure.StatusCode.
 * Use `create(Procedure_StatusCodeSchema)` to create a new message.
 */
export const Procedure_StatusCodeSchema: GenMessage<Procedure_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_procedure, 0, 0);

/**
 * When the procedure was performed
 *
 * @generated from message google.fhir.r4.core.Procedure.PerformedX
 */
export type Procedure_PerformedX = Message<"google.fhir.r4.core.Procedure.PerformedX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Procedure.PerformedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 4;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 5;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Procedure.PerformedX.
 * Use `create(Procedure_PerformedXSchema)` to create a new message.
 */
export const Procedure_PerformedXSchema: GenMessage<Procedure_PerformedX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_procedure, 0, 1);

/**
 * The people who performed the procedure
 *
 * @generated from message google.fhir.r4.core.Procedure.Performer
 */
export type Procedure_Performer = Message<"google.fhir.r4.core.Procedure.Performer"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of performance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * The reference to the practitioner
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  /**
   * Organization the device or practitioner was acting for
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Procedure.Performer.
 * Use `create(Procedure_PerformerSchema)` to create a new message.
 */
export const Procedure_PerformerSchema: GenMessage<Procedure_Performer> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_procedure, 0, 2);

/**
 * Manipulated, implanted, or removed device
 *
 * @generated from message google.fhir.r4.core.Procedure.FocalDevice
 */
export type Procedure_FocalDevice = Message<"google.fhir.r4.core.Procedure.FocalDevice"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Kind of change to device
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Device that was changed
   *
   * @generated from field: google.fhir.r4.core.Reference manipulated = 5;
   */
  manipulated?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Procedure.FocalDevice.
 * Use `create(Procedure_FocalDeviceSchema)` to create a new message.
 */
export const Procedure_FocalDeviceSchema: GenMessage<Procedure_FocalDevice> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_procedure, 0, 3);

