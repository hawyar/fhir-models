//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/test_script.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { AssertionDirectionTypeCode_Value, AssertionOperatorTypeCode_Value, AssertionResponseTypesCode_Value, PublicationStatusCode_Value, TestScriptRequestMethodCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, DateTime, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, Reference, String, Uri, UsageContext } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { FHIRDefinedTypeValueSet_Value } from "../valuesets_pb";
import { file_proto_google_fhir_proto_r4_core_valuesets } from "../valuesets_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/test_script.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_test_script: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes, file_proto_google_fhir_proto_r4_core_valuesets]);

/**
 * Auto-generated from StructureDefinition for TestScript.
 * Describes a set of tests.
 * See http://hl7.org/fhir/StructureDefinition/TestScript
 *
 * @generated from message google.fhir.r4.core.TestScript
 */
export type TestScript = Message<"google.fhir.r4.core.TestScript"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Canonical identifier for this test script, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the test script
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier?: Identifier;

  /**
   * Business version of the test script
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this test script (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this test script (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.StatusCode status = 15;
   */
  status?: TestScript_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[];

  /**
   * Natural language description of the test script
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[];

  /**
   * Intended jurisdiction for test script (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[];

  /**
   * Why this test script is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Origin origin = 25;
   */
  origin: TestScript_Origin[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Destination destination = 26;
   */
  destination: TestScript_Destination[];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Metadata metadata = 27;
   */
  metadata?: TestScript_Metadata;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Fixture fixture = 28;
   */
  fixture: TestScript_Fixture[];

  /**
   * Reference of the validation profile
   *
   * @generated from field: repeated google.fhir.r4.core.Reference profile = 29;
   */
  profile: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Variable variable = 30;
   */
  variable: TestScript_Variable[];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup setup = 31;
   */
  setup?: TestScript_Setup;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Test test = 32;
   */
  test: TestScript_Test[];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Teardown teardown = 33;
   */
  teardown?: TestScript_Teardown;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.
 * Use `create(TestScriptSchema)` to create a new message.
 */
export const TestScriptSchema: GenMessage<TestScript> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0);

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.TestScript.StatusCode
 */
export type TestScript_StatusCode = Message<"google.fhir.r4.core.TestScript.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value: PublicationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.StatusCode.
 * Use `create(TestScript_StatusCodeSchema)` to create a new message.
 */
export const TestScript_StatusCodeSchema: GenMessage<TestScript_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 0);

/**
 * An abstract server representing a client or sender in a message exchange
 *
 * @generated from message google.fhir.r4.core.TestScript.Origin
 */
export type TestScript_Origin = Message<"google.fhir.r4.core.TestScript.Origin"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The index of the abstract origin server starting at 1
   *
   * @generated from field: google.fhir.r4.core.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Client | FHIR-SDC-FormFiller
   *
   * @generated from field: google.fhir.r4.core.Coding profile = 5;
   */
  profile?: Coding;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Origin.
 * Use `create(TestScript_OriginSchema)` to create a new message.
 */
export const TestScript_OriginSchema: GenMessage<TestScript_Origin> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 1);

/**
 * An abstract server representing a destination or receiver in a message
 * exchange
 *
 * @generated from message google.fhir.r4.core.TestScript.Destination
 */
export type TestScript_Destination = Message<"google.fhir.r4.core.TestScript.Destination"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The index of the abstract destination server starting at 1
   *
   * @generated from field: google.fhir.r4.core.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver |
   * FHIR-SDC-FormProcessor
   *
   * @generated from field: google.fhir.r4.core.Coding profile = 5;
   */
  profile?: Coding;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Destination.
 * Use `create(TestScript_DestinationSchema)` to create a new message.
 */
export const TestScript_DestinationSchema: GenMessage<TestScript_Destination> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 2);

/**
 * Required capability that is assumed to function correctly on the FHIR
 * server being tested
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata
 */
export type TestScript_Metadata = Message<"google.fhir.r4.core.TestScript.Metadata"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Metadata.Link link = 4;
   */
  link: TestScript_Metadata_Link[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Metadata.Capability capability = 5;
   */
  capability: TestScript_Metadata_Capability[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.
 * Use `create(TestScript_MetadataSchema)` to create a new message.
 */
export const TestScript_MetadataSchema: GenMessage<TestScript_Metadata> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3);

/**
 * Links to the FHIR specification
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata.Link
 */
export type TestScript_Metadata_Link = Message<"google.fhir.r4.core.TestScript.Metadata.Link"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * URL to the specification
   *
   * @generated from field: google.fhir.r4.core.Uri url = 4;
   */
  url?: Uri;

  /**
   * Short description
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.Link.
 * Use `create(TestScript_Metadata_LinkSchema)` to create a new message.
 */
export const TestScript_Metadata_LinkSchema: GenMessage<TestScript_Metadata_Link> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3, 0);

/**
 * Capabilities  that are assumed to function correctly on the FHIR server
 * being tested
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata.Capability
 */
export type TestScript_Metadata_Capability = Message<"google.fhir.r4.core.TestScript.Metadata.Capability"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Are the capabilities required?
   *
   * @generated from field: google.fhir.r4.core.Boolean required = 4;
   */
  required?: Boolean;

  /**
   * Are the capabilities validated?
   *
   * @generated from field: google.fhir.r4.core.Boolean validated = 5;
   */
  validated?: Boolean;

  /**
   * The expected capabilities of the server
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * Which origin server these requirements apply to
   *
   * @generated from field: repeated google.fhir.r4.core.Integer origin = 7;
   */
  origin: Integer[];

  /**
   * Which server these requirements apply to
   *
   * @generated from field: google.fhir.r4.core.Integer destination = 8;
   */
  destination?: Integer;

  /**
   * Links to the FHIR specification
   *
   * @generated from field: repeated google.fhir.r4.core.Uri link = 9;
   */
  link: Uri[];

  /**
   * Required Capability Statement
   *
   * @generated from field: google.fhir.r4.core.Canonical capabilities = 10;
   */
  capabilities?: Canonical;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Metadata.Capability.
 * Use `create(TestScript_Metadata_CapabilitySchema)` to create a new message.
 */
export const TestScript_Metadata_CapabilitySchema: GenMessage<TestScript_Metadata_Capability> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 3, 1);

/**
 * Fixture in the test script - by reference (uri)
 *
 * @generated from message google.fhir.r4.core.TestScript.Fixture
 */
export type TestScript_Fixture = Message<"google.fhir.r4.core.TestScript.Fixture"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Whether or not to implicitly create the fixture during setup
   *
   * @generated from field: google.fhir.r4.core.Boolean autocreate = 4;
   */
  autocreate?: Boolean;

  /**
   * Whether or not to implicitly delete the fixture during teardown
   *
   * @generated from field: google.fhir.r4.core.Boolean autodelete = 5;
   */
  autodelete?: Boolean;

  /**
   * Reference of the resource
   *
   * @generated from field: google.fhir.r4.core.Reference resource = 6;
   */
  resource?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Fixture.
 * Use `create(TestScript_FixtureSchema)` to create a new message.
 */
export const TestScript_FixtureSchema: GenMessage<TestScript_Fixture> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 4);

/**
 * Placeholder for evaluated elements
 *
 * @generated from message google.fhir.r4.core.TestScript.Variable
 */
export type TestScript_Variable = Message<"google.fhir.r4.core.TestScript.Variable"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Descriptive name for this variable
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Default, hard-coded, or user-defined value for this variable
   *
   * @generated from field: google.fhir.r4.core.String default_value = 5;
   */
  defaultValue?: String;

  /**
   * Natural language description of the variable
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * The FHIRPath expression against the fixture body
   *
   * @generated from field: google.fhir.r4.core.String expression = 7;
   */
  expression?: String;

  /**
   * HTTP header field name for source
   *
   * @generated from field: google.fhir.r4.core.String header_field = 8;
   */
  headerField?: String;

  /**
   * Hint help text for default value to enter
   *
   * @generated from field: google.fhir.r4.core.String hint = 9;
   */
  hint?: String;

  /**
   * XPath or JSONPath against the fixture body
   *
   * @generated from field: google.fhir.r4.core.String path = 10;
   */
  path?: String;

  /**
   * Fixture Id of source expression or headerField within this variable
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 11;
   */
  sourceId?: Id;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Variable.
 * Use `create(TestScript_VariableSchema)` to create a new message.
 */
export const TestScript_VariableSchema: GenMessage<TestScript_Variable> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 5);

/**
 * A series of required setup operations before tests are executed
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup
 */
export type TestScript_Setup = Message<"google.fhir.r4.core.TestScript.Setup"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Setup.SetupAction action = 4;
   */
  action: TestScript_Setup_SetupAction[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.
 * Use `create(TestScript_SetupSchema)` to create a new message.
 */
export const TestScript_SetupSchema: GenMessage<TestScript_Setup> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6);

/**
 * A setup operation or assert to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction
 */
export type TestScript_Setup_SetupAction = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.
 * Use `create(TestScript_Setup_SetupActionSchema)` to create a new message.
 */
export const TestScript_Setup_SetupActionSchema: GenMessage<TestScript_Setup_SetupAction> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0);

/**
 * The setup operation to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation
 */
export type TestScript_Setup_SetupAction_Operation = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The operation code type that will be executed
   *
   * @generated from field: google.fhir.r4.core.Coding type = 4;
   */
  type?: Coding;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode resource = 5;
   */
  resource?: TestScript_Setup_SetupAction_Operation_ResourceCode;

  /**
   * Tracking/logging operation label
   *
   * @generated from field: google.fhir.r4.core.String label = 6;
   */
  label?: String;

  /**
   * Tracking/reporting operation description
   *
   * @generated from field: google.fhir.r4.core.String description = 7;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode accept = 8;
   */
  accept?: TestScript_Setup_SetupAction_Operation_AcceptCode;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode content_type = 9;
   */
  contentType?: TestScript_Setup_SetupAction_Operation_ContentTypeCode;

  /**
   * Server responding to the request
   *
   * @generated from field: google.fhir.r4.core.Integer destination = 10;
   */
  destination?: Integer;

  /**
   * Whether or not to send the request url in encoded format
   *
   * @generated from field: google.fhir.r4.core.Boolean encode_request_url = 11;
   */
  encodeRequestUrl?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode method = 12;
   */
  method?: TestScript_Setup_SetupAction_Operation_MethodCode;

  /**
   * Server initiating the request
   *
   * @generated from field: google.fhir.r4.core.Integer origin = 13;
   */
  origin?: Integer;

  /**
   * Explicitly defined path parameters
   *
   * @generated from field: google.fhir.r4.core.String params = 14;
   */
  params?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader request_header = 15;
   */
  requestHeader: TestScript_Setup_SetupAction_Operation_RequestHeader[];

  /**
   * Fixture Id of mapped request
   *
   * @generated from field: google.fhir.r4.core.Id request_id = 16;
   */
  requestId?: Id;

  /**
   * Fixture Id of mapped response
   *
   * @generated from field: google.fhir.r4.core.Id response_id = 17;
   */
  responseId?: Id;

  /**
   * Fixture Id of body for PUT and POST requests
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 18;
   */
  sourceId?: Id;

  /**
   * Id of fixture used for extracting the [id],  [type], and [vid] for
   * GET requests
   *
   * @generated from field: google.fhir.r4.core.Id target_id = 19;
   */
  targetId?: Id;

  /**
   * Request URL
   *
   * @generated from field: google.fhir.r4.core.String url = 20;
   */
  url?: String;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.
 * Use `create(TestScript_Setup_SetupAction_OperationSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_OperationSchema: GenMessage<TestScript_Setup_SetupAction_Operation> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0);

/**
 * Resource type
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode
 */
export type TestScript_Setup_SetupAction_Operation_ResourceCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.FHIRDefinedTypeValueSet.Value value = 1;
   */
  value: FHIRDefinedTypeValueSet_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_ResourceCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Operation_ResourceCodeSchema: GenMessage<TestScript_Setup_SetupAction_Operation_ResourceCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 0);

/**
 * Mime type to accept in the payload of the response, with charset etc.
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode
 */
export type TestScript_Setup_SetupAction_Operation_AcceptCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_AcceptCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Operation_AcceptCodeSchema: GenMessage<TestScript_Setup_SetupAction_Operation_AcceptCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 1);

/**
 * Mime type of the request payload contents, with charset etc.
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode
 */
export type TestScript_Setup_SetupAction_Operation_ContentTypeCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_ContentTypeCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Operation_ContentTypeCodeSchema: GenMessage<TestScript_Setup_SetupAction_Operation_ContentTypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 2);

/**
 * delete | get | options | patch | post | put | head
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode
 */
export type TestScript_Setup_SetupAction_Operation_MethodCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.TestScriptRequestMethodCode.Value value = 1;
   */
  value: TestScriptRequestMethodCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode.
 * Use `create(TestScript_Setup_SetupAction_Operation_MethodCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Operation_MethodCodeSchema: GenMessage<TestScript_Setup_SetupAction_Operation_MethodCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 3);

/**
 * Each operation can have one or more header elements
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader
 */
export type TestScript_Setup_SetupAction_Operation_RequestHeader = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.r4.core.String field = 4;
   */
  field?: String;

  /**
   * HTTP headerfield value
   *
   * @generated from field: google.fhir.r4.core.String value = 5;
   */
  value?: String;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader.
 * Use `create(TestScript_Setup_SetupAction_Operation_RequestHeaderSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Operation_RequestHeaderSchema: GenMessage<TestScript_Setup_SetupAction_Operation_RequestHeader> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 0, 4);

/**
 * The assertion to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert
 */
export type TestScript_Setup_SetupAction_Assert = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Tracking/logging assertion label
   *
   * @generated from field: google.fhir.r4.core.String label = 4;
   */
  label?: String;

  /**
   * Tracking/reporting assertion description
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode direction = 6;
   */
  direction?: TestScript_Setup_SetupAction_Assert_DirectionCode;

  /**
   * Id of the source fixture to be evaluated
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_id = 7;
   */
  compareToSourceId?: String;

  /**
   * The FHIRPath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_expression = 8;
   */
  compareToSourceExpression?: String;

  /**
   * XPath or JSONPath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_path = 9;
   */
  compareToSourcePath?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode content_type = 10;
   */
  contentType?: TestScript_Setup_SetupAction_Assert_ContentTypeCode;

  /**
   * The FHIRPath expression to be evaluated
   *
   * @generated from field: google.fhir.r4.core.String expression = 11;
   */
  expression?: String;

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.r4.core.String header_field = 12;
   */
  headerField?: String;

  /**
   * Fixture Id of minimum content resource
   *
   * @generated from field: google.fhir.r4.core.String minimum_id = 13;
   */
  minimumId?: String;

  /**
   * Perform validation on navigation links?
   *
   * @generated from field: google.fhir.r4.core.Boolean navigation_links = 14;
   */
  navigationLinks?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode operator = 15;
   */
  operator?: TestScript_Setup_SetupAction_Assert_OperatorCode;

  /**
   * XPath or JSONPath expression
   *
   * @generated from field: google.fhir.r4.core.String path = 16;
   */
  path?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode request_method = 17;
   */
  requestMethod?: TestScript_Setup_SetupAction_Assert_RequestMethodCode;

  /**
   * Request URL comparison value
   *
   * @generated from field: google.fhir.r4.core.String request_url = 18 [json_name = "requestURL"];
   */
  requestUrl?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode resource = 19;
   */
  resource?: TestScript_Setup_SetupAction_Assert_ResourceCode;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode response = 20;
   */
  response?: TestScript_Setup_SetupAction_Assert_ResponseCode;

  /**
   * HTTP response code to test
   *
   * @generated from field: google.fhir.r4.core.String response_code = 21;
   */
  responseCode?: String;

  /**
   * Fixture Id of source expression or headerField
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 22;
   */
  sourceId?: Id;

  /**
   * Profile Id of validation profile reference
   *
   * @generated from field: google.fhir.r4.core.Id validate_profile_id = 23;
   */
  validateProfileId?: Id;

  /**
   * The value to compare to
   *
   * @generated from field: google.fhir.r4.core.String value = 24;
   */
  value?: String;

  /**
   * Will this assert produce a warning only on error?
   *
   * @generated from field: google.fhir.r4.core.Boolean warning_only = 25;
   */
  warningOnly?: Boolean;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.
 * Use `create(TestScript_Setup_SetupAction_AssertSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_AssertSchema: GenMessage<TestScript_Setup_SetupAction_Assert> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1);

/**
 * response | request
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode
 */
export type TestScript_Setup_SetupAction_Assert_DirectionCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.AssertionDirectionTypeCode.Value value = 1;
   */
  value: AssertionDirectionTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_DirectionCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_DirectionCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_DirectionCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 0);

/**
 * Mime type to compare against the 'Content-Type' header
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode
 */
export type TestScript_Setup_SetupAction_Assert_ContentTypeCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ContentTypeCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_ContentTypeCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_ContentTypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 1);

/**
 * equals | notEquals | in | notIn | greaterThan | lessThan | empty |
 * notEmpty | contains | notContains | eval
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode
 */
export type TestScript_Setup_SetupAction_Assert_OperatorCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.AssertionOperatorTypeCode.Value value = 1;
   */
  value: AssertionOperatorTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_OperatorCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_OperatorCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_OperatorCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 2);

/**
 * delete | get | options | patch | post | put | head
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode
 */
export type TestScript_Setup_SetupAction_Assert_RequestMethodCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.TestScriptRequestMethodCode.Value value = 1;
   */
  value: TestScriptRequestMethodCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_RequestMethodCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_RequestMethodCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_RequestMethodCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 3);

/**
 * Resource type
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode
 */
export type TestScript_Setup_SetupAction_Assert_ResourceCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.FHIRDefinedTypeValueSet.Value value = 1;
   */
  value: FHIRDefinedTypeValueSet_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ResourceCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_ResourceCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_ResourceCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 4);

/**
 * okay | created | noContent | notModified | bad | forbidden | notFound
 * | methodNotAllowed | conflict | gone | preconditionFailed |
 * unprocessable
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode
 */
export type TestScript_Setup_SetupAction_Assert_ResponseCode = Message<"google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.AssertionResponseTypesCode.Value value = 1;
   */
  value: AssertionResponseTypesCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode.
 * Use `create(TestScript_Setup_SetupAction_Assert_ResponseCodeSchema)` to create a new message.
 */
export const TestScript_Setup_SetupAction_Assert_ResponseCodeSchema: GenMessage<TestScript_Setup_SetupAction_Assert_ResponseCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 6, 0, 1, 5);

/**
 * A test in this script
 *
 * @generated from message google.fhir.r4.core.TestScript.Test
 */
export type TestScript_Test = Message<"google.fhir.r4.core.TestScript.Test"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Tracking/logging name of this test
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Tracking/reporting short description of the test
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Test.TestAction action = 6;
   */
  action: TestScript_Test_TestAction[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Test.
 * Use `create(TestScript_TestSchema)` to create a new message.
 */
export const TestScript_TestSchema: GenMessage<TestScript_Test> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 7);

/**
 * A test operation or assert to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Test.TestAction
 */
export type TestScript_Test_TestAction = Message<"google.fhir.r4.core.TestScript.Test.TestAction"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The setup operation to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * The setup assertion to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Test.TestAction.
 * Use `create(TestScript_Test_TestActionSchema)` to create a new message.
 */
export const TestScript_Test_TestActionSchema: GenMessage<TestScript_Test_TestAction> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 7, 0);

/**
 * A series of required clean up steps
 *
 * @generated from message google.fhir.r4.core.TestScript.Teardown
 */
export type TestScript_Teardown = Message<"google.fhir.r4.core.TestScript.Teardown"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Teardown.TeardownAction action = 4;
   */
  action: TestScript_Teardown_TeardownAction[];
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Teardown.
 * Use `create(TestScript_TeardownSchema)` to create a new message.
 */
export const TestScript_TeardownSchema: GenMessage<TestScript_Teardown> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 8);

/**
 * One or more teardown operations to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Teardown.TeardownAction
 */
export type TestScript_Teardown_TeardownAction = Message<"google.fhir.r4.core.TestScript.Teardown.TeardownAction"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The teardown operation to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;
};

/**
 * Describes the message google.fhir.r4.core.TestScript.Teardown.TeardownAction.
 * Use `create(TestScript_Teardown_TeardownActionSchema)` to create a new message.
 */
export const TestScript_Teardown_TeardownActionSchema: GenMessage<TestScript_Teardown_TeardownAction> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_test_script, 0, 8, 0);

