//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/composition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { CompositionAttestationModeCode_Value, CompositionStatusCode_Value, DocumentRelationshipTypeCode_Value, ListModeCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { V3ConfidentialityClassificationValueSet_Value } from "../valuesets_pb";
import { file_proto_google_fhir_proto_r4_core_valuesets } from "../valuesets_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/composition.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_composition: GenFile = /*@__PURE__*/
  fileDesc("Cjtwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9jb21wb3NpdGlvbi5wcm90bxITZ29vZ2xlLmZoaXIucjQuY29yZSLuJwoLQ29tcG9zaXRpb24SIwoCaWQYASABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkEicKBG1ldGEYAiABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLk1ldGESMAoOaW1wbGljaXRfcnVsZXMYAyABKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRIrCghsYW5ndWFnZRgEIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZRIsCgR0ZXh0GAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5OYXJyYXRpdmUSJwoJY29udGFpbmVkGAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIxCglleHRlbnNpb24YCCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YCSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIzCgppZGVudGlmaWVyGAogASgLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVyEkMKBnN0YXR1cxgLIAEoCzIrLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29tcG9zaXRpb24uU3RhdHVzQ29kZUIG8NCH6wQBEjoKBHR5cGUYDCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdEIG8NCH6wQBEjYKCGNhdGVnb3J5GA0gAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSPwoHc3ViamVjdBgOIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghSZXNvdXJjZRJCCgllbmNvdW50ZXIYDyABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJRW5jb3VudGVyEjMKBGRhdGUYECABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lQgbw0IfrBAESnAEKBmF1dGhvchgRIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQmzw0IfrBAHy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYGRGV2aWNl8v/8wgYHUGF0aWVudPL//MIGDVJlbGF0ZWRQZXJzb27y//zCBgxPcmdhbml6YXRpb24SMgoFdGl0bGUYEiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZ0IG8NCH6wQBEk0KD2NvbmZpZGVudGlhbGl0eRgTIAEoCzI0Lmdvb2dsZS5maGlyLnI0LmNvcmUuQ29tcG9zaXRpb24uQ29uZmlkZW50aWFsaXR5Q29kZRI7CghhdHRlc3RlchgUIAMoCzIpLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29tcG9zaXRpb24uQXR0ZXN0ZXISRQoJY3VzdG9kaWFuGBUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCEvL//MIGDE9yZ2FuaXphdGlvbhI+CgpyZWxhdGVzX3RvGBYgAygLMiouZ29vZ2xlLmZoaXIucjQuY29yZS5Db21wb3NpdGlvbi5SZWxhdGVzVG8SNQoFZXZlbnQYFyADKAsyJi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbXBvc2l0aW9uLkV2ZW50EjkKB3NlY3Rpb24YGCADKAsyKC5nb29nbGUuZmhpci5yNC5jb3JlLkNvbXBvc2l0aW9uLlNlY3Rpb24amAIKClN0YXR1c0NvZGUSPwoFdmFsdWUYASABKA4yMC5nb29nbGUuZmhpci5yNC5jb3JlLkNvbXBvc2l0aW9uU3RhdHVzQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOm2K+YOyBS9odHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbXBvc2l0aW9uLXN0YXR1c8Cf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGskCChNDb25maWRlbnRpYWxpdHlDb2RlElEKBXZhbHVlGAEgASgOMkIuZ29vZ2xlLmZoaXIucjQuY29yZS5WM0NvbmZpZGVudGlhbGl0eUNsYXNzaWZpY2F0aW9uVmFsdWVTZXQuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjqCAYr5g7IFRGh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL1ZhbHVlU2V0L3YzLUNvbmZpZGVudGlhbGl0eUNsYXNzaWZpY2F0aW9uwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUa0QUKCEF0dGVzdGVyEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SSAoEbW9kZRgEIAEoCzIyLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29tcG9zaXRpb24uQXR0ZXN0ZXIuTW9kZUNvZGVCBvDQh+sEARIrCgR0aW1lGAUgASgLMh0uZ29vZ2xlLmZoaXIucjQuY29yZS5EYXRlVGltZRKJAQoFcGFydHkYBiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJa8v/8wgYHUGF0aWVudPL//MIGDVJlbGF0ZWRQZXJzb27y//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYMT3JnYW5pemF0aW9uGqkCCghNb2RlQ29kZRJICgV2YWx1ZRgBIAEoDjI5Lmdvb2dsZS5maGlyLnI0LmNvcmUuQ29tcG9zaXRpb25BdHRlc3RhdGlvbk1vZGVDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246d4r5g7IFOWh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29tcG9zaXRpb24tYXR0ZXN0YXRpb24tbW9kZcCf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGv8FCglSZWxhdGVzVG8SJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhJJCgRjb2RlGAQgASgLMjMuZ29vZ2xlLmZoaXIucjQuY29yZS5Db21wb3NpdGlvbi5SZWxhdGVzVG8uQ29kZVR5cGVCBvDQh+sEARJKCgZ0YXJnZXQYBSABKAsyMi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbXBvc2l0aW9uLlJlbGF0ZXNUby5UYXJnZXRYQgbw0IfrBAEapQIKCENvZGVUeXBlEkYKBXZhbHVlGAEgASgOMjcuZ29vZ2xlLmZoaXIucjQuY29yZS5Eb2N1bWVudFJlbGF0aW9uc2hpcFR5cGVDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246dYr5g7IFN2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZG9jdW1lbnQtcmVsYXRpb25zaGlwLXR5cGXAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqaAQoHVGFyZ2V0WBI1CgppZGVudGlmaWVyGAEgASgLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVySAASRgoJcmVmZXJlbmNlGAIgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCEfL//MIGC0NvbXBvc2l0aW9uSAA6BqCDg+gGAUIICgZjaG9pY2UawAIKBUV2ZW50EicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMgoEY29kZRgEIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EisKBnBlcmlvZBgFIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuUGVyaW9kEj4KBmRldGFpbBgGIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghSZXNvdXJjZRqkCQoHU2VjdGlvbhInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEioKBXRpdGxlGAQgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMgoEY29kZRgFIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EpYBCgZhdXRob3IYBiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJm8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZfL//MIGBkRldmljZfL//MIGB1BhdGllbnTy//zCBg1SZWxhdGVkUGVyc29u8v/8wgYMT3JnYW5pemF0aW9uEj0KBWZvY3VzGAcgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCFJlc291cmNlEiwKBHRleHQYCCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRI/CgRtb2RlGAkgASgLMjEuZ29vZ2xlLmZoaXIucjQuY29yZS5Db21wb3NpdGlvbi5TZWN0aW9uLk1vZGVDb2RlEjgKCm9yZGVyZWRfYnkYCiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI9CgVlbnRyeRgLIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghSZXNvdXJjZRI6CgxlbXB0eV9yZWFzb24YDCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI5CgdzZWN0aW9uGA0gAygLMiguZ29vZ2xlLmZoaXIucjQuY29yZS5Db21wb3NpdGlvbi5TZWN0aW9uGoQCCghNb2RlQ29kZRI2CgV2YWx1ZRgBIAEoDjInLmdvb2dsZS5maGlyLnI0LmNvcmUuTGlzdE1vZGVDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246ZIr5g7IFJmh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbGlzdC1tb2RlwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGU6Y5qGk6AIM3RleHQuZXhpc3RzKCkgb3IgZW50cnkuZXhpc3RzKCkgb3Igc2VjdGlvbi5leGlzdHMoKZqGk6AIJGVtcHR5UmVhc29uLmVtcHR5KCkgb3IgZW50cnkuZW1wdHkoKTo/wJ/jtgUDsv7klwYzaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL0NvbXBvc2l0aW9uSgQIBxAIQnsKF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaWGdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvY29tcG9zaXRpb25fZ29fcHJvdG+YxrC1BwRiBnByb3RvMw", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes, file_proto_google_fhir_proto_r4_core_valuesets]);

/**
 * Auto-generated from StructureDefinition for Composition.
 * A set of resources composed into a single coherent clinical statement with
 * clinical attestation. See http://hl7.org/fhir/StructureDefinition/Composition
 *
 * @generated from message google.fhir.r4.core.Composition
 */
export type Composition = Message<"google.fhir.r4.core.Composition"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Version-independent identifier for the Composition
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * @generated from field: google.fhir.r4.core.Composition.StatusCode status = 11;
   */
  status?: Composition_StatusCode;

  /**
   * Kind of composition (LOINC if possible)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * Categorization of Composition
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[];

  /**
   * Who and/or what the composition is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Context of the Composition
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * Composition editing time
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Who and/or what authored the composition
   *
   * @generated from field: repeated google.fhir.r4.core.Reference author = 17;
   */
  author: Reference[];

  /**
   * Human Readable name/title
   *
   * @generated from field: google.fhir.r4.core.String title = 18;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.Composition.ConfidentialityCode confidentiality = 19;
   */
  confidentiality?: Composition_ConfidentialityCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.Composition.Attester attester = 20;
   */
  attester: Composition_Attester[];

  /**
   * Organization which maintains the composition
   *
   * @generated from field: google.fhir.r4.core.Reference custodian = 21;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Composition.RelatesTo relates_to = 22;
   */
  relatesTo: Composition_RelatesTo[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Composition.Event event = 23;
   */
  event: Composition_Event[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Composition.Section section = 24;
   */
  section: Composition_Section[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.
 * Use `create(CompositionSchema)` to create a new message.
 */
export const CompositionSchema: GenMessage<Composition> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0);

/**
 * preliminary | final | amended | entered-in-error
 *
 * @generated from message google.fhir.r4.core.Composition.StatusCode
 */
export type Composition_StatusCode = Message<"google.fhir.r4.core.Composition.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.CompositionStatusCode.Value value = 1;
   */
  value: CompositionStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.StatusCode.
 * Use `create(Composition_StatusCodeSchema)` to create a new message.
 */
export const Composition_StatusCodeSchema: GenMessage<Composition_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 0);

/**
 * As defined by affinity domain
 *
 * @generated from message google.fhir.r4.core.Composition.ConfidentialityCode
 */
export type Composition_ConfidentialityCode = Message<"google.fhir.r4.core.Composition.ConfidentialityCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.V3ConfidentialityClassificationValueSet.Value value = 1;
   */
  value: V3ConfidentialityClassificationValueSet_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.ConfidentialityCode.
 * Use `create(Composition_ConfidentialityCodeSchema)` to create a new message.
 */
export const Composition_ConfidentialityCodeSchema: GenMessage<Composition_ConfidentialityCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 1);

/**
 * Attests to accuracy of composition
 *
 * @generated from message google.fhir.r4.core.Composition.Attester
 */
export type Composition_Attester = Message<"google.fhir.r4.core.Composition.Attester"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.Composition.Attester.ModeCode mode = 4;
   */
  mode?: Composition_Attester_ModeCode;

  /**
   * When the composition was attested
   *
   * @generated from field: google.fhir.r4.core.DateTime time = 5;
   */
  time?: DateTime;

  /**
   * Who attested the composition
   *
   * @generated from field: google.fhir.r4.core.Reference party = 6;
   */
  party?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Composition.Attester.
 * Use `create(Composition_AttesterSchema)` to create a new message.
 */
export const Composition_AttesterSchema: GenMessage<Composition_Attester> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 2);

/**
 * personal | professional | legal | official
 *
 * @generated from message google.fhir.r4.core.Composition.Attester.ModeCode
 */
export type Composition_Attester_ModeCode = Message<"google.fhir.r4.core.Composition.Attester.ModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.CompositionAttestationModeCode.Value value = 1;
   */
  value: CompositionAttestationModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.Attester.ModeCode.
 * Use `create(Composition_Attester_ModeCodeSchema)` to create a new message.
 */
export const Composition_Attester_ModeCodeSchema: GenMessage<Composition_Attester_ModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 2, 0);

/**
 * Relationships to other compositions/documents
 *
 * @generated from message google.fhir.r4.core.Composition.RelatesTo
 */
export type Composition_RelatesTo = Message<"google.fhir.r4.core.Composition.RelatesTo"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.Composition.RelatesTo.CodeType code = 4;
   */
  code?: Composition_RelatesTo_CodeType;

  /**
   * @generated from field: google.fhir.r4.core.Composition.RelatesTo.TargetX target = 5;
   */
  target?: Composition_RelatesTo_TargetX;
};

/**
 * Describes the message google.fhir.r4.core.Composition.RelatesTo.
 * Use `create(Composition_RelatesToSchema)` to create a new message.
 */
export const Composition_RelatesToSchema: GenMessage<Composition_RelatesTo> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 3);

/**
 * replaces | transforms | signs | appends
 *
 * @generated from message google.fhir.r4.core.Composition.RelatesTo.CodeType
 */
export type Composition_RelatesTo_CodeType = Message<"google.fhir.r4.core.Composition.RelatesTo.CodeType"> & {
  /**
   * @generated from field: google.fhir.r4.core.DocumentRelationshipTypeCode.Value value = 1;
   */
  value: DocumentRelationshipTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.RelatesTo.CodeType.
 * Use `create(Composition_RelatesTo_CodeTypeSchema)` to create a new message.
 */
export const Composition_RelatesTo_CodeTypeSchema: GenMessage<Composition_RelatesTo_CodeType> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 3, 0);

/**
 * Target of the relationship
 *
 * @generated from message google.fhir.r4.core.Composition.RelatesTo.TargetX
 */
export type Composition_RelatesTo_TargetX = Message<"google.fhir.r4.core.Composition.RelatesTo.TargetX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Composition.RelatesTo.TargetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 1;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Composition.RelatesTo.TargetX.
 * Use `create(Composition_RelatesTo_TargetXSchema)` to create a new message.
 */
export const Composition_RelatesTo_TargetXSchema: GenMessage<Composition_RelatesTo_TargetX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 3, 1);

/**
 * The clinical service(s) being documented
 *
 * @generated from message google.fhir.r4.core.Composition.Event
 */
export type Composition_Event = Message<"google.fhir.r4.core.Composition.Event"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Code(s) that apply to the event being documented
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 4;
   */
  code: CodeableConcept[];

  /**
   * The period covered by the documentation
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * The event(s) being documented
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detail = 6;
   */
  detail: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.Event.
 * Use `create(Composition_EventSchema)` to create a new message.
 */
export const Composition_EventSchema: GenMessage<Composition_Event> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 4);

/**
 * Composition is broken into sections
 *
 * @generated from message google.fhir.r4.core.Composition.Section
 */
export type Composition_Section = Message<"google.fhir.r4.core.Composition.Section"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Label for section (e.g. for ToC)
   *
   * @generated from field: google.fhir.r4.core.String title = 4;
   */
  title?: String;

  /**
   * Classification of section (recommended)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what authored the section
   *
   * @generated from field: repeated google.fhir.r4.core.Reference author = 6;
   */
  author: Reference[];

  /**
   * Who/what the section is about, when it is not about the subject of
   * composition
   *
   * @generated from field: google.fhir.r4.core.Reference focus = 7;
   */
  focus?: Reference;

  /**
   * Text summary of the section, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 8;
   */
  text?: Narrative;

  /**
   * @generated from field: google.fhir.r4.core.Composition.Section.ModeCode mode = 9;
   */
  mode?: Composition_Section_ModeCode;

  /**
   * Order of section entries
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept ordered_by = 10;
   */
  orderedBy?: CodeableConcept;

  /**
   * A reference to data that supports this section
   *
   * @generated from field: repeated google.fhir.r4.core.Reference entry = 11;
   */
  entry: Reference[];

  /**
   * Why the section is empty
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept empty_reason = 12;
   */
  emptyReason?: CodeableConcept;

  /**
   * Nested Section
   *
   * @generated from field: repeated google.fhir.r4.core.Composition.Section section = 13;
   */
  section: Composition_Section[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.Section.
 * Use `create(Composition_SectionSchema)` to create a new message.
 */
export const Composition_SectionSchema: GenMessage<Composition_Section> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 5);

/**
 * working | snapshot | changes
 *
 * @generated from message google.fhir.r4.core.Composition.Section.ModeCode
 */
export type Composition_Section_ModeCode = Message<"google.fhir.r4.core.Composition.Section.ModeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.ListModeCode.Value value = 1;
   */
  value: ListModeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Composition.Section.ModeCode.
 * Use `create(Composition_Section_ModeCodeSchema)` to create a new message.
 */
export const Composition_Section_ModeCodeSchema: GenMessage<Composition_Section_ModeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_composition, 0, 5, 0);

