//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/claim_response.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { ClaimProcessingCode_Value, FinancialResourceStatusCode_Value, NoteTypeCode_Value, UseCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Address, Attachment, Boolean, Code, CodeableConcept, Date, DateTime, Decimal, Extension, Id, Identifier, Meta, Money, Narrative, Period, PositiveInt, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/claim_response.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_claim_response: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for ClaimResponse.
 * Response to a claim predetermination or preauthorization.
 * See http://hl7.org/fhir/StructureDefinition/ClaimResponse
 *
 * @generated from message google.fhir.r4.core.ClaimResponse
 */
export type ClaimResponse = Message<"google.fhir.r4.core.ClaimResponse"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Business Identifier for a claim response
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.StatusCode status = 11;
   */
  status?: ClaimResponse_StatusCode;

  /**
   * More granular claim type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * More granular claim type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept sub_type = 13;
   */
  subType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.UseCode use = 14;
   */
  use?: ClaimResponse_UseCode;

  /**
   * The recipient of the products and services
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 15;
   */
  patient?: Reference;

  /**
   * Response creation date
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 16;
   */
  created?: DateTime;

  /**
   * Party responsible for reimbursement
   *
   * @generated from field: google.fhir.r4.core.Reference insurer = 17;
   */
  insurer?: Reference;

  /**
   * Party responsible for the claim
   *
   * @generated from field: google.fhir.r4.core.Reference requestor = 18;
   */
  requestor?: Reference;

  /**
   * Id of resource triggering adjudication
   *
   * @generated from field: google.fhir.r4.core.Reference request = 19;
   */
  request?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.OutcomeCode outcome = 20;
   */
  outcome?: ClaimResponse_OutcomeCode;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.r4.core.String disposition = 21;
   */
  disposition?: String;

  /**
   * Preauthorization reference
   *
   * @generated from field: google.fhir.r4.core.String pre_auth_ref = 22;
   */
  preAuthRef?: String;

  /**
   * Preauthorization reference effective period
   *
   * @generated from field: google.fhir.r4.core.Period pre_auth_period = 23;
   */
  preAuthPeriod?: Period;

  /**
   * Party to be paid any benefits payable
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept payee_type = 24;
   */
  payeeType?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item item = 25;
   */
  item: ClaimResponse_Item[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.AddedItem add_item = 26;
   */
  addItem: ClaimResponse_AddedItem[];

  /**
   * Header-level adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 27;
   */
  adjudication: ClaimResponse_Item_Adjudication[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Total total = 28;
   */
  total: ClaimResponse_Total[];

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.Payment payment = 29;
   */
  payment?: ClaimResponse_Payment;

  /**
   * Funds reserved status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funds_reserve = 30;
   */
  fundsReserve?: CodeableConcept;

  /**
   * Printed form identifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept form_code = 31;
   */
  formCode?: CodeableConcept;

  /**
   * Printed reference or actual form
   *
   * @generated from field: google.fhir.r4.core.Attachment form = 32;
   */
  form?: Attachment;

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Note process_note = 33;
   */
  processNote: ClaimResponse_Note[];

  /**
   * Request for additional information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference communication_request = 34;
   */
  communicationRequest: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Insurance insurance = 35;
   */
  insurance: ClaimResponse_Insurance[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Error error = 36;
   */
  error: ClaimResponse_Error[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.
 * Use `create(ClaimResponseSchema)` to create a new message.
 */
export const ClaimResponseSchema: GenMessage<ClaimResponse> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0);

/**
 * active | cancelled | draft | entered-in-error
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.StatusCode
 */
export type ClaimResponse_StatusCode = Message<"google.fhir.r4.core.ClaimResponse.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.FinancialResourceStatusCode.Value value = 1;
   */
  value: FinancialResourceStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.StatusCode.
 * Use `create(ClaimResponse_StatusCodeSchema)` to create a new message.
 */
export const ClaimResponse_StatusCodeSchema: GenMessage<ClaimResponse_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 0);

/**
 * claim | preauthorization | predetermination
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.UseCode
 */
export type ClaimResponse_UseCode = Message<"google.fhir.r4.core.ClaimResponse.UseCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.UseCode.Value value = 1;
   */
  value: UseCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.UseCode.
 * Use `create(ClaimResponse_UseCodeSchema)` to create a new message.
 */
export const ClaimResponse_UseCodeSchema: GenMessage<ClaimResponse_UseCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 1);

/**
 * queued | complete | error | partial
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.OutcomeCode
 */
export type ClaimResponse_OutcomeCode = Message<"google.fhir.r4.core.ClaimResponse.OutcomeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.ClaimProcessingCode.Value value = 1;
   */
  value: ClaimProcessingCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.OutcomeCode.
 * Use `create(ClaimResponse_OutcomeCodeSchema)` to create a new message.
 */
export const ClaimResponse_OutcomeCodeSchema: GenMessage<ClaimResponse_OutcomeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 2);

/**
 * Adjudication for claim line items
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Item
 */
export type ClaimResponse_Item = Message<"google.fhir.r4.core.ClaimResponse.Item"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Claim item instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt item_sequence = 4;
   */
  itemSequence?: PositiveInt;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.ItemDetail detail = 7;
   */
  detail: ClaimResponse_Item_ItemDetail[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Item.
 * Use `create(ClaimResponse_ItemSchema)` to create a new message.
 */
export const ClaimResponse_ItemSchema: GenMessage<ClaimResponse_Item> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 3);

/**
 * Adjudication details
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Item.Adjudication
 */
export type ClaimResponse_Item_Adjudication = Message<"google.fhir.r4.core.ClaimResponse.Item.Adjudication"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of adjudication information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Explanation of adjudication outcome
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  /**
   * Monetary amount
   *
   * @generated from field: google.fhir.r4.core.Money amount = 6;
   */
  amount?: Money;

  /**
   * Non-monetary value
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 7;
   */
  value?: Decimal;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Item.Adjudication.
 * Use `create(ClaimResponse_Item_AdjudicationSchema)` to create a new message.
 */
export const ClaimResponse_Item_AdjudicationSchema: GenMessage<ClaimResponse_Item_Adjudication> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 3, 0);

/**
 * Adjudication for claim details
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Item.ItemDetail
 */
export type ClaimResponse_Item_ItemDetail = Message<"google.fhir.r4.core.ClaimResponse.Item.ItemDetail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Claim detail instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt detail_sequence = 4;
   */
  detailSequence?: PositiveInt;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[];

  /**
   * Detail level adjudication details
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.ItemDetail.SubDetail sub_detail = 7;
   */
  subDetail: ClaimResponse_Item_ItemDetail_SubDetail[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Item.ItemDetail.
 * Use `create(ClaimResponse_Item_ItemDetailSchema)` to create a new message.
 */
export const ClaimResponse_Item_ItemDetailSchema: GenMessage<ClaimResponse_Item_ItemDetail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 3, 1);

/**
 * Adjudication for claim sub-details
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Item.ItemDetail.SubDetail
 */
export type ClaimResponse_Item_ItemDetail_SubDetail = Message<"google.fhir.r4.core.ClaimResponse.Item.ItemDetail.SubDetail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Claim sub-detail instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sub_detail_sequence = 4;
   */
  subDetailSequence?: PositiveInt;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[];

  /**
   * Subdetail level adjudication details
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Item.ItemDetail.SubDetail.
 * Use `create(ClaimResponse_Item_ItemDetail_SubDetailSchema)` to create a new message.
 */
export const ClaimResponse_Item_ItemDetail_SubDetailSchema: GenMessage<ClaimResponse_Item_ItemDetail_SubDetail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 3, 1, 0);

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.AddedItem
 */
export type ClaimResponse_AddedItem = Message<"google.fhir.r4.core.ClaimResponse.AddedItem"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Item sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt item_sequence = 4;
   */
  itemSequence: PositiveInt[];

  /**
   * Detail sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt detail_sequence = 5;
   */
  detailSequence: PositiveInt[];

  /**
   * Subdetail sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt subdetail_sequence = 6;
   */
  subdetailSequence: PositiveInt[];

  /**
   * Authorized providers
   *
   * @generated from field: repeated google.fhir.r4.core.Reference provider = 7;
   */
  provider: Reference[];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 8;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 9;
   */
  modifier: CodeableConcept[];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 10;
   */
  programCode: CodeableConcept[];

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.AddedItem.ServicedX serviced = 11;
   */
  serviced?: ClaimResponse_AddedItem_ServicedX;

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.AddedItem.LocationX location = 12;
   */
  location?: ClaimResponse_AddedItem_LocationX;

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 13;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 14;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 15;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 16;
   */
  net?: Money;

  /**
   * Anatomical location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 17;
   */
  bodySite?: CodeableConcept;

  /**
   * Anatomical sub-location
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept sub_site = 18;
   */
  subSite: CodeableConcept[];

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 19;
   */
  noteNumber: PositiveInt[];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 20;
   */
  adjudication: ClaimResponse_Item_Adjudication[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail detail = 21;
   */
  detail: ClaimResponse_AddedItem_AddedItemDetail[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.AddedItem.
 * Use `create(ClaimResponse_AddedItemSchema)` to create a new message.
 */
export const ClaimResponse_AddedItemSchema: GenMessage<ClaimResponse_AddedItem> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 4);

/**
 * Date or dates of service or product delivery
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.AddedItem.ServicedX
 */
export type ClaimResponse_AddedItem_ServicedX = Message<"google.fhir.r4.core.ClaimResponse.AddedItem.ServicedX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.ClaimResponse.AddedItem.ServicedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.AddedItem.ServicedX.
 * Use `create(ClaimResponse_AddedItem_ServicedXSchema)` to create a new message.
 */
export const ClaimResponse_AddedItem_ServicedXSchema: GenMessage<ClaimResponse_AddedItem_ServicedX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 4, 0);

/**
 * Place of service or where product was supplied
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.AddedItem.LocationX
 */
export type ClaimResponse_AddedItem_LocationX = Message<"google.fhir.r4.core.ClaimResponse.AddedItem.LocationX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.ClaimResponse.AddedItem.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.AddedItem.LocationX.
 * Use `create(ClaimResponse_AddedItem_LocationXSchema)` to create a new message.
 */
export const ClaimResponse_AddedItem_LocationXSchema: GenMessage<ClaimResponse_AddedItem_LocationX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 4, 1);

/**
 * Insurer added line details
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail
 */
export type ClaimResponse_AddedItem_AddedItemDetail = Message<"google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 4;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 5;
   */
  modifier: CodeableConcept[];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 7;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 8;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 9;
   */
  net?: Money;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[];

  /**
   * Added items detail adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 11;
   */
  adjudication: ClaimResponse_Item_Adjudication[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail.AddedItemSubDetail sub_detail = 12;
   */
  subDetail: ClaimResponse_AddedItem_AddedItemDetail_AddedItemSubDetail[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail.
 * Use `create(ClaimResponse_AddedItem_AddedItemDetailSchema)` to create a new message.
 */
export const ClaimResponse_AddedItem_AddedItemDetailSchema: GenMessage<ClaimResponse_AddedItem_AddedItemDetail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 4, 2);

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail.AddedItemSubDetail
 */
export type ClaimResponse_AddedItem_AddedItemDetail_AddedItemSubDetail = Message<"google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail.AddedItemSubDetail"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 4;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 5;
   */
  modifier: CodeableConcept[];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 7;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 8;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 9;
   */
  net?: Money;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[];

  /**
   * Added items detail adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ClaimResponse.Item.Adjudication adjudication = 11;
   */
  adjudication: ClaimResponse_Item_Adjudication[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.AddedItem.AddedItemDetail.AddedItemSubDetail.
 * Use `create(ClaimResponse_AddedItem_AddedItemDetail_AddedItemSubDetailSchema)` to create a new message.
 */
export const ClaimResponse_AddedItem_AddedItemDetail_AddedItemSubDetailSchema: GenMessage<ClaimResponse_AddedItem_AddedItemDetail_AddedItemSubDetail> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 4, 2, 0);

/**
 * Adjudication totals
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Total
 */
export type ClaimResponse_Total = Message<"google.fhir.r4.core.ClaimResponse.Total"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of adjudication information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Financial total for the category
   *
   * @generated from field: google.fhir.r4.core.Money amount = 5;
   */
  amount?: Money;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Total.
 * Use `create(ClaimResponse_TotalSchema)` to create a new message.
 */
export const ClaimResponse_TotalSchema: GenMessage<ClaimResponse_Total> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 5);

/**
 * Payment Details
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Payment
 */
export type ClaimResponse_Payment = Message<"google.fhir.r4.core.ClaimResponse.Payment"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Partial or complete payment
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Payment adjustment for non-claim issues
   *
   * @generated from field: google.fhir.r4.core.Money adjustment = 5;
   */
  adjustment?: Money;

  /**
   * Explanation for the adjustment
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept adjustment_reason = 6;
   */
  adjustmentReason?: CodeableConcept;

  /**
   * Expected date of payment
   *
   * @generated from field: google.fhir.r4.core.Date date = 7;
   */
  date?: Date;

  /**
   * Payable amount after adjustment
   *
   * @generated from field: google.fhir.r4.core.Money amount = 8;
   */
  amount?: Money;

  /**
   * Business identifier for the payment
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 9;
   */
  identifier?: Identifier;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Payment.
 * Use `create(ClaimResponse_PaymentSchema)` to create a new message.
 */
export const ClaimResponse_PaymentSchema: GenMessage<ClaimResponse_Payment> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 6);

/**
 * Note concerning adjudication
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Note
 */
export type ClaimResponse_Note = Message<"google.fhir.r4.core.ClaimResponse.Note"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Note instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt number = 4;
   */
  number?: PositiveInt;

  /**
   * @generated from field: google.fhir.r4.core.ClaimResponse.Note.TypeCode type = 5;
   */
  type?: ClaimResponse_Note_TypeCode;

  /**
   * Note explanatory text
   *
   * @generated from field: google.fhir.r4.core.String text = 6;
   */
  text?: String;

  /**
   * Language of the text
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept language = 7;
   */
  language?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Note.
 * Use `create(ClaimResponse_NoteSchema)` to create a new message.
 */
export const ClaimResponse_NoteSchema: GenMessage<ClaimResponse_Note> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 7);

/**
 * display | print | printoper
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Note.TypeCode
 */
export type ClaimResponse_Note_TypeCode = Message<"google.fhir.r4.core.ClaimResponse.Note.TypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.NoteTypeCode.Value value = 1;
   */
  value: NoteTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Note.TypeCode.
 * Use `create(ClaimResponse_Note_TypeCodeSchema)` to create a new message.
 */
export const ClaimResponse_Note_TypeCodeSchema: GenMessage<ClaimResponse_Note_TypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 7, 0);

/**
 * Patient insurance information
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Insurance
 */
export type ClaimResponse_Insurance = Message<"google.fhir.r4.core.ClaimResponse.Insurance"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Insurance instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Coverage to be used for adjudication
   *
   * @generated from field: google.fhir.r4.core.Boolean focal = 5;
   */
  focal?: Boolean;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.r4.core.Reference coverage = 6;
   */
  coverage?: Reference;

  /**
   * Additional provider contract number
   *
   * @generated from field: google.fhir.r4.core.String business_arrangement = 7;
   */
  businessArrangement?: String;

  /**
   * Adjudication results
   *
   * @generated from field: google.fhir.r4.core.Reference claim_response = 8;
   */
  claimResponse?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Insurance.
 * Use `create(ClaimResponse_InsuranceSchema)` to create a new message.
 */
export const ClaimResponse_InsuranceSchema: GenMessage<ClaimResponse_Insurance> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 8);

/**
 * Processing errors
 *
 * @generated from message google.fhir.r4.core.ClaimResponse.Error
 */
export type ClaimResponse_Error = Message<"google.fhir.r4.core.ClaimResponse.Error"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Item sequence number
   *
   * @generated from field: google.fhir.r4.core.PositiveInt item_sequence = 4;
   */
  itemSequence?: PositiveInt;

  /**
   * Detail sequence number
   *
   * @generated from field: google.fhir.r4.core.PositiveInt detail_sequence = 5;
   */
  detailSequence?: PositiveInt;

  /**
   * Subdetail sequence number
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sub_detail_sequence = 6;
   */
  subDetailSequence?: PositiveInt;

  /**
   * Error code detailing processing issues
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 7;
   */
  code?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.ClaimResponse.Error.
 * Use `create(ClaimResponse_ErrorSchema)` to create a new message.
 */
export const ClaimResponse_ErrorSchema: GenMessage<ClaimResponse_Error> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_claim_response, 0, 9);

