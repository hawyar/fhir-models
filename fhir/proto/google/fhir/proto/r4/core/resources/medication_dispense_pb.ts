//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/medication_dispense.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { MedicationDispenseStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Annotation, Boolean, Code, CodeableConcept, DateTime, Dosage, Extension, Id, Identifier, Meta, Narrative, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/medication_dispense.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_medication_dispense: GenFile = /*@__PURE__*/
  fileDesc("CkNwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9tZWRpY2F0aW9uX2Rpc3BlbnNlLnByb3RvEhNnb29nbGUuZmhpci5yNC5jb3JlIsYcChJNZWRpY2F0aW9uRGlzcGVuc2USIwoCaWQYASABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkEicKBG1ldGEYAiABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLk1ldGESMAoOaW1wbGljaXRfcnVsZXMYAyABKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRIrCghsYW5ndWFnZRgEIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZRIsCgR0ZXh0GAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5OYXJyYXRpdmUSJwoJY29udGFpbmVkGAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIxCglleHRlbnNpb24YCCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YCSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIzCgppZGVudGlmaWVyGAogAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVyEkAKB3BhcnRfb2YYCyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJUHJvY2VkdXJlEkoKBnN0YXR1cxgMIAEoCzIyLmdvb2dsZS5maGlyLnI0LmNvcmUuTWVkaWNhdGlvbkRpc3BlbnNlLlN0YXR1c0NvZGVCBvDQh+sEARJMCg1zdGF0dXNfcmVhc29uGA0gASgLMjUuZ29vZ2xlLmZoaXIucjQuY29yZS5NZWRpY2F0aW9uRGlzcGVuc2UuU3RhdHVzUmVhc29uWBI2CghjYXRlZ29yeRgOIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ek8KCm1lZGljYXRpb24YDyABKAsyMy5nb29nbGUuZmhpci5yNC5jb3JlLk1lZGljYXRpb25EaXNwZW5zZS5NZWRpY2F0aW9uWEIG8NCH6wQBEkkKB3N1YmplY3QYECABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIY8v/8wgYHUGF0aWVudPL//MIGBUdyb3VwElMKB2NvbnRleHQYESABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIi8v/8wgYJRW5jb3VudGVy8v/8wgYNRXBpc29kZU9mQ2FyZRJOChZzdXBwb3J0aW5nX2luZm9ybWF0aW9uGBIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCFJlc291cmNlEkQKCXBlcmZvcm1lchgTIAMoCzIxLmdvb2dsZS5maGlyLnI0LmNvcmUuTWVkaWNhdGlvbkRpc3BlbnNlLlBlcmZvcm1lchJACghsb2NhdGlvbhgUIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghMb2NhdGlvbhJZChhhdXRob3JpemluZ19wcmVzY3JpcHRpb24YFSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIX8v/8wgYRTWVkaWNhdGlvblJlcXVlc3QSMgoEdHlwZRgWIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjUKCHF1YW50aXR5GBcgASgLMiMuZ29vZ2xlLmZoaXIucjQuY29yZS5TaW1wbGVRdWFudGl0eRI4CgtkYXlzX3N1cHBseRgYIAEoCzIjLmdvb2dsZS5maGlyLnI0LmNvcmUuU2ltcGxlUXVhbnRpdHkSNAoNd2hlbl9wcmVwYXJlZBgZIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZVRpbWUSNwoQd2hlbl9oYW5kZWRfb3ZlchgaIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZVRpbWUSQwoLZGVzdGluYXRpb24YGyABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIO8v/8wgYITG9jYXRpb24SUQoIcmVjZWl2ZXIYHCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIf8v/8wgYHUGF0aWVudPL//MIGDFByYWN0aXRpb25lchItCgRub3RlGB0gAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5Bbm5vdGF0aW9uEjcKEmRvc2FnZV9pbnN0cnVjdGlvbhgeIAMoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuRG9zYWdlEkoKDHN1YnN0aXR1dGlvbhgfIAEoCzI0Lmdvb2dsZS5maGlyLnI0LmNvcmUuTWVkaWNhdGlvbkRpc3BlbnNlLlN1YnN0aXR1dGlvbhJLCg5kZXRlY3RlZF9pc3N1ZRggIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQhPy//zCBg1EZXRlY3RlZElzc3VlEkcKDWV2ZW50X2hpc3RvcnkYISADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIQ8v/8wgYKUHJvdmVuYW5jZRqmAgoKU3RhdHVzQ29kZRJGCgV2YWx1ZRgBIAEoDjI3Lmdvb2dsZS5maGlyLnI0LmNvcmUuTWVkaWNhdGlvbkRpc3BlbnNlU3RhdHVzQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOnSK+YOyBTZodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21lZGljYXRpb25kaXNwZW5zZS1zdGF0dXPAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqtAQoNU3RhdHVzUmVhc29uWBJAChBjb2RlYWJsZV9jb25jZXB0GAEgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHRIABJICglyZWZlcmVuY2UYAiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIT8v/8wgYNRGV0ZWN0ZWRJc3N1ZUgAOgagg4PoBgFCCAoGY2hvaWNlGqgBCgtNZWRpY2F0aW9uWBJAChBjb2RlYWJsZV9jb25jZXB0GAEgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHRIABJFCglyZWZlcmVuY2UYAiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIQ8v/8wgYKTWVkaWNhdGlvbkgAOgagg4PoBgFCCAoGY2hvaWNlGvkCCglQZXJmb3JtZXISJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI2CghmdW5jdGlvbhgEIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EpsBCgVhY3RvchgFIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQmzw0IfrBAHy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYMT3JnYW5pemF0aW9u8v/8wgYHUGF0aWVudPL//MIGBkRldmljZfL//MIGDVJlbGF0ZWRQZXJzb24atAMKDFN1YnN0aXR1dGlvbhInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEj0KD3dhc19zdWJzdGl0dXRlZBgEIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbkIG8NCH6wQBEjIKBHR5cGUYBSABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI0CgZyZWFzb24YBiADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBJjChFyZXNwb25zaWJsZV9wYXJ0eRgHIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQijy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xlOpwBwJ/jtgUDsv7klwY6aHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL01lZGljYXRpb25EaXNwZW5zZZqGk6AIUHdoZW5IYW5kZWRPdmVyLmVtcHR5KCkgb3Igd2hlblByZXBhcmVkLmVtcHR5KCkgb3Igd2hlbkhhbmRlZE92ZXIgPj0gd2hlblByZXBhcmVkSgQIBxAIQoMBChdjb20uZ29vZ2xlLmZoaXIucjQuY29yZVABWmBnaXRodWIuY29tL2dvb2dsZS9maGlyL2dvL3Byb3RvL2dvb2dsZS9maGlyL3Byb3RvL3I0L2NvcmUvcmVzb3VyY2VzL21lZGljYXRpb25fZGlzcGVuc2VfZ29fcHJvdG+YxrC1BwRiBnByb3RvMw", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for MedicationDispense.
 * Dispensing a medication to a named patient.
 * See http://hl7.org/fhir/StructureDefinition/MedicationDispense
 *
 * @generated from message google.fhir.r4.core.MedicationDispense
 */
export type MedicationDispense = Message<"google.fhir.r4.core.MedicationDispense"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Event that dispense is part of
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 11;
   */
  partOf: Reference[];

  /**
   * @generated from field: google.fhir.r4.core.MedicationDispense.StatusCode status = 12;
   */
  status?: MedicationDispense_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.MedicationDispense.StatusReasonX status_reason = 13;
   */
  statusReason?: MedicationDispense_StatusReasonX;

  /**
   * Type of medication dispense
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 14;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.MedicationDispense.MedicationX medication = 15;
   */
  medication?: MedicationDispense_MedicationX;

  /**
   * Who the dispense is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Encounter / Episode associated with event
   *
   * @generated from field: google.fhir.r4.core.Reference context = 17;
   */
  context?: Reference;

  /**
   * Information that supports the dispensing of the medication
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_information = 18;
   */
  supportingInformation: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationDispense.Performer performer = 19;
   */
  performer: MedicationDispense_Performer[];

  /**
   * Where the dispense occurred
   *
   * @generated from field: google.fhir.r4.core.Reference location = 20;
   */
  location?: Reference;

  /**
   * Medication order that authorizes the dispense
   *
   * @generated from field: repeated google.fhir.r4.core.Reference authorizing_prescription = 21;
   */
  authorizingPrescription: Reference[];

  /**
   * Trial fill, partial fill, emergency fill, etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 22;
   */
  type?: CodeableConcept;

  /**
   * Amount dispensed
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 23;
   */
  quantity?: SimpleQuantity;

  /**
   * Amount of medication expressed as a timing amount
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity days_supply = 24;
   */
  daysSupply?: SimpleQuantity;

  /**
   * When product was packaged and reviewed
   *
   * @generated from field: google.fhir.r4.core.DateTime when_prepared = 25;
   */
  whenPrepared?: DateTime;

  /**
   * When product was given out
   *
   * @generated from field: google.fhir.r4.core.DateTime when_handed_over = 26;
   */
  whenHandedOver?: DateTime;

  /**
   * Where the medication was sent
   *
   * @generated from field: google.fhir.r4.core.Reference destination = 27;
   */
  destination?: Reference;

  /**
   * Who collected the medication
   *
   * @generated from field: repeated google.fhir.r4.core.Reference receiver = 28;
   */
  receiver: Reference[];

  /**
   * Information about the dispense
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 29;
   */
  note: Annotation[];

  /**
   * How the medication is to be used by the patient or administered by the
   * caregiver
   *
   * @generated from field: repeated google.fhir.r4.core.Dosage dosage_instruction = 30;
   */
  dosageInstruction: Dosage[];

  /**
   * @generated from field: google.fhir.r4.core.MedicationDispense.Substitution substitution = 31;
   */
  substitution?: MedicationDispense_Substitution;

  /**
   * Clinical issue with action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detected_issue = 32;
   */
  detectedIssue: Reference[];

  /**
   * A list of relevant lifecycle events
   *
   * @generated from field: repeated google.fhir.r4.core.Reference event_history = 33;
   */
  eventHistory: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.
 * Use `create(MedicationDispenseSchema)` to create a new message.
 */
export const MedicationDispenseSchema: GenMessage<MedicationDispense> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0);

/**
 * preparation | in-progress | cancelled | on-hold | completed |
 * entered-in-error | stopped | declined | unknown
 *
 * @generated from message google.fhir.r4.core.MedicationDispense.StatusCode
 */
export type MedicationDispense_StatusCode = Message<"google.fhir.r4.core.MedicationDispense.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.MedicationDispenseStatusCode.Value value = 1;
   */
  value: MedicationDispenseStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.StatusCode.
 * Use `create(MedicationDispense_StatusCodeSchema)` to create a new message.
 */
export const MedicationDispense_StatusCodeSchema: GenMessage<MedicationDispense_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0, 0);

/**
 * Why a dispense was not performed
 *
 * @generated from message google.fhir.r4.core.MedicationDispense.StatusReasonX
 */
export type MedicationDispense_StatusReasonX = Message<"google.fhir.r4.core.MedicationDispense.StatusReasonX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationDispense.StatusReasonX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.StatusReasonX.
 * Use `create(MedicationDispense_StatusReasonXSchema)` to create a new message.
 */
export const MedicationDispense_StatusReasonXSchema: GenMessage<MedicationDispense_StatusReasonX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0, 1);

/**
 * What medication was supplied
 *
 * @generated from message google.fhir.r4.core.MedicationDispense.MedicationX
 */
export type MedicationDispense_MedicationX = Message<"google.fhir.r4.core.MedicationDispense.MedicationX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationDispense.MedicationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.MedicationX.
 * Use `create(MedicationDispense_MedicationXSchema)` to create a new message.
 */
export const MedicationDispense_MedicationXSchema: GenMessage<MedicationDispense_MedicationX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0, 2);

/**
 * Who performed event
 *
 * @generated from message google.fhir.r4.core.MedicationDispense.Performer
 */
export type MedicationDispense_Performer = Message<"google.fhir.r4.core.MedicationDispense.Performer"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Who performed the dispense and what they did
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.Performer.
 * Use `create(MedicationDispense_PerformerSchema)` to create a new message.
 */
export const MedicationDispense_PerformerSchema: GenMessage<MedicationDispense_Performer> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0, 3);

/**
 * Whether a substitution was performed on the dispense
 *
 * @generated from message google.fhir.r4.core.MedicationDispense.Substitution
 */
export type MedicationDispense_Substitution = Message<"google.fhir.r4.core.MedicationDispense.Substitution"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Whether a substitution was or was not performed on the dispense
   *
   * @generated from field: google.fhir.r4.core.Boolean was_substituted = 4;
   */
  wasSubstituted?: Boolean;

  /**
   * Code signifying whether a different drug was dispensed from what was
   * prescribed
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Why was substitution made
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason = 6;
   */
  reason: CodeableConcept[];

  /**
   * Who is responsible for the substitution
   *
   * @generated from field: repeated google.fhir.r4.core.Reference responsible_party = 7;
   */
  responsibleParty: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.MedicationDispense.Substitution.
 * Use `create(MedicationDispense_SubstitutionSchema)` to create a new message.
 */
export const MedicationDispense_SubstitutionSchema: GenMessage<MedicationDispense_Substitution> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_medication_dispense, 0, 4);

