//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/risk_evidence_synthesis.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { PublicationStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Annotation, Code, CodeableConcept, ContactDetail, Date, DateTime, Decimal, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, Period, Reference, RelatedArtifact, String, Uri, UsageContext } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/risk_evidence_synthesis.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis: GenFile = /*@__PURE__*/
  fileDesc("Ckdwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9yaXNrX2V2aWRlbmNlX3N5bnRoZXNpcy5wcm90bxITZ29vZ2xlLmZoaXIucjQuY29yZSLpIwoVUmlza0V2aWRlbmNlU3ludGhlc2lzEiMKAmlkGAEgASgLMhcuZ29vZ2xlLmZoaXIucjQuY29yZS5JZBInCgRtZXRhGAIgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5NZXRhEjAKDmltcGxpY2l0X3J1bGVzGAMgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSKwoIbGFuZ3VhZ2UYBCABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGUSLAoEdGV4dBgFIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuTmFycmF0aXZlEicKCWNvbnRhaW5lZBgGIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSMQoJZXh0ZW5zaW9uGAggAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAkgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SJQoDdXJsGAogASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSMwoKaWRlbnRpZmllchgLIAMoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuSWRlbnRpZmllchIsCgd2ZXJzaW9uGAwgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSKQoEbmFtZRgNIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEioKBXRpdGxlGA4gASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSTQoGc3RhdHVzGA8gASgLMjUuZ29vZ2xlLmZoaXIucjQuY29yZS5SaXNrRXZpZGVuY2VTeW50aGVzaXMuU3RhdHVzQ29kZUIG8NCH6wQBEisKBGRhdGUYECABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lEi4KCXB1Ymxpc2hlchgRIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjMKB2NvbnRhY3QYEiADKAsyIi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbnRhY3REZXRhaWwSMgoLZGVzY3JpcHRpb24YEyABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLk1hcmtkb3duEi0KBG5vdGUYFCADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkFubm90YXRpb24SNgoLdXNlX2NvbnRleHQYFSADKAsyIS5nb29nbGUuZmhpci5yNC5jb3JlLlVzYWdlQ29udGV4dBI6CgxqdXJpc2RpY3Rpb24YFiADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIwCgljb3B5cmlnaHQYFyABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLk1hcmtkb3duEjAKDWFwcHJvdmFsX2RhdGUYGCABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGUSMwoQbGFzdF9yZXZpZXdfZGF0ZRgZIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZRI1ChBlZmZlY3RpdmVfcGVyaW9kGBogASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2QSMwoFdG9waWMYGyADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIyCgZhdXRob3IYHCADKAsyIi5nb29nbGUuZmhpci5yNC5jb3JlLkNvbnRhY3REZXRhaWwSMgoGZWRpdG9yGB0gAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEjQKCHJldmlld2VyGB4gAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEjQKCGVuZG9yc2VyGB8gAygLMiIuZ29vZ2xlLmZoaXIucjQuY29yZS5Db250YWN0RGV0YWlsEj4KEHJlbGF0ZWRfYXJ0aWZhY3QYICADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLlJlbGF0ZWRBcnRpZmFjdBI8Cg5zeW50aGVzaXNfdHlwZRghIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjgKCnN0dWR5X3R5cGUYIiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBJQCgpwb3B1bGF0aW9uGCMgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCHPDQh+sEAfL//MIGEEV2aWRlbmNlVmFyaWFibGUSSAoIZXhwb3N1cmUYJCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIW8v/8wgYQRXZpZGVuY2VWYXJpYWJsZRJNCgdvdXRjb21lGCUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCHPDQh+sEAfL//MIGEEV2aWRlbmNlVmFyaWFibGUSSgoLc2FtcGxlX3NpemUYJiABKAsyNS5nb29nbGUuZmhpci5yNC5jb3JlLlJpc2tFdmlkZW5jZVN5bnRoZXNpcy5TYW1wbGVTaXplEk4KDXJpc2tfZXN0aW1hdGUYJyABKAsyNy5nb29nbGUuZmhpci5yNC5jb3JlLlJpc2tFdmlkZW5jZVN5bnRoZXNpcy5SaXNrRXN0aW1hdGUSRwoJY2VydGFpbnR5GCggAygLMjQuZ29vZ2xlLmZoaXIucjQuY29yZS5SaXNrRXZpZGVuY2VTeW50aGVzaXMuQ2VydGFpbnR5GpgCCgpTdGF0dXNDb2RlEj8KBXZhbHVlGAEgASgOMjAuZ29vZ2xlLmZoaXIucjQuY29yZS5QdWJsaWNhdGlvblN0YXR1c0NvZGUuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjptivmDsgUvaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9wdWJsaWNhdGlvbi1zdGF0dXPAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRrNAgoKU2FtcGxlU2l6ZRInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjAKC2Rlc2NyaXB0aW9uGAQgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSNwoRbnVtYmVyX29mX3N0dWRpZXMYBSABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkludGVnZXISPAoWbnVtYmVyX29mX3BhcnRpY2lwYW50cxgGIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuSW50ZWdlchq0BwoMUmlza0VzdGltYXRlEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMAoLZGVzY3JpcHRpb24YBCABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIyCgR0eXBlGAUgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSKwoFdmFsdWUYBiABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkRlY2ltYWwSPQoPdW5pdF9vZl9tZWFzdXJlGAcgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSNwoRZGVub21pbmF0b3JfY291bnQYCCABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkludGVnZXISNQoPbnVtZXJhdG9yX2NvdW50GAkgASgLMhwuZ29vZ2xlLmZoaXIucjQuY29yZS5JbnRlZ2VyEmUKEnByZWNpc2lvbl9lc3RpbWF0ZRgKIAMoCzJJLmdvb2dsZS5maGlyLnI0LmNvcmUuUmlza0V2aWRlbmNlU3ludGhlc2lzLlJpc2tFc3RpbWF0ZS5QcmVjaXNpb25Fc3RpbWF0ZRriAgoRUHJlY2lzaW9uRXN0aW1hdGUSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIyCgR0eXBlGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSKwoFbGV2ZWwYBSABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkRlY2ltYWwSKgoEZnJvbRgGIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuRGVjaW1hbBIoCgJ0bxgHIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuRGVjaW1hbBq/BQoJQ2VydGFpbnR5EicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SNAoGcmF0aW5nGAQgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSLQoEbm90ZRgFIAMoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuQW5ub3RhdGlvbhJqChZjZXJ0YWludHlfc3ViY29tcG9uZW50GAYgAygLMkouZ29vZ2xlLmZoaXIucjQuY29yZS5SaXNrRXZpZGVuY2VTeW50aGVzaXMuQ2VydGFpbnR5LkNlcnRhaW50eVN1YmNvbXBvbmVudBrIAgoVQ2VydGFpbnR5U3ViY29tcG9uZW50EicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMgoEdHlwZRgEIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjQKBnJhdGluZxgFIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ei0KBG5vdGUYBiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkFubm90YXRpb246ecCf47YFA7L+5JcGPWh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9SaXNrRXZpZGVuY2VTeW50aGVzaXOar66kCypuYW1lLm1hdGNoZXMoJ1tBLVpdKFtBLVphLXowLTlfXSl7MCwyNTR9JylKBAgHEAhChwEKF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaZGdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvcmlza19ldmlkZW5jZV9zeW50aGVzaXNfZ29fcHJvdG+YxrC1BwRiBnByb3RvMw", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for RiskEvidenceSynthesis.
 * A quantified estimate of risk based on a body of evidence.
 * See http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis
 */
export type RiskEvidenceSynthesis = Message<"google.fhir.r4.core.RiskEvidenceSynthesis"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Canonical identifier for this risk evidence synthesis, represented as a URI
   * (globally unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the risk evidence synthesis
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[];

  /**
   * Business version of the risk evidence synthesis
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this risk evidence synthesis (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this risk evidence synthesis (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.RiskEvidenceSynthesis.StatusCode status = 15;
   */
  status?: RiskEvidenceSynthesis_StatusCode;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 18;
   */
  contact: ContactDetail[];

  /**
   * Natural language description of the risk evidence synthesis
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Used for footnotes or explanatory notes
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 20;
   */
  note: Annotation[];

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[];

  /**
   * Intended jurisdiction for risk evidence synthesis (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * When the risk evidence synthesis was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 24;
   */
  approvalDate?: Date;

  /**
   * When the risk evidence synthesis was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 25;
   */
  lastReviewDate?: Date;

  /**
   * When the risk evidence synthesis is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 26;
   */
  effectivePeriod?: Period;

  /**
   * The category of the EffectEvidenceSynthesis, such as Education, Treatment,
   * Assessment, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept topic = 27;
   */
  topic: CodeableConcept[];

  /**
   * Who authored the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail author = 28;
   */
  author: ContactDetail[];

  /**
   * Who edited the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail editor = 29;
   */
  editor: ContactDetail[];

  /**
   * Who reviewed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail reviewer = 30;
   */
  reviewer: ContactDetail[];

  /**
   * Who endorsed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail endorser = 31;
   */
  endorser: ContactDetail[];

  /**
   * Additional documentation, citations, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact related_artifact = 32;
   */
  relatedArtifact: RelatedArtifact[];

  /**
   * Type of synthesis
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept synthesis_type = 33;
   */
  synthesisType?: CodeableConcept;

  /**
   * Type of study
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept study_type = 34;
   */
  studyType?: CodeableConcept;

  /**
   * What population?
   *
   * @generated from field: google.fhir.r4.core.Reference population = 35;
   */
  population?: Reference;

  /**
   * What exposure?
   *
   * @generated from field: google.fhir.r4.core.Reference exposure = 36;
   */
  exposure?: Reference;

  /**
   * What outcome?
   *
   * @generated from field: google.fhir.r4.core.Reference outcome = 37;
   */
  outcome?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.RiskEvidenceSynthesis.SampleSize sample_size = 38;
   */
  sampleSize?: RiskEvidenceSynthesis_SampleSize;

  /**
   * @generated from field: google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate risk_estimate = 39;
   */
  riskEstimate?: RiskEvidenceSynthesis_RiskEstimate;

  /**
   * @generated from field: repeated google.fhir.r4.core.RiskEvidenceSynthesis.Certainty certainty = 40;
   */
  certainty: RiskEvidenceSynthesis_Certainty[];
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.
 * Use `create(RiskEvidenceSynthesisSchema)` to create a new message.
 */
export const RiskEvidenceSynthesisSchema: GenMessage<RiskEvidenceSynthesis> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0);

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.StatusCode
 */
export type RiskEvidenceSynthesis_StatusCode = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value: PublicationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.StatusCode.
 * Use `create(RiskEvidenceSynthesis_StatusCodeSchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_StatusCodeSchema: GenMessage<RiskEvidenceSynthesis_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 0);

/**
 * What sample size was involved?
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.SampleSize
 */
export type RiskEvidenceSynthesis_SampleSize = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.SampleSize"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Description of sample size
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * How many studies?
   *
   * @generated from field: google.fhir.r4.core.Integer number_of_studies = 5;
   */
  numberOfStudies?: Integer;

  /**
   * How many participants?
   *
   * @generated from field: google.fhir.r4.core.Integer number_of_participants = 6;
   */
  numberOfParticipants?: Integer;
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.SampleSize.
 * Use `create(RiskEvidenceSynthesis_SampleSizeSchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_SampleSizeSchema: GenMessage<RiskEvidenceSynthesis_SampleSize> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 1);

/**
 * What was the estimated risk
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate
 */
export type RiskEvidenceSynthesis_RiskEstimate = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Description of risk estimate
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * Type of risk estimate
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Point estimate
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 6;
   */
  value?: Decimal;

  /**
   * What unit is the outcome described in?
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept unit_of_measure = 7;
   */
  unitOfMeasure?: CodeableConcept;

  /**
   * Sample size for group measured
   *
   * @generated from field: google.fhir.r4.core.Integer denominator_count = 8;
   */
  denominatorCount?: Integer;

  /**
   * Number with the outcome
   *
   * @generated from field: google.fhir.r4.core.Integer numerator_count = 9;
   */
  numeratorCount?: Integer;

  /**
   * @generated from field: repeated google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate precision_estimate = 10;
   */
  precisionEstimate: RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimate[];
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate.
 * Use `create(RiskEvidenceSynthesis_RiskEstimateSchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_RiskEstimateSchema: GenMessage<RiskEvidenceSynthesis_RiskEstimate> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 2);

/**
 * How precise the estimate is
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate
 */
export type RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimate = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of precision estimate
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Level of confidence interval
   *
   * @generated from field: google.fhir.r4.core.Decimal level = 5;
   */
  level?: Decimal;

  /**
   * Lower bound
   *
   * @generated from field: google.fhir.r4.core.Decimal from = 6;
   */
  from?: Decimal;

  /**
   * Upper bound
   *
   * @generated from field: google.fhir.r4.core.Decimal to = 7;
   */
  to?: Decimal;
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.RiskEstimate.PrecisionEstimate.
 * Use `create(RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimateSchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimateSchema: GenMessage<RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimate> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 2, 0);

/**
 * How certain is the risk
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.Certainty
 */
export type RiskEvidenceSynthesis_Certainty = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.Certainty"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Certainty rating
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept rating = 4;
   */
  rating: CodeableConcept[];

  /**
   * Used for footnotes or explanatory notes
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 5;
   */
  note: Annotation[];

  /**
   * @generated from field: repeated google.fhir.r4.core.RiskEvidenceSynthesis.Certainty.CertaintySubcomponent certainty_subcomponent = 6;
   */
  certaintySubcomponent: RiskEvidenceSynthesis_Certainty_CertaintySubcomponent[];
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.Certainty.
 * Use `create(RiskEvidenceSynthesis_CertaintySchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_CertaintySchema: GenMessage<RiskEvidenceSynthesis_Certainty> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 3);

/**
 * A component that contributes to the overall certainty
 *
 * @generated from message google.fhir.r4.core.RiskEvidenceSynthesis.Certainty.CertaintySubcomponent
 */
export type RiskEvidenceSynthesis_Certainty_CertaintySubcomponent = Message<"google.fhir.r4.core.RiskEvidenceSynthesis.Certainty.CertaintySubcomponent"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of subcomponent of certainty rating
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Subcomponent certainty rating
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept rating = 5;
   */
  rating: CodeableConcept[];

  /**
   * Used for footnotes or explanatory notes
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 6;
   */
  note: Annotation[];
};

/**
 * Describes the message google.fhir.r4.core.RiskEvidenceSynthesis.Certainty.CertaintySubcomponent.
 * Use `create(RiskEvidenceSynthesis_Certainty_CertaintySubcomponentSchema)` to create a new message.
 */
export const RiskEvidenceSynthesis_Certainty_CertaintySubcomponentSchema: GenMessage<RiskEvidenceSynthesis_Certainty_CertaintySubcomponent> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_risk_evidence_synthesis, 0, 3, 0);

