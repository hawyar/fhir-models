//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/encounter.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { EncounterLocationStatusCode_Value, EncounterStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Code, CodeableConcept, Coding, Duration, Extension, Id, Identifier, Meta, Narrative, Period, PositiveInt, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/encounter.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_encounter: GenFile = /*@__PURE__*/
  fileDesc("Cjlwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9lbmNvdW50ZXIucHJvdG8SE2dvb2dsZS5maGlyLnI0LmNvcmUi/ykKCUVuY291bnRlchIjCgJpZBgBIAEoCzIXLmdvb2dsZS5maGlyLnI0LmNvcmUuSWQSJwoEbWV0YRgCIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuTWV0YRIwCg5pbXBsaWNpdF9ydWxlcxgDIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuVXJpEisKCGxhbmd1YWdlGAQgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlEiwKBHRleHQYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRInCgljb250YWluZWQYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EjEKCWV4dGVuc2lvbhgIIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjMKCmlkZW50aWZpZXIYCiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISQQoGc3RhdHVzGAsgASgLMikuZ29vZ2xlLmZoaXIucjQuY29yZS5FbmNvdW50ZXIuU3RhdHVzQ29kZUIG8NCH6wQBEkQKDnN0YXR1c19oaXN0b3J5GAwgAygLMiwuZ29vZ2xlLmZoaXIucjQuY29yZS5FbmNvdW50ZXIuU3RhdHVzSGlzdG9yeRI/CgtjbGFzc192YWx1ZRgNIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kaW5nQgbw0IfrBAFSBWNsYXNzEkIKDWNsYXNzX2hpc3RvcnkYDiADKAsyKy5nb29nbGUuZmhpci5yNC5jb3JlLkVuY291bnRlci5DbGFzc0hpc3RvcnkSMgoEdHlwZRgPIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjoKDHNlcnZpY2VfdHlwZRgQIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjYKCHByaW9yaXR5GBEgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSSQoHc3ViamVjdBgSIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQhjy//zCBgdQYXRpZW508v/8wgYFR3JvdXASTAoPZXBpc29kZV9vZl9jYXJlGBMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCE/L//MIGDUVwaXNvZGVPZkNhcmUSRgoIYmFzZWRfb24YFCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIU8v/8wgYOU2VydmljZVJlcXVlc3QSPwoLcGFydGljaXBhbnQYFSADKAsyKi5nb29nbGUuZmhpci5yNC5jb3JlLkVuY291bnRlci5QYXJ0aWNpcGFudBJGCgthcHBvaW50bWVudBgWIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQhHy//zCBgtBcHBvaW50bWVudBIrCgZwZXJpb2QYFyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlBlcmlvZBItCgZsZW5ndGgYGCABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkR1cmF0aW9uEjkKC3JlYXNvbl9jb2RlGBkgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSiQEKEHJlYXNvbl9yZWZlcmVuY2UYGiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJP8v/8wgYJQ29uZGl0aW9u8v/8wgYJUHJvY2VkdXJl8v/8wgYLT2JzZXJ2YXRpb27y//zCBhpJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvbhI7CglkaWFnbm9zaXMYGyADKAsyKC5nb29nbGUuZmhpci5yNC5jb3JlLkVuY291bnRlci5EaWFnbm9zaXMSPgoHYWNjb3VudBgcIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg3y//zCBgdBY2NvdW50EkcKD2hvc3BpdGFsaXphdGlvbhgdIAEoCzIuLmdvb2dsZS5maGlyLnI0LmNvcmUuRW5jb3VudGVyLkhvc3BpdGFsaXphdGlvbhI5Cghsb2NhdGlvbhgeIAMoCzInLmdvb2dsZS5maGlyLnI0LmNvcmUuRW5jb3VudGVyLkxvY2F0aW9uEkwKEHNlcnZpY2VfcHJvdmlkZXIYHyABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIS8v/8wgYMT3JnYW5pemF0aW9uEkAKB3BhcnRfb2YYICABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJRW5jb3VudGVyGpQCCgpTdGF0dXNDb2RlEj0KBXZhbHVlGAEgASgOMi4uZ29vZ2xlLmZoaXIucjQuY29yZS5FbmNvdW50ZXJTdGF0dXNDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246a4r5g7IFLWh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZW5jb3VudGVyLXN0YXR1c8Cf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGsQECg1TdGF0dXNIaXN0b3J5EicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24STwoGc3RhdHVzGAQgASgLMjcuZ29vZ2xlLmZoaXIucjQuY29yZS5FbmNvdW50ZXIuU3RhdHVzSGlzdG9yeS5TdGF0dXNDb2RlQgbw0IfrBAESMwoGcGVyaW9kGAUgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2RCBvDQh+sEARqUAgoKU3RhdHVzQ29kZRI9CgV2YWx1ZRgBIAEoDjIuLmdvb2dsZS5maGlyLnI0LmNvcmUuRW5jb3VudGVyU3RhdHVzQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOmuK+YOyBS1odHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2VuY291bnRlci1zdGF0dXPAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqcAgoMQ2xhc3NIaXN0b3J5EicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SPwoLY2xhc3NfdmFsdWUYBCABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGluZ0IG8NCH6wQBUgVjbGFzcxIzCgZwZXJpb2QYBSABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlBlcmlvZEIG8NCH6wQBGvcCCgtQYXJ0aWNpcGFudBInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjIKBHR5cGUYBCADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIrCgZwZXJpb2QYBSABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlBlcmlvZBJvCgppbmRpdmlkdWFsGAYgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCO/L//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGXy//zCBg1SZWxhdGVkUGVyc29uGt8CCglEaWFnbm9zaXMSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhJXCgljb25kaXRpb24YBCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIk8NCH6wQB8v/8wgYJQ29uZGl0aW9u8v/8wgYJUHJvY2VkdXJlEjEKA3VzZRgFIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ei4KBHJhbmsYBiABKAsyIC5nb29nbGUuZmhpci5yNC5jb3JlLlBvc2l0aXZlSW50GpQGCg9Ib3NwaXRhbGl6YXRpb24SJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhJBChhwcmVfYWRtaXNzaW9uX2lkZW50aWZpZXIYBCABKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISUAoGb3JpZ2luGAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCIPL//MIGCExvY2F0aW9u8v/8wgYMT3JnYW5pemF0aW9uEjoKDGFkbWl0X3NvdXJjZRgGIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjoKDHJlX2FkbWlzc2lvbhgHIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ej0KD2RpZXRfcHJlZmVyZW5jZRgIIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ej4KEHNwZWNpYWxfY291cnRlc3kYCSADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBJBChNzcGVjaWFsX2FycmFuZ2VtZW50GAogAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSVQoLZGVzdGluYXRpb24YCyABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIg8v/8wgYITG9jYXRpb27y//zCBgxPcmdhbml6YXRpb24SQwoVZGlzY2hhcmdlX2Rpc3Bvc2l0aW9uGAwgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQawAUKCExvY2F0aW9uEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SRgoIbG9jYXRpb24YBCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIU8NCH6wQB8v/8wgYITG9jYXRpb24SQgoGc3RhdHVzGAUgASgLMjIuZ29vZ2xlLmZoaXIucjQuY29yZS5FbmNvdW50ZXIuTG9jYXRpb24uU3RhdHVzQ29kZRI7Cg1waHlzaWNhbF90eXBlGAYgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSKwoGcGVyaW9kGAcgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2QapQIKClN0YXR1c0NvZGUSRQoFdmFsdWUYASABKA4yNi5nb29nbGUuZmhpci5yNC5jb3JlLkVuY291bnRlckxvY2F0aW9uU3RhdHVzQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOnSK+YOyBTZodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2VuY291bnRlci1sb2NhdGlvbi1zdGF0dXPAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZTo9wJ/jtgUDsv7klwYxaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL0VuY291bnRlckoECAcQCEJ5Chdjb20uZ29vZ2xlLmZoaXIucjQuY29yZVABWlZnaXRodWIuY29tL2dvb2dsZS9maGlyL2dvL3Byb3RvL2dvb2dsZS9maGlyL3Byb3RvL3I0L2NvcmUvcmVzb3VyY2VzL2VuY291bnRlcl9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Encounter.
 * An interaction during which services are provided to the patient.
 * See http://hl7.org/fhir/StructureDefinition/Encounter
 *
 * @generated from message google.fhir.r4.core.Encounter
 */
export type Encounter = Message<"google.fhir.r4.core.Encounter"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Identifier(s) by which this encounter is known
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * @generated from field: google.fhir.r4.core.Encounter.StatusCode status = 11;
   */
  status?: Encounter_StatusCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.Encounter.StatusHistory status_history = 12;
   */
  statusHistory: Encounter_StatusHistory[];

  /**
   * Classification of patient encounter
   *
   * @generated from field: google.fhir.r4.core.Coding class_value = 13 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * @generated from field: repeated google.fhir.r4.core.Encounter.ClassHistory class_history = 14;
   */
  classHistory: Encounter_ClassHistory[];

  /**
   * Specific type of encounter
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 15;
   */
  type: CodeableConcept[];

  /**
   * Specific type of service
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept service_type = 16;
   */
  serviceType?: CodeableConcept;

  /**
   * Indicates the urgency of the encounter
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 17;
   */
  priority?: CodeableConcept;

  /**
   * The patient or group present at the encounter
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Episode(s) of care that this encounter should be recorded against
   *
   * @generated from field: repeated google.fhir.r4.core.Reference episode_of_care = 19;
   */
  episodeOfCare: Reference[];

  /**
   * The ServiceRequest that initiated this encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 20;
   */
  basedOn: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Encounter.Participant participant = 21;
   */
  participant: Encounter_Participant[];

  /**
   * The appointment that scheduled this encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference appointment = 22;
   */
  appointment: Reference[];

  /**
   * The start and end time of the encounter
   *
   * @generated from field: google.fhir.r4.core.Period period = 23;
   */
  period?: Period;

  /**
   * Quantity of time the encounter lasted (less time absent)
   *
   * @generated from field: google.fhir.r4.core.Duration length = 24;
   */
  length?: Duration;

  /**
   * Coded reason the encounter takes place
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 25;
   */
  reasonCode: CodeableConcept[];

  /**
   * Reason the encounter takes place (reference)
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 26;
   */
  reasonReference: Reference[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Encounter.Diagnosis diagnosis = 27;
   */
  diagnosis: Encounter_Diagnosis[];

  /**
   * The set of accounts that may be used for billing for this Encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference account = 28;
   */
  account: Reference[];

  /**
   * @generated from field: google.fhir.r4.core.Encounter.Hospitalization hospitalization = 29;
   */
  hospitalization?: Encounter_Hospitalization;

  /**
   * @generated from field: repeated google.fhir.r4.core.Encounter.Location location = 30;
   */
  location: Encounter_Location[];

  /**
   * The organization (facility) responsible for this encounter
   *
   * @generated from field: google.fhir.r4.core.Reference service_provider = 31;
   */
  serviceProvider?: Reference;

  /**
   * Another Encounter this encounter is part of
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 32;
   */
  partOf?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.
 * Use `create(EncounterSchema)` to create a new message.
 */
export const EncounterSchema: GenMessage<Encounter> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0);

/**
 * planned | arrived | triaged | in-progress | onleave | finished | cancelled
 * +
 *
 * @generated from message google.fhir.r4.core.Encounter.StatusCode
 */
export type Encounter_StatusCode = Message<"google.fhir.r4.core.Encounter.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.EncounterStatusCode.Value value = 1;
   */
  value: EncounterStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Encounter.StatusCode.
 * Use `create(Encounter_StatusCodeSchema)` to create a new message.
 */
export const Encounter_StatusCodeSchema: GenMessage<Encounter_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 0);

/**
 * List of past encounter statuses
 *
 * @generated from message google.fhir.r4.core.Encounter.StatusHistory
 */
export type Encounter_StatusHistory = Message<"google.fhir.r4.core.Encounter.StatusHistory"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.Encounter.StatusHistory.StatusCode status = 4;
   */
  status?: Encounter_StatusHistory_StatusCode;

  /**
   * The time that the episode was in the specified status
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.StatusHistory.
 * Use `create(Encounter_StatusHistorySchema)` to create a new message.
 */
export const Encounter_StatusHistorySchema: GenMessage<Encounter_StatusHistory> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 1);

/**
 * planned | arrived | triaged | in-progress | onleave | finished |
 * cancelled +
 *
 * @generated from message google.fhir.r4.core.Encounter.StatusHistory.StatusCode
 */
export type Encounter_StatusHistory_StatusCode = Message<"google.fhir.r4.core.Encounter.StatusHistory.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.EncounterStatusCode.Value value = 1;
   */
  value: EncounterStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Encounter.StatusHistory.StatusCode.
 * Use `create(Encounter_StatusHistory_StatusCodeSchema)` to create a new message.
 */
export const Encounter_StatusHistory_StatusCodeSchema: GenMessage<Encounter_StatusHistory_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 1, 0);

/**
 * List of past encounter classes
 *
 * @generated from message google.fhir.r4.core.Encounter.ClassHistory
 */
export type Encounter_ClassHistory = Message<"google.fhir.r4.core.Encounter.ClassHistory"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.r4.core.Coding class_value = 4 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * The time that the episode was in the specified class
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.ClassHistory.
 * Use `create(Encounter_ClassHistorySchema)` to create a new message.
 */
export const Encounter_ClassHistorySchema: GenMessage<Encounter_ClassHistory> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 2);

/**
 * List of participants involved in the encounter
 *
 * @generated from message google.fhir.r4.core.Encounter.Participant
 */
export type Encounter_Participant = Message<"google.fhir.r4.core.Encounter.Participant"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Role of participant in encounter
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 4;
   */
  type: CodeableConcept[];

  /**
   * Period of time during the encounter that the participant participated
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * Persons involved in the encounter other than the patient
   *
   * @generated from field: google.fhir.r4.core.Reference individual = 6;
   */
  individual?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.Participant.
 * Use `create(Encounter_ParticipantSchema)` to create a new message.
 */
export const Encounter_ParticipantSchema: GenMessage<Encounter_Participant> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 3);

/**
 * The list of diagnosis relevant to this encounter
 *
 * @generated from message google.fhir.r4.core.Encounter.Diagnosis
 */
export type Encounter_Diagnosis = Message<"google.fhir.r4.core.Encounter.Diagnosis"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The diagnosis or procedure relevant to the encounter
   *
   * @generated from field: google.fhir.r4.core.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the encounter (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept use = 5;
   */
  use?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.r4.core.PositiveInt rank = 6;
   */
  rank?: PositiveInt;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.Diagnosis.
 * Use `create(Encounter_DiagnosisSchema)` to create a new message.
 */
export const Encounter_DiagnosisSchema: GenMessage<Encounter_Diagnosis> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 4);

/**
 * Details about the admission to a healthcare service
 *
 * @generated from message google.fhir.r4.core.Encounter.Hospitalization
 */
export type Encounter_Hospitalization = Message<"google.fhir.r4.core.Encounter.Hospitalization"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Pre-admission identifier
   *
   * @generated from field: google.fhir.r4.core.Identifier pre_admission_identifier = 4;
   */
  preAdmissionIdentifier?: Identifier;

  /**
   * The location/organization from which the patient came before admission
   *
   * @generated from field: google.fhir.r4.core.Reference origin = 5;
   */
  origin?: Reference;

  /**
   * From where patient was admitted (physician referral, transfer)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept admit_source = 6;
   */
  admitSource?: CodeableConcept;

  /**
   * The type of hospital re-admission that has occurred (if any). If the
   * value is absent, then this is not identified as a readmission
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept re_admission = 7;
   */
  reAdmission?: CodeableConcept;

  /**
   * Diet preferences reported by the patient
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept diet_preference = 8;
   */
  dietPreference: CodeableConcept[];

  /**
   * Special courtesies (VIP, board member)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept special_courtesy = 9;
   */
  specialCourtesy: CodeableConcept[];

  /**
   * Wheelchair, translator, stretcher, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept special_arrangement = 10;
   */
  specialArrangement: CodeableConcept[];

  /**
   * Location/organization to which the patient is discharged
   *
   * @generated from field: google.fhir.r4.core.Reference destination = 11;
   */
  destination?: Reference;

  /**
   * Category or kind of location after discharge
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept discharge_disposition = 12;
   */
  dischargeDisposition?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.Hospitalization.
 * Use `create(Encounter_HospitalizationSchema)` to create a new message.
 */
export const Encounter_HospitalizationSchema: GenMessage<Encounter_Hospitalization> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 5);

/**
 * List of locations where the patient has been
 *
 * @generated from message google.fhir.r4.core.Encounter.Location
 */
export type Encounter_Location = Message<"google.fhir.r4.core.Encounter.Location"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Location the encounter takes place
   *
   * @generated from field: google.fhir.r4.core.Reference location = 4;
   */
  location?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Encounter.Location.StatusCode status = 5;
   */
  status?: Encounter_Location_StatusCode;

  /**
   * The physical type of the location (usually the level in the location
   * hierachy - bed room ward etc.)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept physical_type = 6;
   */
  physicalType?: CodeableConcept;

  /**
   * Time period during which the patient was present at the location
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;
};

/**
 * Describes the message google.fhir.r4.core.Encounter.Location.
 * Use `create(Encounter_LocationSchema)` to create a new message.
 */
export const Encounter_LocationSchema: GenMessage<Encounter_Location> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 6);

/**
 * planned | active | reserved | completed
 *
 * @generated from message google.fhir.r4.core.Encounter.Location.StatusCode
 */
export type Encounter_Location_StatusCode = Message<"google.fhir.r4.core.Encounter.Location.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.EncounterLocationStatusCode.Value value = 1;
   */
  value: EncounterLocationStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Encounter.Location.StatusCode.
 * Use `create(Encounter_Location_StatusCodeSchema)` to create a new message.
 */
export const Encounter_Location_StatusCodeSchema: GenMessage<Encounter_Location_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_encounter, 0, 6, 0);

