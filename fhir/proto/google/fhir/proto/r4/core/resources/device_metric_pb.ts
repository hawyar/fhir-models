//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/device_metric.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { DeviceMetricCalibrationStateCode_Value, DeviceMetricCalibrationTypeCode_Value, DeviceMetricCategoryCode_Value, DeviceMetricColorCode_Value, DeviceMetricOperationalStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Code, CodeableConcept, Extension, Id, Identifier, Instant, Meta, Narrative, Reference, String, Timing, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/device_metric.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_device_metric: GenFile = /*@__PURE__*/
  fileDesc("Cj1wcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9kZXZpY2VfbWV0cmljLnByb3RvEhNnb29nbGUuZmhpci5yNC5jb3JlIuEWCgxEZXZpY2VNZXRyaWMSIwoCaWQYASABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkEicKBG1ldGEYAiABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLk1ldGESMAoOaW1wbGljaXRfcnVsZXMYAyABKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRIrCghsYW5ndWFnZRgEIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZRIsCgR0ZXh0GAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5OYXJyYXRpdmUSJwoJY29udGFpbmVkGAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIxCglleHRlbnNpb24YCCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YCSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIzCgppZGVudGlmaWVyGAogAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVyEjoKBHR5cGUYCyABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdEIG8NCH6wQBEjIKBHVuaXQYDCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBI8CgZzb3VyY2UYDSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIM8v/8wgYGRGV2aWNlEjwKBnBhcmVudBgOIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQgzy//zCBgZEZXZpY2USUwoSb3BlcmF0aW9uYWxfc3RhdHVzGA8gASgLMjcuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWMuT3BlcmF0aW9uYWxTdGF0dXNDb2RlEjoKBWNvbG9yGBAgASgLMisuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWMuQ29sb3JDb2RlEkgKCGNhdGVnb3J5GBEgASgLMi4uZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWMuQ2F0ZWdvcnlDb2RlQgbw0IfrBAESNwoSbWVhc3VyZW1lbnRfcGVyaW9kGBIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5UaW1pbmcSQgoLY2FsaWJyYXRpb24YEyADKAsyLS5nb29nbGUuZmhpci5yNC5jb3JlLkRldmljZU1ldHJpYy5DYWxpYnJhdGlvbhq2AgoVT3BlcmF0aW9uYWxTdGF0dXNDb2RlEksKBXZhbHVlGAEgASgOMjwuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWNPcGVyYXRpb25hbFN0YXR1c0NvZGUuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjp0ivmDsgU2aHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tZXRyaWMtb3BlcmF0aW9uYWwtc3RhdHVzwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUakQIKCUNvbG9yQ29kZRI/CgV2YWx1ZRgBIAEoDjIwLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlTWV0cmljQ29sb3JDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246Z4r5g7IFKWh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbWV0cmljLWNvbG9ywJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUamgIKDENhdGVnb3J5Q29kZRJCCgV2YWx1ZRgBIAEoDjIzLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlTWV0cmljQ2F0ZWdvcnlDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246aor5g7IFLGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbWV0cmljLWNhdGVnb3J5wJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUasgcKC0NhbGlicmF0aW9uEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SRAoEdHlwZRgEIAEoCzI2Lmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlTWV0cmljLkNhbGlicmF0aW9uLlR5cGVDb2RlEkYKBXN0YXRlGAUgASgLMjcuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWMuQ2FsaWJyYXRpb24uU3RhdGVDb2RlEioKBHRpbWUYBiABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkluc3RhbnQapQIKCFR5cGVDb2RlEkkKBXZhbHVlGAEgASgOMjouZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWNDYWxpYnJhdGlvblR5cGVDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246cor5g7IFNGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbWV0cmljLWNhbGlicmF0aW9uLXR5cGXAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqoAgoJU3RhdGVDb2RlEkoKBXZhbHVlGAEgASgOMjsuZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VNZXRyaWNDYWxpYnJhdGlvblN0YXRlQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOnOK+YOyBTVodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21ldHJpYy1jYWxpYnJhdGlvbi1zdGF0ZcCf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlOkDAn+O2BQOy/uSXBjRodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vRGV2aWNlTWV0cmljSgQIBxAIQn0KF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaWmdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvZGV2aWNlX21ldHJpY19nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for DeviceMetric.
 * Measurement, calculation or setting capability of a medical device.
 * See http://hl7.org/fhir/StructureDefinition/DeviceMetric
 *
 * @generated from message google.fhir.r4.core.DeviceMetric
 */
export type DeviceMetric = Message<"google.fhir.r4.core.DeviceMetric"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Instance identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Identity of metric, for example Heart Rate or PEEP Setting
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Unit of Measure for the Metric
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept unit = 12;
   */
  unit?: CodeableConcept;

  /**
   * Describes the link to the source Device
   *
   * @generated from field: google.fhir.r4.core.Reference source = 13;
   */
  source?: Reference;

  /**
   * Describes the link to the parent Device
   *
   * @generated from field: google.fhir.r4.core.Reference parent = 14;
   */
  parent?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.DeviceMetric.OperationalStatusCode operational_status = 15;
   */
  operationalStatus?: DeviceMetric_OperationalStatusCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceMetric.ColorCode color = 16;
   */
  color?: DeviceMetric_ColorCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceMetric.CategoryCode category = 17;
   */
  category?: DeviceMetric_CategoryCode;

  /**
   * Describes the measurement repetition time
   *
   * @generated from field: google.fhir.r4.core.Timing measurement_period = 18;
   */
  measurementPeriod?: Timing;

  /**
   * @generated from field: repeated google.fhir.r4.core.DeviceMetric.Calibration calibration = 19;
   */
  calibration: DeviceMetric_Calibration[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.
 * Use `create(DeviceMetricSchema)` to create a new message.
 */
export const DeviceMetricSchema: GenMessage<DeviceMetric> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0);

/**
 * on | off | standby | entered-in-error
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.OperationalStatusCode
 */
export type DeviceMetric_OperationalStatusCode = Message<"google.fhir.r4.core.DeviceMetric.OperationalStatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value value = 1;
   */
  value: DeviceMetricOperationalStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.OperationalStatusCode.
 * Use `create(DeviceMetric_OperationalStatusCodeSchema)` to create a new message.
 */
export const DeviceMetric_OperationalStatusCodeSchema: GenMessage<DeviceMetric_OperationalStatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 0);

/**
 * black | red | green | yellow | blue | magenta | cyan | white
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.ColorCode
 */
export type DeviceMetric_ColorCode = Message<"google.fhir.r4.core.DeviceMetric.ColorCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DeviceMetricColorCode.Value value = 1;
   */
  value: DeviceMetricColorCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.ColorCode.
 * Use `create(DeviceMetric_ColorCodeSchema)` to create a new message.
 */
export const DeviceMetric_ColorCodeSchema: GenMessage<DeviceMetric_ColorCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 1);

/**
 * measurement | setting | calculation | unspecified
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.CategoryCode
 */
export type DeviceMetric_CategoryCode = Message<"google.fhir.r4.core.DeviceMetric.CategoryCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DeviceMetricCategoryCode.Value value = 1;
   */
  value: DeviceMetricCategoryCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.CategoryCode.
 * Use `create(DeviceMetric_CategoryCodeSchema)` to create a new message.
 */
export const DeviceMetric_CategoryCodeSchema: GenMessage<DeviceMetric_CategoryCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 2);

/**
 * Describes the calibrations that have been performed or that are required to
 * be performed
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.Calibration
 */
export type DeviceMetric_Calibration = Message<"google.fhir.r4.core.DeviceMetric.Calibration"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * @generated from field: google.fhir.r4.core.DeviceMetric.Calibration.TypeCode type = 4;
   */
  type?: DeviceMetric_Calibration_TypeCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceMetric.Calibration.StateCode state = 5;
   */
  state?: DeviceMetric_Calibration_StateCode;

  /**
   * Describes the time last calibration has been performed
   *
   * @generated from field: google.fhir.r4.core.Instant time = 6;
   */
  time?: Instant;
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.Calibration.
 * Use `create(DeviceMetric_CalibrationSchema)` to create a new message.
 */
export const DeviceMetric_CalibrationSchema: GenMessage<DeviceMetric_Calibration> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 3);

/**
 * unspecified | offset | gain | two-point
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.Calibration.TypeCode
 */
export type DeviceMetric_Calibration_TypeCode = Message<"google.fhir.r4.core.DeviceMetric.Calibration.TypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value value = 1;
   */
  value: DeviceMetricCalibrationTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.
 * Use `create(DeviceMetric_Calibration_TypeCodeSchema)` to create a new message.
 */
export const DeviceMetric_Calibration_TypeCodeSchema: GenMessage<DeviceMetric_Calibration_TypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 3, 0);

/**
 * not-calibrated | calibration-required | calibrated | unspecified
 *
 * @generated from message google.fhir.r4.core.DeviceMetric.Calibration.StateCode
 */
export type DeviceMetric_Calibration_StateCode = Message<"google.fhir.r4.core.DeviceMetric.Calibration.StateCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value value = 1;
   */
  value: DeviceMetricCalibrationStateCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceMetric.Calibration.StateCode.
 * Use `create(DeviceMetric_Calibration_StateCodeSchema)` to create a new message.
 */
export const DeviceMetric_Calibration_StateCodeSchema: GenMessage<DeviceMetric_Calibration_StateCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_metric, 0, 3, 1);

