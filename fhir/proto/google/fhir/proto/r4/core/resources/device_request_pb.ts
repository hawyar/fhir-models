//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/device_request.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { RequestIntentCode_Value, RequestPriorityCode_Value, RequestStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Annotation, Boolean, Canonical, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Quantity, Range, Reference, String, Timing, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/device_request.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_device_request: GenFile = /*@__PURE__*/
  fileDesc("Cj5wcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9kZXZpY2VfcmVxdWVzdC5wcm90bxITZ29vZ2xlLmZoaXIucjQuY29yZSKlHwoNRGV2aWNlUmVxdWVzdBIjCgJpZBgBIAEoCzIXLmdvb2dsZS5maGlyLnI0LmNvcmUuSWQSJwoEbWV0YRgCIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuTWV0YRIwCg5pbXBsaWNpdF9ydWxlcxgDIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuVXJpEisKCGxhbmd1YWdlGAQgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlEiwKBHRleHQYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRInCgljb250YWluZWQYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EjEKCWV4dGVuc2lvbhgIIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjMKCmlkZW50aWZpZXIYCiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISPgoWaW5zdGFudGlhdGVzX2Nhbm9uaWNhbBgLIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuQ2Fub25pY2FsEjIKEGluc3RhbnRpYXRlc191cmkYDCADKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRJACghiYXNlZF9vbhgNIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghSZXNvdXJjZRJFCg1wcmlvcl9yZXF1ZXN0GA4gAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCFJlc291cmNlEjkKEGdyb3VwX2lkZW50aWZpZXIYDyABKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISPQoGc3RhdHVzGBAgASgLMi0uZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VSZXF1ZXN0LlN0YXR1c0NvZGUSRQoGaW50ZW50GBEgASgLMi0uZ29vZ2xlLmZoaXIucjQuY29yZS5EZXZpY2VSZXF1ZXN0LkludGVudENvZGVCBvDQh+sEARJBCghwcmlvcml0eRgSIAEoCzIvLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlUmVxdWVzdC5Qcmlvcml0eUNvZGUSPgoEY29kZRgTIAEoCzIoLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlUmVxdWVzdC5Db2RlWEIG8NCH6wQBEj8KCXBhcmFtZXRlchgUIAMoCzIsLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlUmVxdWVzdC5QYXJhbWV0ZXISaQoHc3ViamVjdBgVIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQjjw0IfrBAHy//zCBgdQYXRpZW508v/8wgYFR3JvdXDy//zCBghMb2NhdGlvbvL//MIGBkRldmljZRJCCgllbmNvdW50ZXIYFiABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIP8v/8wgYJRW5jb3VudGVyEkIKCm9jY3VycmVuY2UYFyABKAsyLi5nb29nbGUuZmhpci5yNC5jb3JlLkRldmljZVJlcXVlc3QuT2NjdXJyZW5jZVgSMgoLYXV0aG9yZWRfb24YGCABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lEnkKCXJlcXVlc3RlchgZIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQkby//zCBgZEZXZpY2Xy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYMT3JnYW5pemF0aW9uEjwKDnBlcmZvcm1lcl90eXBlGBogASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSvwEKCXBlcmZvcm1lchgbIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQosB8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZfL//MIGDE9yZ2FuaXphdGlvbvL//MIGCENhcmVUZWFt8v/8wgYRSGVhbHRoY2FyZVNlcnZpY2Xy//zCBgdQYXRpZW508v/8wgYGRGV2aWNl8v/8wgYNUmVsYXRlZFBlcnNvbhI5CgtyZWFzb25fY29kZRgcIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EocBChByZWFzb25fcmVmZXJlbmNlGB0gAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCTfL//MIGCUNvbmRpdGlvbvL//MIGC09ic2VydmF0aW9u8v/8wgYQRGlhZ25vc3RpY1JlcG9ydPL//MIGEURvY3VtZW50UmVmZXJlbmNlElQKCWluc3VyYW5jZRgeIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQiHy//zCBghDb3ZlcmFnZfL//MIGDUNsYWltUmVzcG9uc2USRwoPc3VwcG9ydGluZ19pbmZvGB8gAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCFJlc291cmNlEi0KBG5vdGUYICADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkFubm90YXRpb24SSgoQcmVsZXZhbnRfaGlzdG9yeRghIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQhDy//zCBgpQcm92ZW5hbmNlGpACCgpTdGF0dXNDb2RlEjsKBXZhbHVlGAEgASgOMiwuZ29vZ2xlLmZoaXIucjQuY29yZS5SZXF1ZXN0U3RhdHVzQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOmmK+YOyBStodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3JlcXVlc3Qtc3RhdHVzwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGUakAIKCkludGVudENvZGUSOwoFdmFsdWUYASABKA4yLC5nb29nbGUuZmhpci5yNC5jb3JlLlJlcXVlc3RJbnRlbnRDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246aYr5g7IFK2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVxdWVzdC1pbnRlbnTAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqWAgoMUHJpb3JpdHlDb2RlEj0KBXZhbHVlGAEgASgOMi4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZXF1ZXN0UHJpb3JpdHlDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246a4r5g7IFLWh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVxdWVzdC1wcmlvcml0ecCf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGp4BCgVDb2RlWBJBCglyZWZlcmVuY2UYASABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIM8v/8wgYGRGV2aWNlSAASQAoQY29kZWFibGVfY29uY2VwdBgCIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0SAA6BqCDg+gGAUIICgZjaG9pY2UaiwQKCVBhcmFtZXRlchInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjIKBGNvZGUYBCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBJCCgV2YWx1ZRgFIAEoCzIzLmdvb2dsZS5maGlyLnI0LmNvcmUuRGV2aWNlUmVxdWVzdC5QYXJhbWV0ZXIuVmFsdWVYGu0BCgZWYWx1ZVgSQAoQY29kZWFibGVfY29uY2VwdBgBIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0SAASMQoIcXVhbnRpdHkYAiABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLlF1YW50aXR5SAASKwoFcmFuZ2UYAyABKAsyGi5nb29nbGUuZmhpci5yNC5jb3JlLlJhbmdlSAASLwoHYm9vbGVhbhgEIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbkgAOgagg4PoBgFCCAoGY2hvaWNlGrEBCgtPY2N1cnJlbmNlWBIyCglkYXRlX3RpbWUYASABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lSAASLQoGcGVyaW9kGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2RIABItCgZ0aW1pbmcYAyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlRpbWluZ0gAOgagg4PoBgFCCAoGY2hvaWNlOkHAn+O2BQOy/uSXBjVodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vRGV2aWNlUmVxdWVzdEoECAcQCEJ+Chdjb20uZ29vZ2xlLmZoaXIucjQuY29yZVABWltnaXRodWIuY29tL2dvb2dsZS9maGlyL2dvL3Byb3RvL2dvb2dsZS9maGlyL3Byb3RvL3I0L2NvcmUvcmVzb3VyY2VzL2RldmljZV9yZXF1ZXN0X2dvX3Byb3RvmMawtQcEYgZwcm90bzM", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for DeviceRequest.
 * Medical device request.
 * See http://hl7.org/fhir/StructureDefinition/DeviceRequest
 *
 * @generated from message google.fhir.r4.core.DeviceRequest
 */
export type DeviceRequest = Message<"google.fhir.r4.core.DeviceRequest"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * External Request identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[];

  /**
   * What request replaces
   *
   * @generated from field: repeated google.fhir.r4.core.Reference prior_request = 14;
   */
  priorRequest: Reference[];

  /**
   * Identifier of composite request
   *
   * @generated from field: google.fhir.r4.core.Identifier group_identifier = 15;
   */
  groupIdentifier?: Identifier;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.StatusCode status = 16;
   */
  status?: DeviceRequest_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.IntentCode intent = 17;
   */
  intent?: DeviceRequest_IntentCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.PriorityCode priority = 18;
   */
  priority?: DeviceRequest_PriorityCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.CodeX code = 19;
   */
  code?: DeviceRequest_CodeX;

  /**
   * @generated from field: repeated google.fhir.r4.core.DeviceRequest.Parameter parameter = 20;
   */
  parameter: DeviceRequest_Parameter[];

  /**
   * Focus of request
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 21;
   */
  subject?: Reference;

  /**
   * Encounter motivating request
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 22;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.OccurrenceX occurrence = 23;
   */
  occurrence?: DeviceRequest_OccurrenceX;

  /**
   * When recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime authored_on = 24;
   */
  authoredOn?: DateTime;

  /**
   * Who/what is requesting diagnostics
   *
   * @generated from field: google.fhir.r4.core.Reference requester = 25;
   */
  requester?: Reference;

  /**
   * Filler role
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept performer_type = 26;
   */
  performerType?: CodeableConcept;

  /**
   * Requested Filler
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 27;
   */
  performer?: Reference;

  /**
   * Coded Reason for request
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 28;
   */
  reasonCode: CodeableConcept[];

  /**
   * Linked Reason for request
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 29;
   */
  reasonReference: Reference[];

  /**
   * Associated insurance coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference insurance = 30;
   */
  insurance: Reference[];

  /**
   * Additional clinical information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_info = 31;
   */
  supportingInfo: Reference[];

  /**
   * Notes or comments
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 32;
   */
  note: Annotation[];

  /**
   * Request provenance
   *
   * @generated from field: repeated google.fhir.r4.core.Reference relevant_history = 33;
   */
  relevantHistory: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.
 * Use `create(DeviceRequestSchema)` to create a new message.
 */
export const DeviceRequestSchema: GenMessage<DeviceRequest> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0);

/**
 * draft | active | on-hold | revoked | completed | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.StatusCode
 */
export type DeviceRequest_StatusCode = Message<"google.fhir.r4.core.DeviceRequest.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.RequestStatusCode.Value value = 1;
   */
  value: RequestStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.StatusCode.
 * Use `create(DeviceRequest_StatusCodeSchema)` to create a new message.
 */
export const DeviceRequest_StatusCodeSchema: GenMessage<DeviceRequest_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 0);

/**
 * proposal | plan | directive | order | original-order | reflex-order |
 * filler-order | instance-order | option
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.IntentCode
 */
export type DeviceRequest_IntentCode = Message<"google.fhir.r4.core.DeviceRequest.IntentCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.RequestIntentCode.Value value = 1;
   */
  value: RequestIntentCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.IntentCode.
 * Use `create(DeviceRequest_IntentCodeSchema)` to create a new message.
 */
export const DeviceRequest_IntentCodeSchema: GenMessage<DeviceRequest_IntentCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 1);

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.PriorityCode
 */
export type DeviceRequest_PriorityCode = Message<"google.fhir.r4.core.DeviceRequest.PriorityCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value: RequestPriorityCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.PriorityCode.
 * Use `create(DeviceRequest_PriorityCodeSchema)` to create a new message.
 */
export const DeviceRequest_PriorityCodeSchema: GenMessage<DeviceRequest_PriorityCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 2);

/**
 * Device requested
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.CodeX
 */
export type DeviceRequest_CodeX = Message<"google.fhir.r4.core.DeviceRequest.CodeX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.CodeX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.CodeX.
 * Use `create(DeviceRequest_CodeXSchema)` to create a new message.
 */
export const DeviceRequest_CodeXSchema: GenMessage<DeviceRequest_CodeX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 3);

/**
 * Device details
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.Parameter
 */
export type DeviceRequest_Parameter = Message<"google.fhir.r4.core.DeviceRequest.Parameter"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Device detail
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.Parameter.ValueX value = 5;
   */
  value?: DeviceRequest_Parameter_ValueX;
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.Parameter.
 * Use `create(DeviceRequest_ParameterSchema)` to create a new message.
 */
export const DeviceRequest_ParameterSchema: GenMessage<DeviceRequest_Parameter> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 4);

/**
 * Value of detail
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.Parameter.ValueX
 */
export type DeviceRequest_Parameter_ValueX = Message<"google.fhir.r4.core.DeviceRequest.Parameter.ValueX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 3;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.Parameter.ValueX.
 * Use `create(DeviceRequest_Parameter_ValueXSchema)` to create a new message.
 */
export const DeviceRequest_Parameter_ValueXSchema: GenMessage<DeviceRequest_Parameter_ValueX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 4, 0);

/**
 * Desired time or schedule for use
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.OccurrenceX
 */
export type DeviceRequest_OccurrenceX = Message<"google.fhir.r4.core.DeviceRequest.OccurrenceX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.OccurrenceX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.DeviceRequest.OccurrenceX.
 * Use `create(DeviceRequest_OccurrenceXSchema)` to create a new message.
 */
export const DeviceRequest_OccurrenceXSchema: GenMessage<DeviceRequest_OccurrenceX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_device_request, 0, 5);

