//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/group.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { GroupTypeCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Boolean, Code, CodeableConcept, Extension, Id, Identifier, Meta, Narrative, Period, Quantity, Range, Reference, String, UnsignedInt, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/group.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_group: GenFile = /*@__PURE__*/
  fileDesc("CjVwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9ncm91cC5wcm90bxITZ29vZ2xlLmZoaXIucjQuY29yZSKuEwoFR3JvdXASIwoCaWQYASABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkEicKBG1ldGEYAiABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLk1ldGESMAoOaW1wbGljaXRfcnVsZXMYAyABKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRIrCghsYW5ndWFnZRgEIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZRIsCgR0ZXh0GAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5OYXJyYXRpdmUSJwoJY29udGFpbmVkGAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIxCglleHRlbnNpb24YCCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YCSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIzCgppZGVudGlmaWVyGAogAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVyEiwKBmFjdGl2ZRgLIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbhI5CgR0eXBlGAwgASgLMiMuZ29vZ2xlLmZoaXIucjQuY29yZS5Hcm91cC5UeXBlQ29kZUIG8NCH6wQBEjQKBmFjdHVhbBgNIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbkIG8NCH6wQBEjIKBGNvZGUYDiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIpCgRuYW1lGA8gASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMgoIcXVhbnRpdHkYECABKAsyIC5nb29nbGUuZmhpci5yNC5jb3JlLlVuc2lnbmVkSW50EoYBCg9tYW5hZ2luZ19lbnRpdHkYESABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJN8v/8wgYMT3JnYW5pemF0aW9u8v/8wgYNUmVsYXRlZFBlcnNvbvL//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGUSQQoOY2hhcmFjdGVyaXN0aWMYEiADKAsyKS5nb29nbGUuZmhpci5yNC5jb3JlLkdyb3VwLkNoYXJhY3RlcmlzdGljEjEKBm1lbWJlchgTIAMoCzIhLmdvb2dsZS5maGlyLnI0LmNvcmUuR3JvdXAuTWVtYmVyGoYCCghUeXBlQ29kZRI3CgV2YWx1ZRgBIAEoDjIoLmdvb2dsZS5maGlyLnI0LmNvcmUuR3JvdXBUeXBlQ29kZS5WYWx1ZRInCgJpZBgCIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uOmWK+YOyBSdodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2dyb3VwLXR5cGXAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRq2BQoOQ2hhcmFjdGVyaXN0aWMSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6CgRjb2RlGAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHRCBvDQh+sEARJHCgV2YWx1ZRgFIAEoCzIwLmdvb2dsZS5maGlyLnI0LmNvcmUuR3JvdXAuQ2hhcmFjdGVyaXN0aWMuVmFsdWVYQgbw0IfrBAESNQoHZXhjbHVkZRgGIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbkIG8NCH6wQBEisKBnBlcmlvZBgHIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuUGVyaW9kGqICCgZWYWx1ZVgSQAoQY29kZWFibGVfY29uY2VwdBgBIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0SAASLwoHYm9vbGVhbhgCIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbkgAEjEKCHF1YW50aXR5GAMgASgLMh0uZ29vZ2xlLmZoaXIucjQuY29yZS5RdWFudGl0eUgAEisKBXJhbmdlGAQgASgLMhouZ29vZ2xlLmZoaXIucjQuY29yZS5SYW5nZUgAEjMKCXJlZmVyZW5jZRgFIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlSAA6BqCDg+gGAUIICgZjaG9pY2UaoQMKBk1lbWJlchInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEqEBCgZlbnRpdHkYBCABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJx8NCH6wQB8v/8wgYHUGF0aWVudPL//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGXy//zCBgZEZXZpY2Xy//zCBgpNZWRpY2F0aW9u8v/8wgYJU3Vic3RhbmNl8v/8wgYFR3JvdXASKwoGcGVyaW9kGAUgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5QZXJpb2QSLgoIaW5hY3RpdmUYBiABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkJvb2xlYW46YMCf47YFA7L+5JcGLWh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Hcm91cJqGk6AIIW1lbWJlci5lbXB0eSgpIG9yIChhY3R1YWwgPSB0cnVlKUoECAcQCEJ1Chdjb20uZ29vZ2xlLmZoaXIucjQuY29yZVABWlJnaXRodWIuY29tL2dvb2dsZS9maGlyL2dvL3Byb3RvL2dvb2dsZS9maGlyL3Byb3RvL3I0L2NvcmUvcmVzb3VyY2VzL2dyb3VwX2dvX3Byb3RvmMawtQcEYgZwcm90bzM", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Group.
 * Group of multiple entities.
 * See http://hl7.org/fhir/StructureDefinition/Group
 *
 * @generated from message google.fhir.r4.core.Group
 */
export type Group = Message<"google.fhir.r4.core.Group"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Unique id
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Whether this group's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.Group.TypeCode type = 12;
   */
  type?: Group_TypeCode;

  /**
   * Descriptive or actual
   *
   * @generated from field: google.fhir.r4.core.Boolean actual = 13;
   */
  actual?: Boolean;

  /**
   * Kind of Group members
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Label for Group
   *
   * @generated from field: google.fhir.r4.core.String name = 15;
   */
  name?: String;

  /**
   * Number of members
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt quantity = 16;
   */
  quantity?: UnsignedInt;

  /**
   * Entity that is the custodian of the Group's definition
   *
   * @generated from field: google.fhir.r4.core.Reference managing_entity = 17;
   */
  managingEntity?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Group.Characteristic characteristic = 18;
   */
  characteristic: Group_Characteristic[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Group.Member member = 19;
   */
  member: Group_Member[];
};

/**
 * Describes the message google.fhir.r4.core.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_group, 0);

/**
 * person | animal | practitioner | device | medication | substance
 *
 * @generated from message google.fhir.r4.core.Group.TypeCode
 */
export type Group_TypeCode = Message<"google.fhir.r4.core.Group.TypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.GroupTypeCode.Value value = 1;
   */
  value: GroupTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Group.TypeCode.
 * Use `create(Group_TypeCodeSchema)` to create a new message.
 */
export const Group_TypeCodeSchema: GenMessage<Group_TypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_group, 0, 0);

/**
 * Include / Exclude group members by Trait
 *
 * @generated from message google.fhir.r4.core.Group.Characteristic
 */
export type Group_Characteristic = Message<"google.fhir.r4.core.Group.Characteristic"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Kind of characteristic
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Group.Characteristic.ValueX value = 5;
   */
  value?: Group_Characteristic_ValueX;

  /**
   * Group includes or excludes
   *
   * @generated from field: google.fhir.r4.core.Boolean exclude = 6;
   */
  exclude?: Boolean;

  /**
   * Period over which characteristic is tested
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;
};

/**
 * Describes the message google.fhir.r4.core.Group.Characteristic.
 * Use `create(Group_CharacteristicSchema)` to create a new message.
 */
export const Group_CharacteristicSchema: GenMessage<Group_Characteristic> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_group, 0, 1);

/**
 * Value held by characteristic
 *
 * @generated from message google.fhir.r4.core.Group.Characteristic.ValueX
 */
export type Group_Characteristic_ValueX = Message<"google.fhir.r4.core.Group.Characteristic.ValueX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Group.Characteristic.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 3;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 5;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Group.Characteristic.ValueX.
 * Use `create(Group_Characteristic_ValueXSchema)` to create a new message.
 */
export const Group_Characteristic_ValueXSchema: GenMessage<Group_Characteristic_ValueX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_group, 0, 1, 0);

/**
 * Who or what is in group
 *
 * @generated from message google.fhir.r4.core.Group.Member
 */
export type Group_Member = Message<"google.fhir.r4.core.Group.Member"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Reference to the group member
   *
   * @generated from field: google.fhir.r4.core.Reference entity = 4;
   */
  entity?: Reference;

  /**
   * Period member belonged to the group
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * If member is no longer in group
   *
   * @generated from field: google.fhir.r4.core.Boolean inactive = 6;
   */
  inactive?: Boolean;
};

/**
 * Describes the message google.fhir.r4.core.Group.Member.
 * Use `create(Group_MemberSchema)` to create a new message.
 */
export const Group_MemberSchema: GenMessage<Group_Member> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_group, 0, 2);

