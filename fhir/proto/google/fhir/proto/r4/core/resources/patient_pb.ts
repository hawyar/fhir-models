//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/patient.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { AdministrativeGenderCode_Value, LinkTypeCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Address, Attachment, Boolean, Code, CodeableConcept, ContactPoint, Date, DateTime, Extension, HumanName, Id, Identifier, Integer, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/patient.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_patient: GenFile = /*@__PURE__*/
  fileDesc("Cjdwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9wYXRpZW50LnByb3RvEhNnb29nbGUuZmhpci5yNC5jb3JlIqkdCgdQYXRpZW50EiMKAmlkGAEgASgLMhcuZ29vZ2xlLmZoaXIucjQuY29yZS5JZBInCgRtZXRhGAIgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5NZXRhEjAKDmltcGxpY2l0X3J1bGVzGAMgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5VcmkSKwoIbGFuZ3VhZ2UYBCABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGUSLAoEdGV4dBgFIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuTmFycmF0aXZlEicKCWNvbnRhaW5lZBgGIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSMQoJZXh0ZW5zaW9uGAggAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAkgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMwoKaWRlbnRpZmllchgKIAMoCzIfLmdvb2dsZS5maGlyLnI0LmNvcmUuSWRlbnRpZmllchIsCgZhY3RpdmUYCyABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkJvb2xlYW4SLAoEbmFtZRgMIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuSHVtYW5OYW1lEjIKB3RlbGVjb20YDSADKAsyIS5nb29nbGUuZmhpci5yNC5jb3JlLkNvbnRhY3RQb2ludBI3CgZnZW5kZXIYDiABKAsyJy5nb29nbGUuZmhpci5yNC5jb3JlLlBhdGllbnQuR2VuZGVyQ29kZRItCgpiaXJ0aF9kYXRlGA8gASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5EYXRlEjgKCGRlY2Vhc2VkGBAgASgLMiYuZ29vZ2xlLmZoaXIucjQuY29yZS5QYXRpZW50LkRlY2Vhc2VkWBItCgdhZGRyZXNzGBEgAygLMhwuZ29vZ2xlLmZoaXIucjQuY29yZS5BZGRyZXNzEjwKDm1hcml0YWxfc3RhdHVzGBIgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSQwoObXVsdGlwbGVfYmlydGgYEyABKAsyKy5nb29nbGUuZmhpci5yNC5jb3JlLlBhdGllbnQuTXVsdGlwbGVCaXJ0aFgSLgoFcGhvdG8YFCADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkF0dGFjaG1lbnQSNQoHY29udGFjdBgVIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuUGF0aWVudC5Db250YWN0EkEKDWNvbW11bmljYXRpb24YFiADKAsyKi5nb29nbGUuZmhpci5yNC5jb3JlLlBhdGllbnQuQ29tbXVuaWNhdGlvbhJ4ChRnZW5lcmFsX3ByYWN0aXRpb25lchgXIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQjry//zCBgxPcmdhbml6YXRpb27y//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xlElEKFW1hbmFnaW5nX29yZ2FuaXphdGlvbhgYIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQhLy//zCBgxPcmdhbml6YXRpb24SLwoEbGluaxgZIAMoCzIhLmdvb2dsZS5maGlyLnI0LmNvcmUuUGF0aWVudC5MaW5rGp4CCgpHZW5kZXJDb2RlEkIKBXZhbHVlGAEgASgOMjMuZ29vZ2xlLmZoaXIucjQuY29yZS5BZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjpwivmDsgUyaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hZG1pbmlzdHJhdGl2ZS1nZW5kZXLAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZRqCAQoJRGVjZWFzZWRYEi8KB2Jvb2xlYW4YASABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkJvb2xlYW5IABIyCglkYXRlX3RpbWUYAiABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lSAA6BqCDg+gGAUIICgZjaG9pY2UahAEKDk11bHRpcGxlQmlydGhYEi8KB2Jvb2xlYW4YASABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkJvb2xlYW5IABIvCgdpbnRlZ2VyGAIgASgLMhwuZ29vZ2xlLmZoaXIucjQuY29yZS5JbnRlZ2VySAA6BqCDg+gGAUIICgZjaG9pY2UanQcKB0NvbnRhY3QSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6CgxyZWxhdGlvbnNoaXAYBCADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIsCgRuYW1lGAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5IdW1hbk5hbWUSMgoHdGVsZWNvbRgGIAMoCzIhLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29udGFjdFBvaW50Ei0KB2FkZHJlc3MYByABKAsyHC5nb29nbGUuZmhpci5yNC5jb3JlLkFkZHJlc3MSPwoGZ2VuZGVyGAggASgLMi8uZ29vZ2xlLmZoaXIucjQuY29yZS5QYXRpZW50LkNvbnRhY3QuR2VuZGVyQ29kZRJICgxvcmdhbml6YXRpb24YCSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIS8v/8wgYMT3JnYW5pemF0aW9uEisKBnBlcmlvZBgKIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuUGVyaW9kGp4CCgpHZW5kZXJDb2RlEkIKBXZhbHVlGAEgASgOMjMuZ29vZ2xlLmZoaXIucjQuY29yZS5BZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUuVmFsdWUSJwoCaWQYAiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbjpwivmDsgUyaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hZG1pbmlzdHJhdGl2ZS1nZW5kZXLAn+O2BQGatY6TBixodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY29kZTpUmoaToAhObmFtZS5leGlzdHMoKSBvciB0ZWxlY29tLmV4aXN0cygpIG9yIGFkZHJlc3MuZXhpc3RzKCkgb3Igb3JnYW5pemF0aW9uLmV4aXN0cygpGpgCCg1Db21tdW5pY2F0aW9uEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SPgoIbGFuZ3VhZ2UYBCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdEIG8NCH6wQBEi8KCXByZWZlcnJlZBgFIAEoCzIcLmdvb2dsZS5maGlyLnI0LmNvcmUuQm9vbGVhbhq+BAoETGluaxInCgJpZBgBIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nEjEKCWV4dGVuc2lvbhgCIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgDIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uElUKBW90aGVyGAQgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCJvDQh+sEAfL//MIGB1BhdGllbnTy//zCBg1SZWxhdGVkUGVyc29uEkAKBHR5cGUYBSABKAsyKi5nb29nbGUuZmhpci5yNC5jb3JlLlBhdGllbnQuTGluay5UeXBlQ29kZUIG8NCH6wQBGoQCCghUeXBlQ29kZRI2CgV2YWx1ZRgBIAEoDjInLmdvb2dsZS5maGlyLnI0LmNvcmUuTGlua1R5cGVDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246ZIr5g7IFJmh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbGluay10eXBlwJ/jtgUBmrWOkwYsaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NvZGU6O8Cf47YFA7L+5JcGL2h0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9QYXRpZW50SgQIBxAIQncKF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaVGdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvcGF0aWVudF9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Patient.
 * Information about an individual or animal receiving health care services.
 * See http://hl7.org/fhir/StructureDefinition/Patient
 *
 * @generated from message google.fhir.r4.core.Patient
 */
export type Patient = Message<"google.fhir.r4.core.Patient"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * An identifier for this patient
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * Whether this patient's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * A name associated with the patient
   *
   * @generated from field: repeated google.fhir.r4.core.HumanName name = 12;
   */
  name: HumanName[];

  /**
   * A contact detail for the individual
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 13;
   */
  telecom: ContactPoint[];

  /**
   * @generated from field: google.fhir.r4.core.Patient.GenderCode gender = 14;
   */
  gender?: Patient_GenderCode;

  /**
   * The date of birth for the individual
   *
   * @generated from field: google.fhir.r4.core.Date birth_date = 15;
   */
  birthDate?: Date;

  /**
   * @generated from field: google.fhir.r4.core.Patient.DeceasedX deceased = 16;
   */
  deceased?: Patient_DeceasedX;

  /**
   * An address for the individual
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 17;
   */
  address: Address[];

  /**
   * Marital (civil) status of a patient
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept marital_status = 18;
   */
  maritalStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Patient.MultipleBirthX multiple_birth = 19;
   */
  multipleBirth?: Patient_MultipleBirthX;

  /**
   * Image of the patient
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment photo = 20;
   */
  photo: Attachment[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Patient.Contact contact = 21;
   */
  contact: Patient_Contact[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Patient.Communication communication = 22;
   */
  communication: Patient_Communication[];

  /**
   * Patient's nominated primary care provider
   *
   * @generated from field: repeated google.fhir.r4.core.Reference general_practitioner = 23;
   */
  generalPractitioner: Reference[];

  /**
   * Organization that is the custodian of the patient record
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 24;
   */
  managingOrganization?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Patient.Link link = 25;
   */
  link: Patient_Link[];
};

/**
 * Describes the message google.fhir.r4.core.Patient.
 * Use `create(PatientSchema)` to create a new message.
 */
export const PatientSchema: GenMessage<Patient> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0);

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.core.Patient.GenderCode
 */
export type Patient_GenderCode = Message<"google.fhir.r4.core.Patient.GenderCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value: AdministrativeGenderCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Patient.GenderCode.
 * Use `create(Patient_GenderCodeSchema)` to create a new message.
 */
export const Patient_GenderCodeSchema: GenMessage<Patient_GenderCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 0);

/**
 * Indicates if the individual is deceased or not
 *
 * @generated from message google.fhir.r4.core.Patient.DeceasedX
 */
export type Patient_DeceasedX = Message<"google.fhir.r4.core.Patient.DeceasedX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Patient.DeceasedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Patient.DeceasedX.
 * Use `create(Patient_DeceasedXSchema)` to create a new message.
 */
export const Patient_DeceasedXSchema: GenMessage<Patient_DeceasedX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 1);

/**
 * Whether patient is part of a multiple birth
 *
 * @generated from message google.fhir.r4.core.Patient.MultipleBirthX
 */
export type Patient_MultipleBirthX = Message<"google.fhir.r4.core.Patient.MultipleBirthX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Patient.MultipleBirthX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 2;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Patient.MultipleBirthX.
 * Use `create(Patient_MultipleBirthXSchema)` to create a new message.
 */
export const Patient_MultipleBirthXSchema: GenMessage<Patient_MultipleBirthX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 2);

/**
 * A contact party (e.g. guardian, partner, friend) for the patient
 *
 * @generated from message google.fhir.r4.core.Patient.Contact
 */
export type Patient_Contact = Message<"google.fhir.r4.core.Patient.Contact"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The kind of relationship
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept relationship = 4;
   */
  relationship: CodeableConcept[];

  /**
   * A name associated with the contact person
   *
   * @generated from field: google.fhir.r4.core.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[];

  /**
   * Address for the contact person
   *
   * @generated from field: google.fhir.r4.core.Address address = 7;
   */
  address?: Address;

  /**
   * @generated from field: google.fhir.r4.core.Patient.Contact.GenderCode gender = 8;
   */
  gender?: Patient_Contact_GenderCode;

  /**
   * Organization that is associated with the contact
   *
   * @generated from field: google.fhir.r4.core.Reference organization = 9;
   */
  organization?: Reference;

  /**
   * The period during which this contact person or organization is valid to
   * be contacted relating to this patient
   *
   * @generated from field: google.fhir.r4.core.Period period = 10;
   */
  period?: Period;
};

/**
 * Describes the message google.fhir.r4.core.Patient.Contact.
 * Use `create(Patient_ContactSchema)` to create a new message.
 */
export const Patient_ContactSchema: GenMessage<Patient_Contact> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 3);

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.core.Patient.Contact.GenderCode
 */
export type Patient_Contact_GenderCode = Message<"google.fhir.r4.core.Patient.Contact.GenderCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value: AdministrativeGenderCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Patient.Contact.GenderCode.
 * Use `create(Patient_Contact_GenderCodeSchema)` to create a new message.
 */
export const Patient_Contact_GenderCodeSchema: GenMessage<Patient_Contact_GenderCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 3, 0);

/**
 * A language which may be used to communicate with the patient about his or
 * her health
 *
 * @generated from message google.fhir.r4.core.Patient.Communication
 */
export type Patient_Communication = Message<"google.fhir.r4.core.Patient.Communication"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The language which can be used to communicate with the patient about his
   * or her health
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept language = 4;
   */
  language?: CodeableConcept;

  /**
   * Language preference indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean preferred = 5;
   */
  preferred?: Boolean;
};

/**
 * Describes the message google.fhir.r4.core.Patient.Communication.
 * Use `create(Patient_CommunicationSchema)` to create a new message.
 */
export const Patient_CommunicationSchema: GenMessage<Patient_Communication> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 4);

/**
 * Link to another patient resource that concerns the same actual person
 *
 * @generated from message google.fhir.r4.core.Patient.Link
 */
export type Patient_Link = Message<"google.fhir.r4.core.Patient.Link"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * The other patient or related person resource that the link refers to
   *
   * @generated from field: google.fhir.r4.core.Reference other = 4;
   */
  other?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Patient.Link.TypeCode type = 5;
   */
  type?: Patient_Link_TypeCode;
};

/**
 * Describes the message google.fhir.r4.core.Patient.Link.
 * Use `create(Patient_LinkSchema)` to create a new message.
 */
export const Patient_LinkSchema: GenMessage<Patient_Link> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 5);

/**
 * replaced-by | replaces | refer | seealso
 *
 * @generated from message google.fhir.r4.core.Patient.Link.TypeCode
 */
export type Patient_Link_TypeCode = Message<"google.fhir.r4.core.Patient.Link.TypeCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.LinkTypeCode.Value value = 1;
   */
  value: LinkTypeCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.Patient.Link.TypeCode.
 * Use `create(Patient_Link_TypeCodeSchema)` to create a new message.
 */
export const Patient_Link_TypeCodeSchema: GenMessage<Patient_Link_TypeCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_patient, 0, 5, 0);

