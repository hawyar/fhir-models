//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/condition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { Age, Annotation, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Range, Reference, String, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/condition.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_condition: GenFile = /*@__PURE__*/
  fileDesc("Cjlwcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9jb25kaXRpb24ucHJvdG8SE2dvb2dsZS5maGlyLnI0LmNvcmUilhsKCUNvbmRpdGlvbhIjCgJpZBgBIAEoCzIXLmdvb2dsZS5maGlyLnI0LmNvcmUuSWQSJwoEbWV0YRgCIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuTWV0YRIwCg5pbXBsaWNpdF9ydWxlcxgDIAEoCzIYLmdvb2dsZS5maGlyLnI0LmNvcmUuVXJpEisKCGxhbmd1YWdlGAQgASgLMhkuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlEiwKBHRleHQYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLk5hcnJhdGl2ZRInCgljb250YWluZWQYBiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EjEKCWV4dGVuc2lvbhgIIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjoKEm1vZGlmaWVyX2V4dGVuc2lvbhgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuRXh0ZW5zaW9uEjMKCmlkZW50aWZpZXIYCiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLklkZW50aWZpZXISPQoPY2xpbmljYWxfc3RhdHVzGAsgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSQQoTdmVyaWZpY2F0aW9uX3N0YXR1cxgMIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EjYKCGNhdGVnb3J5GA0gAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSNgoIc2V2ZXJpdHkYDiABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBIyCgRjb2RlGA8gASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSNwoJYm9keV9zaXRlGBAgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSTwoHc3ViamVjdBgRIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQh7w0IfrBAHy//zCBgdQYXRpZW508v/8wgYFR3JvdXASQgoJZW5jb3VudGVyGBIgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCD/L//MIGCUVuY291bnRlchI0CgVvbnNldBgTIAEoCzIlLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29uZGl0aW9uLk9uc2V0WBI8CglhYmF0ZW1lbnQYFCABKAsyKS5nb29nbGUuZmhpci5yNC5jb3JlLkNvbmRpdGlvbi5BYmF0ZW1lbnRYEjQKDXJlY29yZGVkX2RhdGUYFSABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lEnoKCHJlY29yZGVyGBYgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCSPL//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGXy//zCBgdQYXRpZW508v/8wgYNUmVsYXRlZFBlcnNvbhJ6Cghhc3NlcnRlchgXIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQkjy//zCBgxQcmFjdGl0aW9uZXLy//zCBhBQcmFjdGl0aW9uZXJSb2xl8v/8wgYHUGF0aWVudPL//MIGDVJlbGF0ZWRQZXJzb24SMwoFc3RhZ2UYGCADKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvbmRpdGlvbi5TdGFnZRI5CghldmlkZW5jZRgZIAMoCzInLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29uZGl0aW9uLkV2aWRlbmNlEi0KBG5vdGUYGiADKAsyHy5nb29nbGUuZmhpci5yNC5jb3JlLkFubm90YXRpb24akAIKBk9uc2V0WBIyCglkYXRlX3RpbWUYASABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lSAASJwoDYWdlGAIgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5BZ2VIABItCgZwZXJpb2QYAyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlBlcmlvZEgAEisKBXJhbmdlGAQgASgLMhouZ29vZ2xlLmZoaXIucjQuY29yZS5SYW5nZUgAEjsKDHN0cmluZ192YWx1ZRgFIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nSABSBnN0cmluZzoGoIOD6AYBQggKBmNob2ljZRqUAgoKQWJhdGVtZW50WBIyCglkYXRlX3RpbWUYASABKAsyHS5nb29nbGUuZmhpci5yNC5jb3JlLkRhdGVUaW1lSAASJwoDYWdlGAIgASgLMhguZ29vZ2xlLmZoaXIucjQuY29yZS5BZ2VIABItCgZwZXJpb2QYAyABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlBlcmlvZEgAEisKBXJhbmdlGAQgASgLMhouZ29vZ2xlLmZoaXIucjQuY29yZS5SYW5nZUgAEjsKDHN0cmluZ192YWx1ZRgFIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nSABSBnN0cmluZzoGoIOD6AYBQggKBmNob2ljZRquAwoFU3RhZ2USJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI1CgdzdW1tYXJ5GAQgASgLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQScwoKYXNzZXNzbWVudBgFIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQj/y//zCBhJDbGluaWNhbEltcHJlc3Npb27y//zCBhBEaWFnbm9zdGljUmVwb3J08v/8wgYLT2JzZXJ2YXRpb24SMgoEdHlwZRgGIAEoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Oi2ahpOgCCdzdW1tYXJ5LmV4aXN0cygpIG9yIGFzc2Vzc21lbnQuZXhpc3RzKCkavgIKCEV2aWRlbmNlEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SMgoEY29kZRgEIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0Ej4KBmRldGFpbBgFIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghSZXNvdXJjZTommoaToAggY29kZS5leGlzdHMoKSBvciBkZXRhaWwuZXhpc3RzKCk6iQXAn+O2BQOy/uSXBjFodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9umoaToAi5AWFiYXRlbWVudC5lbXB0eSgpIG9yIGNsaW5pY2FsU3RhdHVzLmNvZGluZy53aGVyZShzeXN0ZW09J2h0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29uZGl0aW9uLWNsaW5pY2FsJyBhbmQgKGNvZGU9J3Jlc29sdmVkJyBvciBjb2RlPSdyZW1pc3Npb24nIG9yIGNvZGU9J2luYWN0aXZlJykpLmV4aXN0cygpmoaToAiiAXZlcmlmaWNhdGlvblN0YXR1cy5jb2Rpbmcud2hlcmUoc3lzdGVtPSdodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbmRpdGlvbi12ZXItc3RhdHVzJyBhbmQgY29kZT0nZW50ZXJlZC1pbi1lcnJvcicpLmVtcHR5KCkgb3IgY2xpbmljYWxTdGF0dXMuZW1wdHkoKZqvrqQL3AFjbGluaWNhbFN0YXR1cy5leGlzdHMoKSBvciB2ZXJpZmljYXRpb25TdGF0dXMuY29kaW5nLndoZXJlKHN5c3RlbT0naHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb25kaXRpb24tdmVyLXN0YXR1cycgYW5kIGNvZGUgPSAnZW50ZXJlZC1pbi1lcnJvcicpLmV4aXN0cygpIG9yIGNhdGVnb3J5LnNlbGVjdCgkdGhpcz0ncHJvYmxlbS1saXN0LWl0ZW0nKS5lbXB0eSgpSgQIBxAIQnkKF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaVmdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvY29uZGl0aW9uX2dvX3Byb3RvmMawtQcEYgZwcm90bzM", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for Condition.
 * Detailed information about conditions, problems or diagnoses.
 * See http://hl7.org/fhir/StructureDefinition/Condition
 *
 * @generated from message google.fhir.r4.core.Condition
 */
export type Condition = Message<"google.fhir.r4.core.Condition"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * External Ids for this condition
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * active | recurrence | relapse | inactive | remission | resolved
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept clinical_status = 11;
   */
  clinicalStatus?: CodeableConcept;

  /**
   * unconfirmed | provisional | differential | confirmed | refuted |
   * entered-in-error
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept verification_status = 12;
   */
  verificationStatus?: CodeableConcept;

  /**
   * problem-list-item | encounter-diagnosis
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[];

  /**
   * Subjective severity of condition
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept severity = 14;
   */
  severity?: CodeableConcept;

  /**
   * Identification of the condition, problem or diagnosis
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept body_site = 16;
   */
  bodySite: CodeableConcept[];

  /**
   * Who has the condition?
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 17;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Condition.OnsetX onset = 19;
   */
  onset?: Condition_OnsetX;

  /**
   * @generated from field: google.fhir.r4.core.Condition.AbatementX abatement = 20;
   */
  abatement?: Condition_AbatementX;

  /**
   * Date record was first recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded_date = 21;
   */
  recordedDate?: DateTime;

  /**
   * Who recorded the condition
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 22;
   */
  recorder?: Reference;

  /**
   * Person who asserts this condition
   *
   * @generated from field: google.fhir.r4.core.Reference asserter = 23;
   */
  asserter?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Condition.Stage stage = 24;
   */
  stage: Condition_Stage[];

  /**
   * @generated from field: repeated google.fhir.r4.core.Condition.Evidence evidence = 25;
   */
  evidence: Condition_Evidence[];

  /**
   * Additional information about the Condition
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 26;
   */
  note: Annotation[];
};

/**
 * Describes the message google.fhir.r4.core.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema: GenMessage<Condition> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_condition, 0);

/**
 * Estimated or actual date,  date-time, or age
 *
 * @generated from message google.fhir.r4.core.Condition.OnsetX
 */
export type Condition_OnsetX = Message<"google.fhir.r4.core.Condition.OnsetX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Condition.OnsetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Condition.OnsetX.
 * Use `create(Condition_OnsetXSchema)` to create a new message.
 */
export const Condition_OnsetXSchema: GenMessage<Condition_OnsetX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_condition, 0, 0);

/**
 * When in resolution/remission
 *
 * @generated from message google.fhir.r4.core.Condition.AbatementX
 */
export type Condition_AbatementX = Message<"google.fhir.r4.core.Condition.AbatementX"> & {
  /**
   * @generated from oneof google.fhir.r4.core.Condition.AbatementX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.fhir.r4.core.Condition.AbatementX.
 * Use `create(Condition_AbatementXSchema)` to create a new message.
 */
export const Condition_AbatementXSchema: GenMessage<Condition_AbatementX> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_condition, 0, 1);

/**
 * Stage/grade, usually assessed formally
 *
 * @generated from message google.fhir.r4.core.Condition.Stage
 */
export type Condition_Stage = Message<"google.fhir.r4.core.Condition.Stage"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Simple summary (disease specific)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept summary = 4;
   */
  summary?: CodeableConcept;

  /**
   * Formal record of assessment
   *
   * @generated from field: repeated google.fhir.r4.core.Reference assessment = 5;
   */
  assessment: Reference[];

  /**
   * Kind of staging
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;
};

/**
 * Describes the message google.fhir.r4.core.Condition.Stage.
 * Use `create(Condition_StageSchema)` to create a new message.
 */
export const Condition_StageSchema: GenMessage<Condition_Stage> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_condition, 0, 2);

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.r4.core.Condition.Evidence
 */
export type Condition_Evidence = Message<"google.fhir.r4.core.Condition.Evidence"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Manifestation/symptom
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 4;
   */
  code: CodeableConcept[];

  /**
   * Supporting information found elsewhere
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detail = 5;
   */
  detail: Reference[];
};

/**
 * Describes the message google.fhir.r4.core.Condition.Evidence.
 * Use `create(Condition_EvidenceSchema)` to create a new message.
 */
export const Condition_EvidenceSchema: GenMessage<Condition_Evidence> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_condition, 0, 3);

