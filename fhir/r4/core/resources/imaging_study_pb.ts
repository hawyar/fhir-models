//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/imaging_study.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_proto_google_fhir_proto_annotations } from "../../../annotations_pb";
import type { ImagingStudyStatusCode_Value } from "../codes_pb";
import { file_proto_google_fhir_proto_r4_core_codes } from "../codes_pb";
import type { Annotation, Code, CodeableConcept, Coding, DateTime, Extension, Id, Identifier, Meta, Narrative, Reference, String, UnsignedInt, Uri } from "../datatypes_pb";
import { file_proto_google_fhir_proto_r4_core_datatypes } from "../datatypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/google/fhir/proto/r4/core/resources/imaging_study.proto.
 */
export const file_proto_google_fhir_proto_r4_core_resources_imaging_study: GenFile = /*@__PURE__*/
  fileDesc("Cj1wcm90by9nb29nbGUvZmhpci9wcm90by9yNC9jb3JlL3Jlc291cmNlcy9pbWFnaW5nX3N0dWR5LnByb3RvEhNnb29nbGUuZmhpci5yNC5jb3JlItwdCgxJbWFnaW5nU3R1ZHkSIwoCaWQYASABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkEicKBG1ldGEYAiABKAsyGS5nb29nbGUuZmhpci5yNC5jb3JlLk1ldGESMAoOaW1wbGljaXRfcnVsZXMYAyABKAsyGC5nb29nbGUuZmhpci5yNC5jb3JlLlVyaRIrCghsYW5ndWFnZRgEIAEoCzIZLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZRIsCgR0ZXh0GAUgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5OYXJyYXRpdmUSJwoJY29udGFpbmVkGAYgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIxCglleHRlbnNpb24YCCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YCSADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIzCgppZGVudGlmaWVyGAogAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5JZGVudGlmaWVyEkQKBnN0YXR1cxgLIAEoCzIsLmdvb2dsZS5maGlyLnI0LmNvcmUuSW1hZ2luZ1N0dWR5LlN0YXR1c0NvZGVCBvDQh+sEARItCghtb2RhbGl0eRgMIAMoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kaW5nElsKB3N1YmplY3QYDSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIq8NCH6wQB8v/8wgYHUGF0aWVudPL//MIGBkRldmljZfL//MIGBUdyb3VwEkIKCWVuY291bnRlchgOIAEoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg/y//zCBglFbmNvdW50ZXISLgoHc3RhcnRlZBgPIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZVRpbWUSiAEKCGJhc2VkX29uGBAgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCVvL//MIGCENhcmVQbGFu8v/8wgYOU2VydmljZVJlcXVlc3Ty//zCBgtBcHBvaW50bWVudPL//MIGE0FwcG9pbnRtZW50UmVzcG9uc2Xy//zCBgRUYXNrEloKCHJlZmVycmVyGBEgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCKPL//MIGDFByYWN0aXRpb25lcvL//MIGEFByYWN0aXRpb25lclJvbGUSXQoLaW50ZXJwcmV0ZXIYEiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIo8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZRJACghlbmRwb2ludBgTIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghFbmRwb2ludBI6ChBudW1iZXJfb2Zfc2VyaWVzGBQgASgLMiAuZ29vZ2xlLmZoaXIucjQuY29yZS5VbnNpZ25lZEludBI9ChNudW1iZXJfb2ZfaW5zdGFuY2VzGBUgASgLMiAuZ29vZ2xlLmZoaXIucjQuY29yZS5VbnNpZ25lZEludBJMChNwcm9jZWR1cmVfcmVmZXJlbmNlGBYgASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCD/L//MIGCVByb2NlZHVyZRI8Cg5wcm9jZWR1cmVfY29kZRgXIAMoCzIkLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kZWFibGVDb25jZXB0EkAKCGxvY2F0aW9uGBggASgLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5SZWZlcmVuY2VCDvL//MIGCExvY2F0aW9uEjkKC3JlYXNvbl9jb2RlGBkgAygLMiQuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RlYWJsZUNvbmNlcHQSkgEKEHJlYXNvbl9yZWZlcmVuY2UYGiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJY8v/8wgYJQ29uZGl0aW9u8v/8wgYLT2JzZXJ2YXRpb27y//zCBgVNZWRpYfL//MIGEERpYWdub3N0aWNSZXBvcnTy//zCBhFEb2N1bWVudFJlZmVyZW5jZRItCgRub3RlGBsgAygLMh8uZ29vZ2xlLmZoaXIucjQuY29yZS5Bbm5vdGF0aW9uEjAKC2Rlc2NyaXB0aW9uGBwgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSOAoGc2VyaWVzGB0gAygLMiguZ29vZ2xlLmZoaXIucjQuY29yZS5JbWFnaW5nU3R1ZHkuU2VyaWVzGpoCCgpTdGF0dXNDb2RlEkAKBXZhbHVlGAEgASgOMjEuZ29vZ2xlLmZoaXIucjQuY29yZS5JbWFnaW5nU3R1ZHlTdGF0dXNDb2RlLlZhbHVlEicKAmlkGAIgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb246bor5g7IFMGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaW1hZ2luZ3N0dWR5LXN0YXR1c8Cf47YFAZq1jpMGLGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jb2RlGrwMCgZTZXJpZXMSJwoCaWQYASABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxIxCglleHRlbnNpb24YAiADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhI6ChJtb2RpZmllcl9leHRlbnNpb24YAyADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLkV4dGVuc2lvbhIsCgN1aWQYBCABKAsyFy5nb29nbGUuZmhpci5yNC5jb3JlLklkQgbw0IfrBAESMAoGbnVtYmVyGAUgASgLMiAuZ29vZ2xlLmZoaXIucjQuY29yZS5VbnNpZ25lZEludBI1Cghtb2RhbGl0eRgGIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kaW5nQgbw0IfrBAESMAoLZGVzY3JpcHRpb24YByABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLlN0cmluZxI9ChNudW1iZXJfb2ZfaW5zdGFuY2VzGAggASgLMiAuZ29vZ2xlLmZoaXIucjQuY29yZS5VbnNpZ25lZEludBJACghlbmRwb2ludBgJIAMoCzIeLmdvb2dsZS5maGlyLnI0LmNvcmUuUmVmZXJlbmNlQg7y//zCBghFbmRwb2ludBIuCglib2R5X3NpdGUYCiABKAsyGy5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGluZxIvCgpsYXRlcmFsaXR5GAsgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5Db2RpbmcSQAoIc3BlY2ltZW4YDCADKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUIO8v/8wgYIU3BlY2ltZW4SLgoHc3RhcnRlZBgNIAEoCzIdLmdvb2dsZS5maGlyLnI0LmNvcmUuRGF0ZVRpbWUSRQoJcGVyZm9ybWVyGA4gAygLMjIuZ29vZ2xlLmZoaXIucjQuY29yZS5JbWFnaW5nU3R1ZHkuU2VyaWVzLlBlcmZvcm1lchJDCghpbnN0YW5jZRgPIAMoCzIxLmdvb2dsZS5maGlyLnI0LmNvcmUuSW1hZ2luZ1N0dWR5LlNlcmllcy5JbnN0YW5jZRqHAwoJUGVyZm9ybWVyEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SNgoIZnVuY3Rpb24YBCABKAsyJC5nb29nbGUuZmhpci5yNC5jb3JlLkNvZGVhYmxlQ29uY2VwdBKpAQoFYWN0b3IYBSABKAsyHi5nb29nbGUuZmhpci5yNC5jb3JlLlJlZmVyZW5jZUJ68NCH6wQB8v/8wgYMUHJhY3RpdGlvbmVy8v/8wgYQUHJhY3RpdGlvbmVyUm9sZfL//MIGDE9yZ2FuaXphdGlvbvL//MIGCENhcmVUZWFt8v/8wgYHUGF0aWVudPL//MIGBkRldmljZfL//MIGDVJlbGF0ZWRQZXJzb24a5gIKCEluc3RhbmNlEicKAmlkGAEgASgLMhsuZ29vZ2xlLmZoaXIucjQuY29yZS5TdHJpbmcSMQoJZXh0ZW5zaW9uGAIgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SOgoSbW9kaWZpZXJfZXh0ZW5zaW9uGAMgAygLMh4uZ29vZ2xlLmZoaXIucjQuY29yZS5FeHRlbnNpb24SLAoDdWlkGAQgASgLMhcuZ29vZ2xlLmZoaXIucjQuY29yZS5JZEIG8NCH6wQBEjYKCXNvcF9jbGFzcxgFIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuQ29kaW5nQgbw0IfrBAESMAoGbnVtYmVyGAYgASgLMiAuZ29vZ2xlLmZoaXIucjQuY29yZS5VbnNpZ25lZEludBIqCgV0aXRsZRgHIAEoCzIbLmdvb2dsZS5maGlyLnI0LmNvcmUuU3RyaW5nOkDAn+O2BQOy/uSXBjRodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vSW1hZ2luZ1N0dWR5SgQIBxAIQn0KF2NvbS5nb29nbGUuZmhpci5yNC5jb3JlUAFaWmdpdGh1Yi5jb20vZ29vZ2xlL2ZoaXIvZ28vcHJvdG8vZ29vZ2xlL2ZoaXIvcHJvdG8vcjQvY29yZS9yZXNvdXJjZXMvaW1hZ2luZ19zdHVkeV9nb19wcm90b5jGsLUHBGIGcHJvdG8z", [file_google_protobuf_any, file_proto_google_fhir_proto_annotations, file_proto_google_fhir_proto_r4_core_codes, file_proto_google_fhir_proto_r4_core_datatypes]);

/**
 * Auto-generated from StructureDefinition for ImagingStudy.
 * A set of images produced in single study (one or more series of references
 * images). See http://hl7.org/fhir/StructureDefinition/ImagingStudy
 *
 * @generated from message google.fhir.r4.core.ImagingStudy
 */
export type ImagingStudy = Message<"google.fhir.r4.core.ImagingStudy"> & {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[];

  /**
   * Identifiers for the whole study
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[];

  /**
   * @generated from field: google.fhir.r4.core.ImagingStudy.StatusCode status = 11;
   */
  status?: ImagingStudy_StatusCode;

  /**
   * All series modality if actual acquisition modalities
   *
   * @generated from field: repeated google.fhir.r4.core.Coding modality = 12;
   */
  modality: Coding[];

  /**
   * Who or what is the subject of the study
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Encounter with which this imaging study is associated
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 14;
   */
  encounter?: Reference;

  /**
   * When the study was started
   *
   * @generated from field: google.fhir.r4.core.DateTime started = 15;
   */
  started?: DateTime;

  /**
   * Request fulfilled
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 16;
   */
  basedOn: Reference[];

  /**
   * Referring physician
   *
   * @generated from field: google.fhir.r4.core.Reference referrer = 17;
   */
  referrer?: Reference;

  /**
   * Who interpreted images
   *
   * @generated from field: repeated google.fhir.r4.core.Reference interpreter = 18;
   */
  interpreter: Reference[];

  /**
   * Study access endpoint
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 19;
   */
  endpoint: Reference[];

  /**
   * Number of Study Related Series
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number_of_series = 20;
   */
  numberOfSeries?: UnsignedInt;

  /**
   * Number of Study Related Instances
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number_of_instances = 21;
   */
  numberOfInstances?: UnsignedInt;

  /**
   * The performed Procedure reference
   *
   * @generated from field: google.fhir.r4.core.Reference procedure_reference = 22;
   */
  procedureReference?: Reference;

  /**
   * The performed procedure code
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept procedure_code = 23;
   */
  procedureCode: CodeableConcept[];

  /**
   * Where ImagingStudy occurred
   *
   * @generated from field: google.fhir.r4.core.Reference location = 24;
   */
  location?: Reference;

  /**
   * Why the study was requested
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 25;
   */
  reasonCode: CodeableConcept[];

  /**
   * Why was study performed
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 26;
   */
  reasonReference: Reference[];

  /**
   * User-defined comments
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 27;
   */
  note: Annotation[];

  /**
   * Institution-generated description
   *
   * @generated from field: google.fhir.r4.core.String description = 28;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ImagingStudy.Series series = 29;
   */
  series: ImagingStudy_Series[];
};

/**
 * Describes the message google.fhir.r4.core.ImagingStudy.
 * Use `create(ImagingStudySchema)` to create a new message.
 */
export const ImagingStudySchema: GenMessage<ImagingStudy> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_imaging_study, 0);

/**
 * registered | available | cancelled | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.ImagingStudy.StatusCode
 */
export type ImagingStudy_StatusCode = Message<"google.fhir.r4.core.ImagingStudy.StatusCode"> & {
  /**
   * @generated from field: google.fhir.r4.core.ImagingStudyStatusCode.Value value = 1;
   */
  value: ImagingStudyStatusCode_Value;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[];
};

/**
 * Describes the message google.fhir.r4.core.ImagingStudy.StatusCode.
 * Use `create(ImagingStudy_StatusCodeSchema)` to create a new message.
 */
export const ImagingStudy_StatusCodeSchema: GenMessage<ImagingStudy_StatusCode> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_imaging_study, 0, 0);

/**
 * Each study has one or more series of instances
 *
 * @generated from message google.fhir.r4.core.ImagingStudy.Series
 */
export type ImagingStudy_Series = Message<"google.fhir.r4.core.ImagingStudy.Series"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * DICOM Series Instance UID for the series
   *
   * @generated from field: google.fhir.r4.core.Id uid = 4;
   */
  uid?: Id;

  /**
   * Numeric identifier of this series
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number = 5;
   */
  number?: UnsignedInt;

  /**
   * The modality of the instances in the series
   *
   * @generated from field: google.fhir.r4.core.Coding modality = 6;
   */
  modality?: Coding;

  /**
   * A short human readable summary of the series
   *
   * @generated from field: google.fhir.r4.core.String description = 7;
   */
  description?: String;

  /**
   * Number of Series Related Instances
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number_of_instances = 8;
   */
  numberOfInstances?: UnsignedInt;

  /**
   * Series access endpoint
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 9;
   */
  endpoint: Reference[];

  /**
   * Body part examined
   *
   * @generated from field: google.fhir.r4.core.Coding body_site = 10;
   */
  bodySite?: Coding;

  /**
   * Body part laterality
   *
   * @generated from field: google.fhir.r4.core.Coding laterality = 11;
   */
  laterality?: Coding;

  /**
   * Specimen imaged
   *
   * @generated from field: repeated google.fhir.r4.core.Reference specimen = 12;
   */
  specimen: Reference[];

  /**
   * When the series started
   *
   * @generated from field: google.fhir.r4.core.DateTime started = 13;
   */
  started?: DateTime;

  /**
   * @generated from field: repeated google.fhir.r4.core.ImagingStudy.Series.Performer performer = 14;
   */
  performer: ImagingStudy_Series_Performer[];

  /**
   * @generated from field: repeated google.fhir.r4.core.ImagingStudy.Series.Instance instance = 15;
   */
  instance: ImagingStudy_Series_Instance[];
};

/**
 * Describes the message google.fhir.r4.core.ImagingStudy.Series.
 * Use `create(ImagingStudy_SeriesSchema)` to create a new message.
 */
export const ImagingStudy_SeriesSchema: GenMessage<ImagingStudy_Series> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_imaging_study, 0, 1);

/**
 * Who performed the series
 *
 * @generated from message google.fhir.r4.core.ImagingStudy.Series.Performer
 */
export type ImagingStudy_Series_Performer = Message<"google.fhir.r4.core.ImagingStudy.Series.Performer"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * Type of performance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Who performed the series
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;
};

/**
 * Describes the message google.fhir.r4.core.ImagingStudy.Series.Performer.
 * Use `create(ImagingStudy_Series_PerformerSchema)` to create a new message.
 */
export const ImagingStudy_Series_PerformerSchema: GenMessage<ImagingStudy_Series_Performer> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_imaging_study, 0, 1, 0);

/**
 * A single SOP instance from the series
 *
 * @generated from message google.fhir.r4.core.ImagingStudy.Series.Instance
 */
export type ImagingStudy_Series_Instance = Message<"google.fhir.r4.core.ImagingStudy.Series.Instance"> & {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[];

  /**
   * DICOM SOP Instance UID
   *
   * @generated from field: google.fhir.r4.core.Id uid = 4;
   */
  uid?: Id;

  /**
   * DICOM class type
   *
   * @generated from field: google.fhir.r4.core.Coding sop_class = 5;
   */
  sopClass?: Coding;

  /**
   * The number of this instance in the series
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number = 6;
   */
  number?: UnsignedInt;

  /**
   * Description of instance
   *
   * @generated from field: google.fhir.r4.core.String title = 7;
   */
  title?: String;
};

/**
 * Describes the message google.fhir.r4.core.ImagingStudy.Series.Instance.
 * Use `create(ImagingStudy_Series_InstanceSchema)` to create a new message.
 */
export const ImagingStudy_Series_InstanceSchema: GenMessage<ImagingStudy_Series_Instance> = /*@__PURE__*/
  messageDesc(file_proto_google_fhir_proto_r4_core_resources_imaging_study, 0, 1, 1);

